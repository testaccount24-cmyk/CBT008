//SBGOLOBE JOB ,'SAM GOLOB',CLASS=A,
//    MSGCLASS=X,NOTIFY=&SYSUID
//*
//* THIS JOB IS NOW SPLIT INTO SEVEN SEPARATE JOBS BECAUSE OF
//* IBM'S RESTRICTION THAT A JOB MAY NOT HAVE MORE THAN
//* 255 STEPS. THE FIRST JOB HAS 200 STEPS THE SECOND THE REST.
//* THE SEVENTH JOB WILL LOAD FILE 001 OF THE TAPE INTO A PRE-
//* DEFINED VSAM CLUSTER FOR INFO/MVS DATABASE PROCESSING (YOU
//* HAVE TO HAVE INFOMVS).
//*
//*
//*  YOU MAY HAVE A PROBLEM WITH SOME OF THESE FILES THAT ARE
//*  IEBCOPIED DOWN IF YOU TRY TO DROP TO A NON-3350 TYPE
//*  DEVICE SINCE MOST INPUT WAS FULL TRACK BLOCKED ON A 3350.
//*  THE ORIGINAL DCB'S ARE MARKED BELOW. YOU CAN DROP DOWN LOAD
//*  MODULES INTO A SMALLER BLOCKSIZE PDS, HOWEVER YOU WILL GET A
//*  WARNING MESSAGE AND YOU WILL NOT BE ABLE TO DO A COMPRESS
//*  IN PLACE ON THAT LIBRARY UNTIL YOU GET RID OF THE OFFENDING
//*  MEMBERS OR RELINK THEM BACK IN
//*
//*  YOU WILL GET THE FOLLOWING MESSAGE:
//*  IEB175I - WARNING INPUT RECORD IS GREATER THAN OUTPUT BLKSIZE
//*            DDNAME=XXXXXXXX,OUTPUT TTRN=00000000
//*
//*
//ASMFCL PROC  V1=CBT508,      -   INPUT TAPE VOLUME
//*            VO=CBTA01,      -   OUTPUT DASD VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             LAB=002,            INPUT TAPE LABEL NUMBER FOR PROGRAM
//             CLASS=A,        -   SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             WORK2=SYSDA,        DASD WORK TYPE
//             INDEX='CBT.V508', - FIRST LEVEL INDEX FOR DSNAME
//             DSP=PASS,           OUTPUT DATASET DISPOSITION
//             UNT=562,        -   TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=1,              PRIMARY ALLOCATION
//             SEC=1,              SECONDARY ALLOCATION
//             DIR=1,              NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             FM=FB               RECFM
//ASM     EXEC  PGM=ASMA90,REGION=1024K,COND=EVEN,PARM='OBJECT,NODECK'
//*SM     EXEC  PGM=IEV90,REGION=1024K,COND=EVEN,PARM='OBJECT,NODECK'
//SYSPRINT DD  SYSOUT=&CLASS
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.MODGEN,DISP=SHR
//SYSUT1   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT2   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT3   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSPUNCH DD  DUMMY
//SYSLIN   DD  DSN=&INDEX..FILE&LAB..OBJ,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE) VOL=SER=&VO
//SYSIN    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//LKED     EXEC  PGM=IEWL,REGION=600K,COND=(4,LT,ASM),PARM=LIST
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT1   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSLMOD  DD  DSN=&INDEX..FILE&LAB..LOAD(&P),DISP=(NEW,&DSP),
//             UNIT=&WORK1,
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE) VOL=SER=&VO
//SYSLIN   DD  DSN=&INDEX..FILE&LAB..OBJ,DISP=(OLD,&DSP),
//             LABEL=(&LAB,&TY)
//       PEND
//COPY   PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             WORK2=SYSDA,        DASD WORK TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=PDS,           THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             DIR=92,             NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK           ALLOC INCREMENT
//COPY     EXEC  PGM=IEBCOPY,REGION=600K,COND=EVEN
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT3   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT4   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT1   DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE),VOL=SER=&VO
//SYSIN    DD  DUMMY
//       PEND
//GENERO PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=DATA,          THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//GENER    EXEC  PGM=IEBGENER,REGION=600K,COND=EVEN
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT1   DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE),VOL=SER=&VO
//SYSIN    DD  DUMMY
//       PEND
//UPDATEO PROC V1=CBT508,          INPUT TAPE VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             P1=PDSLOAD,    (ISPF STATS AND MUCH QUICKER - USE THIS
//*                             PROGRAM INSTEAD OF IEBUPDTE. FILE 093)
//*            P1=IEBUPDTE,   PROGRAM TO PROCESS IEBUPDTE SYSIN
//*                           STREAM. YOU MAY USE THE NORMAL IBM PGM
//*                           OR YOU MAY HAVE INSTALLED THE PDSLOAD
//*                           PROGRAM FROM FILE 316 OF THE CBT TAPE
//*                           WHICH IS USEFUL FOR FILES UNLOADED BY
//*                           THE FAMOUS YALE OFFLOAD PROGRAM. CAN
//*                           CHANGE THE IMBEDDED '><' TO './' AT
//*                           RELOAD.
//*   ---->                    IF PDSLOAD,  USE SYSUT1 DD
//*   ---->                    IF IEBUPDTE, USE SYSIN  DD
//             STEPLB='CBT.V508.CBTCREAT.LOAD', LIBRARY CONTAINS PGM=P1
//             S='UPDTE(><)',      'NEW'           IF IEBUPDTE
//*   ---->                        'UPDTE(><)'     IF PDSLOAD
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=PDS,           THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             DIR=92,             NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//UPDATE1  EXEC  PGM=&P,REGION=512K,COND=EVEN
//STEPLIB  DD  DSN=CBT.V508.CBTCREAT.LOAD,DISP=SHR
//INPUT    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=VB,LRECL=94,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//OUTPUT   DD  DSN=&&TEMP,DISP=(NEW,PASS),
//             UNIT=&WORK1,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE) VOL=SER=&VO
//UPDATE2  EXEC  PGM=&P1,PARM='&S',COND=EVEN
//STEPLIB  DD  DSN=&STEPLB,DISP=SHR
//SYSPRINT DD  SYSOUT=&CLASS     <<====  DUMMY OUT TO CUT PRINTOUT
//*                            IF PDSLOAD,  USE SYSUT1 DD
//*                            IF IEBUPDTE, USE SYSIN  DD
//*YSIN    DD  DSN=&&TEMP,DISP=(OLD,DELETE)
//SYSUPLOG DD  DISP=SHR,DSN=CBT.V508.SYSUPLOG(FILE&LAB)
//SYSUT1   DD  DSN=&&TEMP,DISP=(OLD,DELETE)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE),VOL=SER=&VO
//       PEND
//GENER  PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             LAB=,               INPUT TAPE LABEL NUMBER
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=DATA,          THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32716,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//GENER    EXEC  PGM=&P,REGION=512K,COND=EVEN
//STEPLIB  DD  DSN=CBT.V508.CBTCREAT.LOAD,DISP=SHR
//INPUT    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=VB,LRECL=94,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//OUTPUT   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE),VOL=SER=&VO
//       PEND
//STEP101     EXEC UPDATEO,LAB=101
//STEP102     EXEC UPDATEO,LAB=102
//STEP103     EXEC UPDATEO,LAB=103
//STEP104     EXEC UPDATEO,LAB=104
//STEP105     EXEC UPDATEO,LAB=105
//STEP106     EXEC UPDATEO,LAB=106
//STEP107     EXEC UPDATEO,LAB=107
//STEP108     EXEC UPDATEO,LAB=108
//STEP109     EXEC UPDATEO,LAB=109
//STEP110     EXEC GENERO,LAB=110,FM=FBA,LR=133,BKI=32718,BKO=6118
//STEP111     EXEC UPDATEO,LAB=111
//STEP112     EXEC UPDATEO,LAB=112
//STEP113     EXEC UPDATEO,LAB=113
//STEP114     EXEC UPDATEO,LAB=114
//STEP115     EXEC COPY,LAB=115   DCB=RECFM=VB,BLKSIZE=6156,LRECL=104
//STEP116     EXEC UPDATEO,LAB=116
//STEP117     EXEC UPDATEO,LAB=117
//STEP118     EXEC UPDATEO,LAB=118
//STEP119     EXEC UPDATEO,LAB=119
//STEP120     EXEC UPDATEO,LAB=120
//STEP121     EXEC COPY,LAB=121
//STEP122     EXEC UPDATEO,LAB=122
//STEP123     EXEC UPDATEO,LAB=123
//STEP124     EXEC UPDATEO,LAB=124
//STEP125     EXEC UPDATEO,LAB=125
//STEP126     EXEC UPDATEO,LAB=126
//STEP127     EXEC UPDATEO,LAB=127
//STEP128     EXEC UPDATEO,LAB=128
//STEP129     EXEC UPDATEO,LAB=129
//STEP130     EXEC UPDATEO,LAB=130
//STEP131     EXEC UPDATEO,LAB=131
//STEP132     EXEC UPDATEO,LAB=132
//STEP133     EXEC UPDATEO,LAB=133
//STEP134     EXEC UPDATEO,LAB=134
//STEP135     EXEC COPY,LAB=135   DCB=RECFM=U,BLKSIZE=19069
//STEP136     EXEC UPDATEO,LAB=136
//STEP137     EXEC UPDATEO,LAB=137
//STEP138     EXEC UPDATEO,LAB=138
//STEP139     EXEC UPDATEO,LAB=139
//STEP140     EXEC UPDATEO,LAB=140
//STEP141     EXEC UPDATEO,LAB=141
//STEP142     EXEC UPDATEO,LAB=142
//STEP143     EXEC UPDATEO,LAB=143
//STEP144     EXEC UPDATEO,LAB=144
//STEP145     EXEC COPY,LAB=145   DCB=RECFM=U,BLKSIZE=6144
//STEP146     EXEC UPDATEO,LAB=146
//STEP147     EXEC UPDATEO,LAB=147   >>> GETS RC=4 WITH IEBUPDTE
//STEP148     EXEC UPDATEO,LAB=148
//STEP149     EXEC UPDATEO,LAB=149
//STEP150     EXEC UPDATEO,LAB=150
//STEP151     EXEC UPDATEO,LAB=151
//STEP152     EXEC UPDATEO,LAB=152
//STEP153     EXEC COPY,LAB=153  DCB=RECFM=VBM,LRECL=8205,BLISIZE=8209
//STEP154     EXEC UPDATEO,LAB=154
//STEP155     EXEC UPDATEO,LAB=155
//STEP156     EXEC UPDATEO,LAB=156   >>> GETS RC=4 WITH IEBUPDTE
//STEP157     EXEC GENERO,LAB=157,FM=FBA,LR=133,BKI=32718,BKO=6118
//STEP158     EXEC UPDATEO,LAB=158
//STEP159     EXEC UPDATEO,LAB=159
//STEP160     EXEC UPDATEO,LAB=160
//STEP161     EXEC UPDATEO,LAB=161
//STEP162     EXEC UPDATEO,LAB=162
//STEP163     EXEC UPDATEO,LAB=163
//STEP164     EXEC UPDATEO,LAB=164
//STEP165     EXEC UPDATEO,LAB=165
//STEP166     EXEC UPDATEO,LAB=166
//STEP167     EXEC UPDATEO,LAB=167
//STEP168     EXEC UPDATEO,LAB=168
//STEP169     EXEC UPDATEO,LAB=169
//STEP170     EXEC UPDATEO,LAB=170
//STEP171     EXEC UPDATEO,LAB=171
//STEP172     EXEC UPDATEO,LAB=172
//STEP173     EXEC UPDATEO,LAB=173
//STEP174     EXEC UPDATEO,LAB=174
//STEP175     EXEC UPDATEO,LAB=175
//STEP176     EXEC UPDATEO,LAB=176
//STEP177     EXEC UPDATEO,LAB=177
//STEP178     EXEC UPDATEO,LAB=178
//STEP179     EXEC UPDATEO,LAB=179
//STEP180     EXEC UPDATEO,LAB=180
//STEP181     EXEC UPDATEO,LAB=181
//STEP182     EXEC UPDATEO,LAB=182,DIR=179
//STEP183     EXEC UPDATEO,LAB=183
//STEP184     EXEC UPDATEO,LAB=184
//STEP185     EXEC UPDATEO,LAB=185
//STEP186     EXEC UPDATEO,LAB=186
//STEP187     EXEC UPDATEO,LAB=187
//STEP188     EXEC UPDATEO,LAB=188
//STEP189     EXEC COPY,LAB=189   DCB=RECFM=FBA,LRECL=133,BLKSIZE=15428
//STEP190     EXEC UPDATEO,LAB=190
//STEP191     EXEC UPDATEO,LAB=191
//STEP192     EXEC UPDATEO,LAB=192
//STEP193     EXEC UPDATEO,LAB=193
//STEP194     EXEC UPDATEO,LAB=194
//STEP195     EXEC UPDATEO,LAB=195
//STEP196     EXEC UPDATEO,LAB=196
//STEP197     EXEC UPDATEO,LAB=197
//STEP198     EXEC UPDATEO,LAB=198
//STEP199     EXEC UPDATEO,LAB=199
//STEP200     EXEC UPDATEO,LAB=200
