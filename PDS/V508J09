//SBGOLOBE JOB ,'SAM GOLOB',CLASS=A,
//    MSGCLASS=X,NOTIFY=&SYSUID
//*
//* THIS JOB IS NOW SPLIT INTO SEVEN SEPARATE JOBS BECAUSE OF
//* IBM'S RESTRICTION THAT A JOB MAY NOT HAVE MORE THAN
//* 255 STEPS. THE FIRST JOB HAS 200 STEPS THE SECOND THE REST.
//* THE SEVENTH JOB WILL LOAD FILE 001 OF THE TAPE INTO A PRE-
//* DEFINED VSAM CLUSTER FOR INFO/MVS DATABASE PROCESSING (YOU
//* HAVE TO HAVE INFOMVS).
//*
//*
//*  YOU MAY HAVE A PROBLEM WITH SOME OF THESE FILES THAT ARE
//*  IEBCOPIED DOWN IF YOU TRY TO DROP TO A NON-3350 TYPE
//*  DEVICE SINCE MOST INPUT WAS FULL TRACK BLOCKED ON A 3350.
//*  THE ORIGINAL DCB'S ARE MARKED BELOW. YOU CAN DROP DOWN LOAD
//*  MODULES INTO A SMALLER BLOCKSIZE PDS, HOWEVER YOU WILL GET A
//*  WARNING MESSAGE AND YOU WILL NOT BE ABLE TO DO A COMPRESS
//*  IN PLACE ON THAT LIBRARY UNTIL YOU GET RID OF THE OFFENDING
//*  MEMBERS OR RELINK THEM BACK IN
//*
//*  YOU WILL GET THE FOLLOWING MESSAGE:
//*  IEB175I - WARNING INPUT RECORD IS GREATER THAN OUTPUT BLKSIZE
//*            DDNAME=XXXXXXXX,OUTPUT TTRN=00000000
//*
//*
//ASMFCL PROC  V1=CBT508,      -   INPUT TAPE VOLUME
//*            VO=CBTA01,      -   OUTPUT DASD VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             LAB=002,            INPUT TAPE LABEL NUMBER FOR PROGRAM
//             CLASS=A,        -   SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             WORK2=SYSDA,        DASD WORK TYPE
//             INDEX='CBT.V508', - FIRST LEVEL INDEX FOR DSNAME
//             DSP=PASS,           OUTPUT DATASET DISPOSITION
//             UNT=562,        -   TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=1,              PRIMARY ALLOCATION
//             SEC=1,              SECONDARY ALLOCATION
//             DIR=1,              NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             FM=FB               RECFM
//ASM     EXEC  PGM=ASMA90,REGION=1024K,COND=EVEN,PARM='OBJECT,NODECK'
//*SM     EXEC  PGM=IEV90,REGION=1024K,COND=EVEN,PARM='OBJECT,NODECK'
//SYSPRINT DD  SYSOUT=&CLASS
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.MODGEN,DISP=SHR
//SYSUT1   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT2   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT3   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSPUNCH DD  DUMMY
//SYSLIN   DD  DSN=&INDEX..FILE&LAB..OBJ,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE) VOL=SER=&VO
//SYSIN    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//LKED     EXEC  PGM=IEWL,REGION=600K,COND=(4,LT,ASM),PARM=LIST
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT1   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSLMOD  DD  DSN=&INDEX..FILE&LAB..LOAD(&P),DISP=(NEW,&DSP),
//             UNIT=&WORK1,
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE) VOL=SER=&VO
//SYSLIN   DD  DSN=&INDEX..FILE&LAB..OBJ,DISP=(OLD,&DSP),
//             LABEL=(&LAB,&TY)
//       PEND
//COPY   PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             WORK2=SYSDA,        DASD WORK TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=PDS,           THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             DIR=92,             NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK           ALLOC INCREMENT
//COPY     EXEC  PGM=IEBCOPY,REGION=600K,COND=EVEN
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT3   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT4   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT1   DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE),VOL=SER=&VO
//SYSIN    DD  DUMMY
//       PEND
//GENERO PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=DATA,          THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//GENER    EXEC  PGM=IEBGENER,REGION=600K,COND=EVEN
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT1   DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE),VOL=SER=&VO
//SYSIN    DD  DUMMY
//       PEND
//UPDATEO PROC V1=CBT508,          INPUT TAPE VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             P1=PDSLOAD,    (ISPF STATS AND MUCH QUICKER - USE THIS
//*                             PROGRAM INSTEAD OF IEBUPDTE. FILE 093)
//*            P1=IEBUPDTE,   PROGRAM TO PROCESS IEBUPDTE SYSIN
//*                           STREAM. YOU MAY USE THE NORMAL IBM PGM
//*                           OR YOU MAY HAVE INSTALLED THE PDSLOAD
//*                           PROGRAM FROM FILE 316 OF THE CBT TAPE
//*                           WHICH IS USEFUL FOR FILES UNLOADED BY
//*                           THE FAMOUS YALE OFFLOAD PROGRAM. CAN
//*                           CHANGE THE IMBEDDED '><' TO './' AT
//*                           RELOAD.
//*   ---->                    IF PDSLOAD,  USE SYSUT1 DD
//*   ---->                    IF IEBUPDTE, USE SYSIN  DD
//             STEPLB='CBT.V508.CBTCREAT.LOAD', LIBRARY CONTAINS PGM=P1
//             S='UPDTE(><)',      'NEW'           IF IEBUPDTE
//*   ---->                        'UPDTE(><)'     IF PDSLOAD
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=PDS,           THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             DIR=92,             NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//UPDATE1  EXEC  PGM=&P,REGION=2048K,COND=EVEN
//STEPLIB  DD  DSN=CBT.V508.CBTCREAT.LOAD,DISP=SHR
//INPUT    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=VB,LRECL=94,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//OUTPUT   DD  DSN=&&TEMP,DISP=(NEW,PASS),
//             UNIT=&WORK1,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE) VOL=SER=&VO
//UPDATE2  EXEC  PGM=&P1,PARM='&S',COND=EVEN
//STEPLIB  DD  DSN=&STEPLB,DISP=SHR
//SYSPRINT DD  SYSOUT=&CLASS     <<====  DUMMY OUT TO CUT PRINTOUT
//*                            IF PDSLOAD,  USE SYSUT1 DD
//*                            IF IEBUPDTE, USE SYSIN  DD
//*YSIN    DD  DSN=&&TEMP,DISP=(OLD,DELETE)
//SYSUPLOG DD  DISP=SHR,DSN=CBT.V508.SYSUPLOG(FILE&LAB)
//SYSUT1   DD  DSN=&&TEMP,DISP=(OLD,DELETE)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE),VOL=SER=&VO
//       PEND
//GENER  PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             LAB=,               INPUT TAPE LABEL NUMBER
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=DATA,          THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32716,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//GENER    EXEC  PGM=&P,REGION=512K,COND=EVEN
//STEPLIB  DD  DSN=CBT.V508.CBTCREAT.LOAD,DISP=SHR
//INPUT    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=VB,LRECL=94,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//OUTPUT   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE),VOL=SER=&VO
//       PEND
//STEP801     EXEC UPDATEO,LAB=801
//STEP802     EXEC UPDATEO,LAB=802
//STEP803     EXEC UPDATEO,LAB=803
//STEP804     EXEC UPDATEO,LAB=804
//STEP805     EXEC UPDATEO,LAB=805
//STEP806     EXEC UPDATEO,LAB=806
//STEP807     EXEC UPDATEO,LAB=807
//STEP808     EXEC GENERO,LAB=808,LR=80,BKI=5600,FM=FB,BKO=5600
//STEP809     EXEC UPDATEO,LAB=809
//STEP810     EXEC UPDATEO,LAB=810
//STEP811     EXEC UPDATEO,LAB=811
//STEP812     EXEC UPDATEO,LAB=812
//STEP813     EXEC UPDATEO,LAB=813
//STEP814     EXEC UPDATEO,LAB=814
//STEP815     EXEC UPDATEO,LAB=815
//STEP816     EXEC UPDATEO,LAB=816
//STEP817     EXEC UPDATEO,LAB=817
//STEP818     EXEC UPDATEO,LAB=818
//STEP819     EXEC UPDATEO,LAB=819
//STEP820     EXEC UPDATEO,LAB=820
//STEP821     EXEC UPDATEO,LAB=821
//STEP822     EXEC UPDATEO,LAB=822
//STEP823     EXEC UPDATEO,LAB=823
//STEP824     EXEC UPDATEO,LAB=824
//STEP825     EXEC UPDATEO,LAB=825
//STEP826     EXEC UPDATEO,LAB=826
//STEP827     EXEC UPDATEO,LAB=827
//STEP828     EXEC UPDATEO,LAB=828
//STEP829     EXEC UPDATEO,LAB=829
//STEP830     EXEC UPDATEO,LAB=830,DIR=224
//STEP831     EXEC UPDATEO,LAB=831
//STEP832     EXEC UPDATEO,LAB=832
//STEP833     EXEC UPDATEO,LAB=833
//STEP834     EXEC UPDATEO,LAB=834
//STEP835     EXEC UPDATEO,LAB=835
//STEP836     EXEC UPDATEO,LAB=836
//STEP837     EXEC UPDATEO,LAB=837
//STEP838     EXEC UPDATEO,LAB=838
//STEP839     EXEC UPDATEO,LAB=839
//STEP840     EXEC UPDATEO,LAB=840
//STEP841     EXEC UPDATEO,LAB=841
//STEP842     EXEC UPDATEO,LAB=842
//STEP843     EXEC UPDATEO,LAB=843
//STEP844     EXEC UPDATEO,LAB=844
//STEP845     EXEC UPDATEO,LAB=845
//STEP846     EXEC UPDATEO,LAB=846
//STEP847     EXEC UPDATEO,LAB=847,PRI=600
//STEP848     EXEC UPDATEO,LAB=848
//STEP849     EXEC UPDATEO,LAB=849
//STEP850     EXEC UPDATEO,LAB=850
//STEP851     EXEC UPDATEO,LAB=851
//STEP852     EXEC UPDATEO,LAB=852,PRI=1635,BKO=12000
//STEP853     EXEC UPDATEO,LAB=853,PRI=1950,BKO=12000
//STEP854     EXEC UPDATEO,LAB=854,PRI=210
//STEP855     EXEC UPDATEO,LAB=855
//STEP856     EXEC UPDATEO,LAB=856
//STEP857     EXEC UPDATEO,LAB=857
//STEP858     EXEC UPDATEO,LAB=858
//STEP859     EXEC UPDATEO,LAB=859,PRI=255
//STEP860     EXEC UPDATEO,LAB=860,PRI=810
//STEP861     EXEC UPDATEO,LAB=861
//STEP862     EXEC UPDATEO,LAB=862,PRI=270
//STEP863     EXEC UPDATEO,LAB=863
//STEP864     EXEC UPDATEO,LAB=864
//STEP865     EXEC UPDATEO,LAB=865
//STEP866     EXEC UPDATEO,LAB=866
//STEP867     EXEC UPDATEO,LAB=867
//STEP868     EXEC UPDATEO,LAB=868
//STEP869     EXEC UPDATEO,LAB=869,PRI=275
//STEP870     EXEC UPDATEO,LAB=870
//STEP871     EXEC UPDATEO,LAB=871
//STEP872     EXEC UPDATEO,LAB=872
//STEP873     EXEC UPDATEO,LAB=873
//STEP874     EXEC UPDATEO,LAB=874
//STEP875     EXEC UPDATEO,LAB=875,PRI=255
//STEP876     EXEC UPDATEO,LAB=876,PRI=270
//STEP877     EXEC UPDATEO,LAB=877
//STEP878     EXEC UPDATEO,LAB=878
//STEP879     EXEC UPDATEO,LAB=879
//STEP880     EXEC UPDATEO,LAB=880,PRI=300
//STEP881     EXEC UPDATEO,LAB=881
//STEP882     EXEC UPDATEO,LAB=882
//STEP883     EXEC UPDATEO,LAB=883,PRI=600
//STEP884     EXEC UPDATEO,LAB=884,PRI=300
//STEP885     EXEC UPDATEO,LAB=885
//STEP886     EXEC UPDATEO,LAB=886
//STEP887     EXEC UPDATEO,LAB=887,PRI=240
//STEP888     EXEC UPDATEO,LAB=888,PRI=1290
//STEP889     EXEC UPDATEO,LAB=889,PRI=525
//STEP890     EXEC UPDATEO,LAB=890,PRI=675
//STEP891     EXEC UPDATEO,LAB=891
//STEP892     EXEC UPDATEO,LAB=892
//STEP893     EXEC UPDATEO,LAB=893
//STEP894     EXEC UPDATEO,LAB=894
//STEP895     EXEC UPDATEO,LAB=895
//STEP896     EXEC UPDATEO,LAB=896
//STEP897     EXEC UPDATEO,LAB=897,PRI=300
//STEP898     EXEC UPDATEO,LAB=898,PRI=900
//STEP899     EXEC UPDATEO,LAB=899
//STEP900     EXEC UPDATEO,LAB=900
