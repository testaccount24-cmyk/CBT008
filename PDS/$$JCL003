//SBGOLOBE JOB ,'SAM GOLOB',CLASS=A,
//    MSGCLASS=X,NOTIFY=&SYSUID
//*
//*
//*  IT IS BETTER TO USE PDSLOAD THAN IEBUPDTE FOR THE UPDATEO PROC.
//*  -->>>  UPDATEO IS THE FORMAT OF MOST FILES ON THIS TAPE  <<<--
//*  PDSLOAD LOADS ISPF STATS WHEN THEY ARE AVAILABLE.  ALSO, NULL
//*  MEMBERS OF PDS'ES WILL GET LOST WITH IEBUPDTE (AND WILL GET RC 4),
//*  BUT WHEN USING PDSLOAD, THESE NULL MEMBERS WILL NOT GET LOST.
//*
//*  ALSO, THE OUTPUT FROM PDSLOAD IS MUCH SHORTER THAN FROM IEBUPDTE,
//*  AND RUN TIMES ARE MUCH SHORTER.
//*
//*  FILES WITH NULL MEMBERS ARE MARKED:   >>> GETS RC=4 WITH IEBUPDTE
//*
//* (THE LOAD MODULE FOR PDSLOAD CAN NOW BE FOUND ON FILE 035.)
//*
//* ASSEMBLER:   IFOX00 HAS BEEN CHANGED TO IEV90.  IF YOU ONLY HAVE
//* IFOX00, THEN CHANGE DDNAME "SYSLIN" IN THE //ASM STEP TO SYSGO.
//* MAKE THIS CHANGE IN ALL SEVEN PLACES. NOTE THAT THE //LKED STEP
//* ALSO HAS A SYSLIN DDNAME.  DON'T CHANGE THAT ONE.
//*
//* IEV90 HAS BEEN CHANGED TO ASMA90.  TO USE IEV90, UNCOMMENT AND
//* COMMENT THE APPROPRIATE LINES IN THE //ASM STEPS (6 OF THEM).
//*
//* >>>  NOTE:  DEFAULT REGION SIZES HAVE BEEN CHANGED FROM      <<<
//* >>>  256K TO 600K.  IF NOT BIG ENOUGH, PLEASE REPORT         <<<
//* >>>  THIS SITUATION TO ME.  (SAM GOLOB - SBGOLOB@IBM.NET OR  <<<
//* >>>                                      SBGOLOB@AOL.COM   ) <<<
//*
//* THIS JOB IS NOW SPLIT INTO SEVEN SEPARATE JOBS BECAUSE OF
//* IBM'S RESTRICTION THAT A JOB MAY NOT HAVE MORE THAN
//* 255 STEPS. THE FIRST JOB HAS 100 STEPS THE SECOND THE NEXT 100...
//* THE SEVENTH JOB WILL LOAD FILE 001 OF THE TAPE INTO A PRE-
//* DEFINED VSAM CLUSTER FOR INFO/MVS DATABASE PROCESSING (YOU
//* HAVE TO HAVE INFOMVS).
//*
//*  YOU MAY HAVE A PROBLEM WITH SOME OF THESE FILES THAT ARE
//*  IEBCOPIED DOWN IF YOU TRY TO DROP TO A NON-3350 TYPE
//*  DEVICE SINCE MOST INPUT WAS FULL TRACK BLOCKED ON A 3350.
//*  THE ORIGINAL DCB'S ARE MARKED BELOW. YOU CAN DROP DOWN LOAD
//*  MODULES INTO A SMALLER BLOCKSIZE PDS, HOWEVER YOU WILL GET A
//*  WARNING MESSAGE AND YOU WILL NOT BE ABLE TO DO A COMPRESS
//*  IN PLACE ON THAT LIBRARY UNTIL YOU GET RID OF THE OFFENDING
//*  MEMBERS OR RELINK THEM BACK IN.  (SEE NEXT NOTE)
//*
//*  ON DFP SYSTEMS, IEBCOPY HAS THE COPYMOD OPTION
//*  WHICH WILL REBLOCK THE OUTPUT MODULES, SO THE ENDS OF
//*  ANY LONG BLOCKS WILL NOT GET LOST.  INSTEAD OF THE
//*  CONTROL CARD, COPY, USE COPYMOD ...,MAXBLK=6144 OR SOME
//*  OTHER, SMALL ENOUGH VALUE FOR THE OUTPUT BLOCK SIZE.
//*
//*  IF YOU STAY WITH 'COPY', YOU MAY GET THE FOLLOWING MESSAGE:
//*  IEB175I - WARNING INPUT RECORD IS GREATER THAN OUTPUT BLKSIZE
//*            DDNAME=XXXXXXXX,OUTPUT TTRN=00000000
//*
//*  NEXT NOTE:  HOWEVER, MOST OF US ARE RUNNING ON VERY MODERN
//*              SYSTEMS AND ARE USING 3380 OR 3390 DISK PACKS,
//*              OR OTHER DASD WITH LARGER TRACK SIZES THAN 19069,
//*              WHICH IS THE TRACK SIZE OF A 3350 DISK PACK.
//*              THEREFORE, SINCE WE'RE NOT TRYING TO LOAD TO A
//*              3330 (TRACK SIZE 13030), THERE'S NO PROBLEM.
//*
//*              IF WE WOULD (PERCHANCE) WANT TO CUT THE BLOCKSIZE
//*              OF AN IEBCOPY-UNLOADED LOAD LIBRARY ON THIS TAPE,
//*              DO AS FOLLOWS:
//*
//*              WE CAN OVERRIDE THE SYSIN DDNAME ON THE "COPY"
//*              PROC AS BELOW.  OUR SYSTEM HAS TO BE RUNNING A "DFP"
//*              VERSION OF IEBCOPY, AS OPPOSED TO "PRE-DFP", SO
//*              THAT THE COPYMOD KEYWORD WILL WORK.
//*
//*       //SYSIN  DD  *
//*         COPYMOD I=SYSUT1,O=SYSUT2,MAXBLK=6144
//*       /*
//*
//*         (WHERE 6144 CAN BE ANY SMALL BLOCKSIZE OF YOUR CHOICE)
//*
//*
//ASMFCL PROC  V1=CBT508,      -   INPUT TAPE VOLUME
//*            VO=CBTA01,      -   OUTPUT DASD VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             LAB=002,            INPUT TAPE LABEL NUMBER FOR PROGRAM
//             CLASS=A,        -   SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             WORK2=SYSDA,        DASD WORK TYPE
//             INDEX='CBT.V508', - FIRST LEVEL INDEX FOR DSNAME
//             DSP=PASS,           OUTPUT DATASET DISPOSITION
//             UNT=562,        -   TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=1,              PRIMARY ALLOCATION
//             SEC=1,              SECONDARY ALLOCATION
//             DIR=1,              NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             FM=FB               RECFM
//ASM     EXEC  PGM=ASMA90,REGION=1024K,COND=EVEN,PARM='OBJECT,NODECK'
//*SM     EXEC  PGM=IEV90,REGION=1024K,COND=EVEN,PARM='OBJECT,NODECK'
//SYSPRINT DD  SYSOUT=&CLASS
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.MODGEN,DISP=SHR
//SYSUT1   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT2   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT3   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSPUNCH DD  DUMMY
//SYSLIN   DD  DSN=&INDEX..FILE&LAB..OBJ,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE) VOL=SER=&VO
//SYSIN    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//LKED     EXEC  PGM=IEWL,REGION=600K,COND=(4,LT,ASM),PARM=LIST
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT1   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSLMOD  DD  DSN=&INDEX..FILE&LAB..LOAD(&P),DISP=(NEW,&DSP),
//             UNIT=&WORK1,
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR)) VOL=SER=&VO
//SYSLIN   DD  DSN=&INDEX..FILE&LAB..OBJ,DISP=(OLD,&DSP),
//             LABEL=(&LAB,&TY)
//       PEND
//COPY   PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             WORK2=SYSDA,        DASD WORK TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=PDS,           THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             DIR=92,             NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK           ALLOC INCREMENT
//COPY     EXEC  PGM=IEBCOPY,REGION=600K,COND=EVEN
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT3   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT4   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT1   DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE),VOL=SER=&VO
//SYSIN    DD  DUMMY
//       PEND
//GENERO PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=DATA,          THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//GENER    EXEC  PGM=IEBGENER,REGION=600K,COND=EVEN
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT1   DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE),VOL=SER=&VO
//SYSIN    DD  DUMMY
//       PEND
//UPDATEO PROC V1=CBT508,          INPUT TAPE VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             P1=PDSLOAD,    (ISPF STATS AND MUCH QUICKER - USE THIS
//*                             PROGRAM INSTEAD OF IEBUPDTE. FILE 093)
//*            P1=IEBUPDTE,   PROGRAM TO PROCESS IEBUPDTE SYSIN
//*                           STREAM. YOU MAY USE THE NORMAL IBM PGM
//*                           OR YOU MAY HAVE INSTALLED THE PDSLOAD
//*                           PROGRAM FROM FILE 316 OF THE CBT TAPE
//*                           WHICH IS USEFUL FOR FILES UNLOADED BY
//*                           THE FAMOUS YALE OFFLOAD PROGRAM. CAN
//*                           CHANGE THE IMBEDDED '><' TO './' AT
//*                           RELOAD.
//*   ---->                    IF PDSLOAD,  USE SYSUT1 DD
//*   ---->                    IF IEBUPDTE, USE SYSIN  DD
//             STEPLB='SYS1.CBT.LINKLIB', LIBRARY CONTAINS PGM=P1
//             S='UPDTE(><)',      'NEW'           IF IEBUPDTE
//*   ---->                        'UPDTE(><)'     IF PDSLOAD
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=PDS,           THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             DIR=92,             NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//UPDATE1  EXEC  PGM=&P,REGION=512K,COND=EVEN
//STEPLIB  DD  DSN=SYS1.CBT.LINKLIB,DISP=SHR
//INPUT    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=VB,LRECL=94,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//OUTPUT   DD  DSN=&&TEMP,DISP=(NEW,PASS),
//             UNIT=&WORK1,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE) VOL=SER=&VO
//UPDATE2  EXEC  PGM=&P1,PARM='&S',COND=EVEN
//STEPLIB  DD  DSN=&STEPLB,DISP=SHR
//SYSPRINT DD  SYSOUT=&CLASS     <<====  DUMMY OUT TO CUT PRINTOUT
//*                            IF PDSLOAD,  USE SYSUT1 DD
//*                            IF IEBUPDTE, USE SYSIN  DD
//*YSIN    DD  DSN=&&TEMP,DISP=(OLD,DELETE)
//SYSUPLOG DD  DISP=SHR,DSN=CBT.V508.SYSUPLOG(FILE&LAB)
//SYSUT1   DD  DSN=&&TEMP,DISP=(OLD,DELETE)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE),VOL=SER=&VO
//       PEND
//GENER  PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             LAB=,               INPUT TAPE LABEL NUMBER
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=DATA,          THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32716,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//GENER    EXEC  PGM=&P,REGION=512K,COND=EVEN
//STEPLIB  DD  DSN=SYS1.CBT.LINKLIB,DISP=SHR
//INPUT    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=VB,LRECL=94,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//OUTPUT   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE),VOL=SER=&VO
//       PEND
//STEP001     EXEC GENERO,LAB=001
//STEP002     EXEC GENERO,LAB=002
//STEP003     EXEC GENERO,LAB=003
//STEP004     EXEC GENERO,LAB=004
//STEP005     EXEC GENERO,LAB=005
//STEP006     EXEC UPDATEO,LAB=006
//STEP007     EXEC GENERO,LAB=007,FM=FB,LR=80,BKI=5600,BKO=27920
//STEP008     EXEC UPDATEO,LAB=008
//STEP009     EXEC UPDATEO,LAB=009
//STEP010     EXEC UPDATEO,LAB=010,PRI=150
//STEP011     EXEC UPDATEO,LAB=011
//STEP012     EXEC UPDATEO,LAB=012
//STEP013     EXEC UPDATEO,LAB=013
//STEP014     EXEC UPDATEO,LAB=014
//STEP015     EXEC UPDATEO,LAB=015
//STEP016     EXEC UPDATEO,LAB=016
//STEP017     EXEC UPDATEO,LAB=017
//STEP018     EXEC GENERO,LAB=018,FM=FBA,LR=133,BKI=32718,BKO=6118
//STEP019     EXEC UPDATEO,LAB=019
//STEP020     EXEC UPDATEO,LAB=020
//STEP021     EXEC UPDATEO,LAB=021
//STEP022     EXEC UPDATEO,LAB=022
//STEP023     EXEC UPDATEO,LAB=023
//STEP024     EXEC UPDATEO,LAB=024
//STEP025     EXEC UPDATEO,LAB=025
//STEP026     EXEC UPDATEO,LAB=026
//STEP027     EXEC UPDATEO,LAB=027
//STEP028     EXEC UPDATEO,LAB=028
//STEP029     EXEC UPDATEO,LAB=029
//STEP030     EXEC UPDATEO,LAB=030
//STEP031     EXEC UPDATEO,LAB=031
//STEP032     EXEC UPDATEO,LAB=032
//STEP033     EXEC UPDATEO,LAB=033
//STEP034     EXEC UPDATEO,LAB=034
//STEP035     EXEC COPY,LAB=035   DCB=RECFM=U,BLKSIZE=19069
//STEP036     EXEC UPDATEO,LAB=036
//STEP037     EXEC UPDATEO,LAB=037
//STEP038     EXEC UPDATEO,LAB=038
//STEP039     EXEC UPDATEO,LAB=039
//STEP040     EXEC UPDATEO,LAB=040
//STEP041     EXEC UPDATEO,LAB=041
//STEP042     EXEC UPDATEO,LAB=042              (WAS //STEP004.)
//STEP043     EXEC UPDATEO,LAB=043
//STEP044     EXEC UPDATEO,LAB=044
//STEP045     EXEC UPDATEO,LAB=045
//STEP046     EXEC UPDATEO,LAB=046
//STEP047     EXEC UPDATEO,LAB=047
//STEP048     EXEC UPDATEO,LAB=048
//STEP049     EXEC UPDATEO,LAB=049
//STEP050     EXEC UPDATEO,LAB=050
//STEP051     EXEC UPDATEO,LAB=051
//STEP052     EXEC UPDATEO,LAB=052
//STEP053     EXEC UPDATEO,LAB=053
//STEP054     EXEC UPDATEO,LAB=054
//STEP055     EXEC UPDATEO,LAB=055
//STEP056     EXEC UPDATEO,LAB=056
//STEP057     EXEC COPY,LAB=057   DCB=RECFM=VB,LRECL=255,BLKSIZE=6233
//STEP058     EXEC UPDATEO,LAB=058
//STEP059     EXEC UPDATEO,LAB=059
//STEP060     EXEC UPDATEO,LAB=060
//STEP061     EXEC COPY,LAB=061   DCB=RECFM=U,BLKSIZE=19069
//STEP062     EXEC GENERO,LAB=062,FM=FB,LR=2040,BKI=2040,BKO=2040
//STEP063     EXEC GENERO,LAB=063,FM=FB,LR=8180,BKI=8180,BKO=8180
//STEP064     EXEC GENERO,LAB=064,FM=FB,LR=53,BKI=5300,BKO=5300
//STEP065     EXEC UPDATEO,LAB=065
//STEP066     EXEC UPDATEO,LAB=066
//STEP067     EXEC UPDATEO,LAB=067
//STEP068     EXEC UPDATEO,LAB=068
//STEP069     EXEC UPDATEO,LAB=069
//STEP070     EXEC UPDATEO,LAB=070
//STEP071     EXEC UPDATEO,LAB=071
//STEP072     EXEC UPDATEO,LAB=072
//STEP073     EXEC COPY,LAB=073
//STEP074     EXEC UPDATEO,LAB=074
//STEP075     EXEC UPDATEO,LAB=075
//STEP076     EXEC UPDATEO,LAB=076
//STEP077     EXEC UPDATEO,LAB=077
//STEP078     EXEC UPDATEO,LAB=078
//STEP079     EXEC UPDATEO,LAB=079
//STEP080     EXEC UPDATEO,LAB=080
//STEP081     EXEC UPDATEO,LAB=081
//STEP082     EXEC UPDATEO,LAB=082
//STEP083     EXEC UPDATEO,LAB=083
//STEP084     EXEC UPDATEO,LAB=084
//STEP085     EXEC UPDATEO,LAB=085
//STEP086     EXEC UPDATEO,LAB=086
//STEP087     EXEC UPDATEO,LAB=087
//STEP088     EXEC UPDATEO,LAB=088
//STEP089     EXEC UPDATEO,LAB=089
//STEP090     EXEC UPDATEO,LAB=090
//STEP091     EXEC UPDATEO,LAB=091
//STEP092     EXEC UPDATEO,LAB=092
//STEP093     EXEC UPDATEO,LAB=093
//STEP094     EXEC UPDATEO,LAB=094
//STEP095     EXEC UPDATEO,LAB=095
//STEP096     EXEC UPDATEO,LAB=096
//STEP097     EXEC UPDATEO,LAB=097
//STEP098     EXEC UPDATEO,LAB=098
//STEP099     EXEC UPDATEO,LAB=099
//STEP100     EXEC UPDATEO,LAB=100
//SBGOLOBE JOB ,'SAM GOLOB',CLASS=A,
//    MSGCLASS=X,NOTIFY=&SYSUID
//*
//* THIS JOB IS NOW SPLIT INTO SEVEN SEPARATE JOBS BECAUSE OF
//* IBM'S RESTRICTION THAT A JOB MAY NOT HAVE MORE THAN
//* 255 STEPS. THE FIRST JOB HAS 200 STEPS THE SECOND THE REST.
//* THE SEVENTH JOB WILL LOAD FILE 001 OF THE TAPE INTO A PRE-
//* DEFINED VSAM CLUSTER FOR INFO/MVS DATABASE PROCESSING (YOU
//* HAVE TO HAVE INFOMVS).
//*
//*
//*  YOU MAY HAVE A PROBLEM WITH SOME OF THESE FILES THAT ARE
//*  IEBCOPIED DOWN IF YOU TRY TO DROP TO A NON-3350 TYPE
//*  DEVICE SINCE MOST INPUT WAS FULL TRACK BLOCKED ON A 3350.
//*  THE ORIGINAL DCB'S ARE MARKED BELOW. YOU CAN DROP DOWN LOAD
//*  MODULES INTO A SMALLER BLOCKSIZE PDS, HOWEVER YOU WILL GET A
//*  WARNING MESSAGE AND YOU WILL NOT BE ABLE TO DO A COMPRESS
//*  IN PLACE ON THAT LIBRARY UNTIL YOU GET RID OF THE OFFENDING
//*  MEMBERS OR RELINK THEM BACK IN
//*
//*  YOU WILL GET THE FOLLOWING MESSAGE:
//*  IEB175I - WARNING INPUT RECORD IS GREATER THAN OUTPUT BLKSIZE
//*            DDNAME=XXXXXXXX,OUTPUT TTRN=00000000
//*
//*
//ASMFCL PROC  V1=CBT508,      -   INPUT TAPE VOLUME
//*            VO=CBTA01,      -   OUTPUT DASD VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             LAB=002,            INPUT TAPE LABEL NUMBER FOR PROGRAM
//             CLASS=A,        -   SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             WORK2=SYSDA,        DASD WORK TYPE
//             INDEX='CBT.V508', - FIRST LEVEL INDEX FOR DSNAME
//             DSP=PASS,           OUTPUT DATASET DISPOSITION
//             UNT=562,        -   TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=1,              PRIMARY ALLOCATION
//             SEC=1,              SECONDARY ALLOCATION
//             DIR=1,              NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             FM=FB               RECFM
//ASM     EXEC  PGM=ASMA90,REGION=1024K,COND=EVEN,PARM='OBJECT,NODECK'
//*SM     EXEC  PGM=IEV90,REGION=1024K,COND=EVEN,PARM='OBJECT,NODECK'
//SYSPRINT DD  SYSOUT=&CLASS
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.MODGEN,DISP=SHR
//SYSUT1   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT2   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT3   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSPUNCH DD  DUMMY
//SYSLIN   DD  DSN=&INDEX..FILE&LAB..OBJ,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE) VOL=SER=&VO
//SYSIN    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//LKED     EXEC  PGM=IEWL,REGION=600K,COND=(4,LT,ASM),PARM=LIST
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT1   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSLMOD  DD  DSN=&INDEX..FILE&LAB..LOAD(&P),DISP=(NEW,&DSP),
//             UNIT=&WORK1,
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE) VOL=SER=&VO
//SYSLIN   DD  DSN=&INDEX..FILE&LAB..OBJ,DISP=(OLD,&DSP),
//             LABEL=(&LAB,&TY)
//       PEND
//COPY   PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             WORK2=SYSDA,        DASD WORK TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=PDS,           THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             DIR=92,             NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK           ALLOC INCREMENT
//COPY     EXEC  PGM=IEBCOPY,REGION=600K,COND=EVEN
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT3   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT4   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT1   DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE),VOL=SER=&VO
//SYSIN    DD  DUMMY
//       PEND
//GENERO PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=DATA,          THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//GENER    EXEC  PGM=IEBGENER,REGION=600K,COND=EVEN
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT1   DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE),VOL=SER=&VO
//SYSIN    DD  DUMMY
//       PEND
//UPDATEO PROC V1=CBT508,          INPUT TAPE VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             P1=PDSLOAD,    (ISPF STATS AND MUCH QUICKER - USE THIS
//*                             PROGRAM INSTEAD OF IEBUPDTE. FILE 093)
//*            P1=IEBUPDTE,   PROGRAM TO PROCESS IEBUPDTE SYSIN
//*                           STREAM. YOU MAY USE THE NORMAL IBM PGM
//*                           OR YOU MAY HAVE INSTALLED THE PDSLOAD
//*                           PROGRAM FROM FILE 316 OF THE CBT TAPE
//*                           WHICH IS USEFUL FOR FILES UNLOADED BY
//*                           THE FAMOUS YALE OFFLOAD PROGRAM. CAN
//*                           CHANGE THE IMBEDDED '><' TO './' AT
//*                           RELOAD.
//*   ---->                    IF PDSLOAD,  USE SYSUT1 DD
//*   ---->                    IF IEBUPDTE, USE SYSIN  DD
//             STEPLB='SYS1.CBT.LINKLIB', LIBRARY CONTAINS PGM=P1
//             S='UPDTE(><)',      'NEW'           IF IEBUPDTE
//*   ---->                        'UPDTE(><)'     IF PDSLOAD
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=PDS,           THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             DIR=92,             NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//UPDATE1  EXEC  PGM=&P,REGION=512K,COND=EVEN
//STEPLIB  DD  DSN=SYS1.CBT.LINKLIB,DISP=SHR
//INPUT    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=VB,LRECL=94,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//OUTPUT   DD  DSN=&&TEMP,DISP=(NEW,PASS),
//             UNIT=&WORK1,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE) VOL=SER=&VO
//UPDATE2  EXEC  PGM=&P1,PARM='&S',COND=EVEN
//STEPLIB  DD  DSN=&STEPLB,DISP=SHR
//SYSPRINT DD  SYSOUT=&CLASS     <<====  DUMMY OUT TO CUT PRINTOUT
//*                            IF PDSLOAD,  USE SYSUT1 DD
//*                            IF IEBUPDTE, USE SYSIN  DD
//*YSIN    DD  DSN=&&TEMP,DISP=(OLD,DELETE)
//SYSUPLOG DD  DISP=SHR,DSN=CBT.V508.SYSUPLOG(FILE&LAB)
//SYSUT1   DD  DSN=&&TEMP,DISP=(OLD,DELETE)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE),VOL=SER=&VO
//       PEND
//GENER  PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             LAB=,               INPUT TAPE LABEL NUMBER
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=DATA,          THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32716,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//GENER    EXEC  PGM=&P,REGION=512K,COND=EVEN
//STEPLIB  DD  DSN=SYS1.CBT.LINKLIB,DISP=SHR
//INPUT    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=VB,LRECL=94,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//OUTPUT   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE),VOL=SER=&VO
//       PEND
//STEP101     EXEC UPDATEO,LAB=101
//STEP102     EXEC UPDATEO,LAB=102
//STEP103     EXEC UPDATEO,LAB=103
//STEP104     EXEC UPDATEO,LAB=104
//STEP105     EXEC UPDATEO,LAB=105
//STEP106     EXEC UPDATEO,LAB=106
//STEP107     EXEC UPDATEO,LAB=107
//STEP108     EXEC UPDATEO,LAB=108
//STEP109     EXEC UPDATEO,LAB=109
//STEP110     EXEC GENERO,LAB=110,FM=FBA,LR=133,BKI=32718,BKO=6118
//STEP111     EXEC UPDATEO,LAB=111
//STEP112     EXEC UPDATEO,LAB=112
//STEP113     EXEC UPDATEO,LAB=113
//STEP114     EXEC UPDATEO,LAB=114
//STEP115     EXEC COPY,LAB=115   DCB=RECFM=VB,BLKSIZE=6156,LRECL=104
//STEP116     EXEC UPDATEO,LAB=116
//STEP117     EXEC UPDATEO,LAB=117
//STEP118     EXEC UPDATEO,LAB=118
//STEP119     EXEC UPDATEO,LAB=119
//STEP120     EXEC UPDATEO,LAB=120
//STEP121     EXEC COPY,LAB=121
//STEP122     EXEC UPDATEO,LAB=122
//STEP123     EXEC UPDATEO,LAB=123
//STEP124     EXEC UPDATEO,LAB=124
//STEP125     EXEC UPDATEO,LAB=125
//STEP126     EXEC UPDATEO,LAB=126
//STEP127     EXEC UPDATEO,LAB=127
//STEP128     EXEC UPDATEO,LAB=128
//STEP129     EXEC UPDATEO,LAB=129
//STEP130     EXEC UPDATEO,LAB=130
//STEP131     EXEC UPDATEO,LAB=131
//STEP132     EXEC UPDATEO,LAB=132
//STEP133     EXEC UPDATEO,LAB=133
//STEP134     EXEC UPDATEO,LAB=134
//STEP135     EXEC COPY,LAB=135   DCB=RECFM=U,BLKSIZE=19069
//STEP136     EXEC UPDATEO,LAB=136
//STEP137     EXEC UPDATEO,LAB=137
//STEP138     EXEC UPDATEO,LAB=138
//STEP139     EXEC UPDATEO,LAB=139
//STEP140     EXEC UPDATEO,LAB=140
//STEP141     EXEC UPDATEO,LAB=141
//STEP142     EXEC UPDATEO,LAB=142
//STEP143     EXEC UPDATEO,LAB=143
//STEP144     EXEC UPDATEO,LAB=144
//STEP145     EXEC COPY,LAB=145   DCB=RECFM=U,BLKSIZE=6144
//STEP146     EXEC UPDATEO,LAB=146
//STEP147     EXEC UPDATEO,LAB=147   >>> GETS RC=4 WITH IEBUPDTE
//STEP148     EXEC UPDATEO,LAB=148
//STEP149     EXEC UPDATEO,LAB=149
//STEP150     EXEC UPDATEO,LAB=150
//STEP151     EXEC UPDATEO,LAB=151
//STEP152     EXEC UPDATEO,LAB=152
//STEP153     EXEC COPY,LAB=153  DCB=RECFM=VBM,LRECL=8205,BLISIZE=8209
//STEP154     EXEC UPDATEO,LAB=154
//STEP155     EXEC UPDATEO,LAB=155
//STEP156     EXEC UPDATEO,LAB=156   >>> GETS RC=4 WITH IEBUPDTE
//STEP157     EXEC GENERO,LAB=157,FM=FBA,LR=133,BKI=32718,BKO=6118
//STEP158     EXEC UPDATEO,LAB=158
//STEP159     EXEC UPDATEO,LAB=159
//STEP160     EXEC UPDATEO,LAB=160
//STEP161     EXEC UPDATEO,LAB=161
//STEP162     EXEC UPDATEO,LAB=162
//STEP163     EXEC UPDATEO,LAB=163
//STEP164     EXEC UPDATEO,LAB=164
//STEP165     EXEC UPDATEO,LAB=165
//STEP166     EXEC UPDATEO,LAB=166
//STEP167     EXEC UPDATEO,LAB=167
//STEP168     EXEC UPDATEO,LAB=168
//STEP169     EXEC UPDATEO,LAB=169
//STEP170     EXEC UPDATEO,LAB=170
//STEP171     EXEC UPDATEO,LAB=171
//STEP172     EXEC UPDATEO,LAB=172
//STEP173     EXEC UPDATEO,LAB=173
//STEP174     EXEC UPDATEO,LAB=174
//STEP175     EXEC UPDATEO,LAB=175
//STEP176     EXEC UPDATEO,LAB=176
//STEP177     EXEC UPDATEO,LAB=177
//STEP178     EXEC UPDATEO,LAB=178
//STEP179     EXEC UPDATEO,LAB=179
//STEP180     EXEC UPDATEO,LAB=180
//STEP181     EXEC UPDATEO,LAB=181
//STEP182     EXEC UPDATEO,LAB=182,DIR=179
//STEP183     EXEC UPDATEO,LAB=183
//STEP184     EXEC UPDATEO,LAB=184
//STEP185     EXEC UPDATEO,LAB=185
//STEP186     EXEC UPDATEO,LAB=186
//STEP187     EXEC UPDATEO,LAB=187
//STEP188     EXEC UPDATEO,LAB=188
//STEP189     EXEC COPY,LAB=189   DCB=RECFM=FBA,LRECL=133,BLKSIZE=15428
//STEP190     EXEC UPDATEO,LAB=190
//STEP191     EXEC UPDATEO,LAB=191
//STEP192     EXEC UPDATEO,LAB=192
//STEP193     EXEC UPDATEO,LAB=193
//STEP194     EXEC UPDATEO,LAB=194
//STEP195     EXEC UPDATEO,LAB=195
//STEP196     EXEC UPDATEO,LAB=196
//STEP197     EXEC UPDATEO,LAB=197
//STEP198     EXEC UPDATEO,LAB=198
//STEP199     EXEC UPDATEO,LAB=199
//STEP200     EXEC UPDATEO,LAB=200
//SBGOLOBE JOB ,'SAM GOLOB',CLASS=A,
//    MSGCLASS=X,NOTIFY=&SYSUID
//*
//* THIS JOB IS NOW SPLIT INTO SEVEN SEPARATE JOBS BECAUSE OF
//* IBM'S RESTRICTION THAT A JOB MAY NOT HAVE MORE THAN
//* 255 STEPS. THE FIRST JOB HAS 200 STEPS THE SECOND THE REST.
//* THE SEVENTH JOB WILL LOAD FILE 001 OF THE TAPE INTO A PRE-
//* DEFINED VSAM CLUSTER FOR INFO/MVS DATABASE PROCESSING (YOU
//* HAVE TO HAVE INFOMVS).
//*
//*
//*  YOU MAY HAVE A PROBLEM WITH SOME OF THESE FILES THAT ARE
//*  IEBCOPIED DOWN IF YOU TRY TO DROP TO A NON-3350 TYPE
//*  DEVICE SINCE MOST INPUT WAS FULL TRACK BLOCKED ON A 3350.
//*  THE ORIGINAL DCB'S ARE MARKED BELOW. YOU CAN DROP DOWN LOAD
//*  MODULES INTO A SMALLER BLOCKSIZE PDS, HOWEVER YOU WILL GET A
//*  WARNING MESSAGE AND YOU WILL NOT BE ABLE TO DO A COMPRESS
//*  IN PLACE ON THAT LIBRARY UNTIL YOU GET RID OF THE OFFENDING
//*  MEMBERS OR RELINK THEM BACK IN
//*
//*  YOU WILL GET THE FOLLOWING MESSAGE:
//*  IEB175I - WARNING INPUT RECORD IS GREATER THAN OUTPUT BLKSIZE
//*            DDNAME=XXXXXXXX,OUTPUT TTRN=00000000
//*
//*
//ASMFCL PROC  V1=CBT508,          INPUT TAPE VOLUME
//*            VO=CBTA01,          OUTPUT DASD VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             LAB=002,            INPUT TAPE LABEL NUMBER FOR PROGRAM
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             WORK2=SYSDA,        DASD WORK TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             DSP=PASS,           OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=1,              PRIMARY ALLOCATION
//             SEC=1,              SECONDARY ALLOCATION
//             DIR=1,              NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             FM=FB               RECFM
//ASM     EXEC  PGM=ASMA90,REGION=1024K,COND=EVEN,PARM='OBJECT,NODECK'
//*SM     EXEC  PGM=IEV90,REGION=1024K,COND=EVEN,PARM='OBJECT,NODECK'
//SYSPRINT DD  SYSOUT=&CLASS
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.MODGEN,DISP=SHR
//SYSUT1   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT2   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT3   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSPUNCH DD  DUMMY
//SYSLIN   DD  DSN=&INDEX..FILE&LAB..OBJ,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE) VOL=SER=&VO
//SYSIN    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//LKED     EXEC  PGM=IEWL,REGION=600K,COND=(4,LT,ASM),PARM=LIST
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT1   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSLMOD  DD  DSN=&INDEX..FILE&LAB..LOAD(&P),DISP=(NEW,&DSP),
//             UNIT=&WORK1,
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE) VOL=SER=&VO
//SYSLIN   DD  DSN=&INDEX..FILE&LAB..OBJ,DISP=(OLD,&DSP),
//             LABEL=(&LAB,&TY)
//       PEND
//COPY   PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             WORK2=SYSDA,        DASD WORK TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=PDS,           THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             DIR=92,             NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK           ALLOC INCREMENT
//COPY     EXEC  PGM=IEBCOPY,REGION=600K,COND=EVEN
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT3   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT4   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT1   DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE),VOL=SER=&VO
//SYSIN    DD  DUMMY
//       PEND
//GENERO PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=DATA,          THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//GENER    EXEC  PGM=IEBGENER,REGION=600K,COND=EVEN
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT1   DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE),VOL=SER=&VO
//SYSIN    DD  DUMMY
//       PEND
//UPDATEO PROC V1=CBT508,          INPUT TAPE VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             P1=PDSLOAD,    (ISPF STATS AND MUCH QUICKER - USE THIS
//*                             PROGRAM INSTEAD OF IEBUPDTE. FILE 093)
//*            P1=IEBUPDTE,   PROGRAM TO PROCESS IEBUPDTE SYSIN
//*                           STREAM. YOU MAY USE THE NORMAL IBM PGM
//*                           OR YOU MAY HAVE INSTALLED THE PDSLOAD
//*                           PROGRAM FROM FILE 316 OF THE CBT TAPE
//*                           WHICH IS USEFUL FOR FILES UNLOADED BY
//*                           THE FAMOUS YALE OFFLOAD PROGRAM. CAN
//*                           CHANGE THE IMBEDDED '><' TO './' AT
//*                           RELOAD.
//*   ---->                    IF PDSLOAD,  USE SYSUT1 DD
//*   ---->                    IF IEBUPDTE, USE SYSIN  DD
//             STEPLB='SYS1.CBT.LINKLIB', LIBRARY CONTAINS PGM=P1
//             S='UPDTE(><)',      'NEW'           IF IEBUPDTE
//*   ---->                        'UPDTE(><)'     IF PDSLOAD
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=PDS,           THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             DIR=92,             NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//UPDATE1  EXEC  PGM=&P,REGION=512K,COND=EVEN
//STEPLIB  DD  DSN=SYS1.CBT.LINKLIB,DISP=SHR
//INPUT    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=VB,LRECL=94,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//OUTPUT   DD  DSN=&&TEMP,DISP=(NEW,PASS),
//             UNIT=&WORK1,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE) VOL=SER=&VO
//UPDATE2  EXEC  PGM=&P1,PARM='&S',COND=EVEN
//STEPLIB  DD  DSN=&STEPLB,DISP=SHR
//SYSPRINT DD  SYSOUT=&CLASS     <<====  DUMMY OUT TO CUT PRINTOUT
//*                            IF PDSLOAD,  USE SYSUT1 DD
//*                            IF IEBUPDTE, USE SYSIN  DD
//*YSIN    DD  DSN=&&TEMP,DISP=(OLD,DELETE)
//SYSUPLOG DD  DISP=SHR,DSN=CBT.V508.SYSUPLOG(FILE&LAB)
//SYSUT1   DD  DSN=&&TEMP,DISP=(OLD,DELETE)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE),VOL=SER=&VO
//       PEND
//GENER  PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             LAB=,               INPUT TAPE LABEL NUMBER
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=DATA,          THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32716,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//GENER    EXEC  PGM=&P,REGION=512K,COND=EVEN
//STEPLIB  DD  DSN=SYS1.CBT.LINKLIB,DISP=SHR
//INPUT    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=VB,LRECL=94,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//OUTPUT   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE),VOL=SER=&VO
//       PEND
//STEP201     EXEC UPDATEO,LAB=201
//STEP202     EXEC COPY,LAB=202
//STEP203     EXEC UPDATEO,LAB=203
//STEP204     EXEC UPDATEO,LAB=204
//STEP205     EXEC COPY,LAB=205
//STEP206     EXEC UPDATEO,LAB=206
//STEP207     EXEC UPDATEO,LAB=207
//STEP208     EXEC UPDATEO,LAB=208
//STEP209     EXEC UPDATEO,LAB=209
//STEP210     EXEC UPDATEO,LAB=210
//STEP211     EXEC COPY,LAB=211
//STEP212     EXEC UPDATEO,LAB=212
//STEP213     EXEC COPY,LAB=213
//STEP214     EXEC UPDATEO,LAB=214
//STEP215     EXEC UPDATEO,LAB=215
//STEP216     EXEC UPDATEO,LAB=216
//STEP217     EXEC UPDATEO,LAB=217
//STEP218     EXEC UPDATEO,LAB=218
//STEP219     EXEC UPDATEO,LAB=219
//STEP220     EXEC UPDATEO,LAB=220
//STEP221     EXEC COPY,LAB=221
//STEP222     EXEC UPDATEO,LAB=222
//STEP223     EXEC UPDATEO,LAB=223
//STEP224     EXEC COPY,LAB=224
//STEP225     EXEC UPDATEO,LAB=225
//STEP226     EXEC UPDATEO,LAB=226
//STEP227     EXEC UPDATEO,LAB=227
//STEP228     EXEC UPDATEO,LAB=228
//STEP229     EXEC UPDATEO,LAB=229
//STEP230     EXEC GENERO,LAB=230,FM=FBA,LR=133,BKI=32718,BKO=6118
//STEP231     EXEC UPDATEO,LAB=231
//STEP232     EXEC UPDATEO,LAB=232
//STEP233     EXEC UPDATEO,LAB=233
//STEP234     EXEC UPDATEO,LAB=234
//STEP235     EXEC UPDATEO,LAB=235
//STEP236     EXEC UPDATEO,LAB=236
//STEP237     EXEC UPDATEO,LAB=237
//STEP238     EXEC COPY,LAB=238
//STEP239     EXEC UPDATEO,LAB=239
//STEP240     EXEC UPDATEO,LAB=240
//STEP241     EXEC UPDATEO,LAB=241
//STEP242     EXEC COPY,LAB=242,DIR=179
//STEP243     EXEC UPDATEO,LAB=243
//STEP244     EXEC UPDATEO,LAB=244
//STEP245     EXEC UPDATEO,LAB=245
//STEP246     EXEC UPDATEO,LAB=246
//STEP247     EXEC UPDATEO,LAB=247
//STEP248     EXEC UPDATEO,LAB=248
//STEP249     EXEC UPDATEO,LAB=249
//STEP250     EXEC UPDATEO,LAB=250
//STEP251     EXEC UPDATEO,LAB=251
//STEP252     EXEC UPDATEO,LAB=252
//STEP253     EXEC UPDATEO,LAB=253
//STEP254     EXEC UPDATEO,LAB=254
//STEP255     EXEC UPDATEO,LAB=255
//STEP256     EXEC UPDATEO,LAB=256
//STEP257     EXEC UPDATEO,LAB=257
//STEP258     EXEC UPDATEO,LAB=258
//STEP259     EXEC COPY,LAB=259
//STEP260     EXEC UPDATEO,LAB=260
//STEP261     EXEC UPDATEO,LAB=261
//STEP262     EXEC UPDATEO,LAB=262
//STEP263     EXEC UPDATEO,LAB=263
//STEP264     EXEC UPDATEO,LAB=264
//STEP265     EXEC UPDATEO,LAB=265
//STEP266     EXEC UPDATEO,LAB=266
//STEP267     EXEC UPDATEO,LAB=267
//STEP268     EXEC UPDATEO,LAB=268
//STEP269     EXEC UPDATEO,LAB=269
//STEP270     EXEC UPDATEO,LAB=270
//STEP271     EXEC UPDATEO,LAB=271
//STEP272     EXEC UPDATEO,LAB=272
//STEP273     EXEC UPDATEO,LAB=273
//STEP274     EXEC UPDATEO,LAB=274
//STEP275     EXEC UPDATEO,LAB=275
//STEP276     EXEC UPDATEO,LAB=276
//STEP277     EXEC UPDATEO,LAB=277
//STEP278     EXEC UPDATEO,LAB=278
//STEP279     EXEC COPY,LAB=279   DCB=RECFM=VB,LRECL=255,BLKSIZE=9036
//STEP280     EXEC UPDATEO,LAB=280
//STEP281     EXEC COPY,LAB=281   DCB=RECFM=U,BLKSIZE=7294
//STEP282     EXEC UPDATEO,LAB=282
//STEP283     EXEC COPY,LAB=283   DCB=RECFM=VB,LRECL=84,BLKSIZE=3360
//STEP284     EXEC UPDATEO,LAB=284
//STEP285     EXEC COPY,LAB=285
//STEP286     EXEC UPDATEO,LAB=286
//STEP287     EXEC UPDATEO,LAB=287
//STEP288     EXEC UPDATEO,LAB=288
//STEP289     EXEC UPDATEO,LAB=289
//STEP290     EXEC UPDATEO,LAB=290
//STEP291     EXEC UPDATEO,LAB=291
//STEP292     EXEC UPDATEO,LAB=292
//STEP293     EXEC UPDATEO,LAB=293
//STEP294     EXEC UPDATEO,LAB=294
//STEP295     EXEC UPDATEO,LAB=295
//STEP296     EXEC UPDATEO,LAB=296
//STEP297     EXEC UPDATEO,LAB=297
//STEP298     EXEC UPDATEO,LAB=298
//STEP299     EXEC UPDATEO,LAB=299
//STEP300     EXEC UPDATEO,LAB=300,DIR=134
//SBGOLOBE JOB ,'SAM GOLOB',CLASS=A,
//    MSGCLASS=X,NOTIFY=&SYSUID
//*
//*  YOU MAY HAVE A PROBLEM WITH SOME OF THESE FILES THAT ARE
//*  IEBCOPIED DOWN IF YOU TRY TO DROP TO A NON-3350 TYPE
//*  DEVICE SINCE MOST INPUT WAS FULL TRACK BLOCKED ON A 3350.
//*  THE ORIGINAL DCB'S ARE MARKED BELOW. YOU CAN DROP DOWN LOAD
//*  MODULES INTO A SMALLER BLOCKSIZE PDS, HOWEVER YOU WILL GET A
//*  WARNING MESSAGE AND YOU WILL NOT BE ABLE TO DO A COMPRESS
//*  IN PLACE ON THAT LIBRARY UNTIL YOU GET RID OF THE OFFENDING
//*  MEMBERS OR RELINK THEM BACK IN
//*
//*  YOU WILL GET THE FOLLOWING MESSAGE:
//*  IEB175I - WARNING INPUT RECORD IS GREATER THAN OUTPUT BLKSIZE
//*            DDNAME=XXXXXXXX,OUTPUT TTRN=00000000
//*
//*
//ASMFCL PROC  V1=CBT508,      -   INPUT TAPE VOLUME
//*            VO=CBTA01,      -   OUTPUT DASD VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             LAB=002,            INPUT TAPE LABEL NUMBER FOR PROGRAM
//             CLASS=A,        -   SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             WORK2=SYSDA,        DASD WORK TYPE
//             INDEX='CBT.V508', - FIRST LEVEL INDEX FOR DSNAME
//             DSP=PASS,           OUTPUT DATASET DISPOSITION
//             UNT=562,        -   TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=1,              PRIMARY ALLOCATION
//             SEC=1,              SECONDARY ALLOCATION
//             DIR=1,              NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             FM=FB               RECFM
//ASM     EXEC  PGM=ASMA90,REGION=1024K,COND=EVEN,PARM='OBJECT,NODECK'
//*SM     EXEC  PGM=IEV90,REGION=1024K,COND=EVEN,PARM='OBJECT,NODECK'
//SYSPRINT DD  SYSOUT=&CLASS
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.MODGEN,DISP=SHR
//SYSUT1   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT2   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT3   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSPUNCH DD  DUMMY
//SYSLIN   DD  DSN=&INDEX..FILE&LAB..OBJ,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE) VOL=SER=&VO
//SYSIN    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//LKED     EXEC  PGM=IEWL,REGION=600K,COND=(4,LT,ASM),PARM=LIST
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT1   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSLMOD  DD  DSN=&INDEX..FILE&LAB..LOAD(&P),DISP=(NEW,&DSP),
//             UNIT=&WORK1,
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE) VOL=SER=&VO
//SYSLIN   DD  DSN=&INDEX..FILE&LAB..OBJ,DISP=(OLD,&DSP),
//             LABEL=(&LAB,&TY)
//       PEND
//COPY   PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             WORK2=SYSDA,        DASD WORK TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=PDS,           THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             DIR=92,             NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK           ALLOC INCREMENT
//COPY     EXEC  PGM=IEBCOPY,REGION=600K,COND=EVEN
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT3   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT4   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT1   DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE),VOL=SER=&VO
//SYSIN    DD  DUMMY
//       PEND
//GENERO PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=DATA,          THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//GENER    EXEC  PGM=IEBGENER,REGION=600K,COND=EVEN
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT1   DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE),VOL=SER=&VO
//SYSIN    DD  DUMMY
//       PEND
//UPDATEO PROC V1=CBT508,          INPUT TAPE VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             P1=PDSLOAD,    (ISPF STATS AND MUCH QUICKER - USE THIS
//*                             PROGRAM INSTEAD OF IEBUPDTE. FILE 093)
//*            P1=IEBUPDTE,   PROGRAM TO PROCESS IEBUPDTE SYSIN
//*                           STREAM. YOU MAY USE THE NORMAL IBM PGM
//*                           OR YOU MAY HAVE INSTALLED THE PDSLOAD
//*                           PROGRAM FROM FILE 316 OF THE CBT TAPE
//*                           WHICH IS USEFUL FOR FILES UNLOADED BY
//*                           THE FAMOUS YALE OFFLOAD PROGRAM. CAN
//*                           CHANGE THE IMBEDDED '><' TO './' AT
//*                           RELOAD.
//*   ---->                    IF PDSLOAD,  USE SYSUT1 DD
//*   ---->                    IF IEBUPDTE, USE SYSIN  DD
//             STEPLB='SYS1.CBT.LINKLIB', LIBRARY CONTAINS PGM=P1
//             S='UPDTE(><)',      'NEW'           IF IEBUPDTE
//*   ---->                        'UPDTE(><)'     IF PDSLOAD
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=PDS,           THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             DIR=92,             NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//UPDATE1  EXEC  PGM=&P,REGION=512K,COND=EVEN
//STEPLIB  DD  DSN=SYS1.CBT.LINKLIB,DISP=SHR
//INPUT    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=VB,LRECL=94,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//OUTPUT   DD  DSN=&&TEMP,DISP=(NEW,PASS),
//             UNIT=&WORK1,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE) VOL=SER=&VO
//UPDATE2  EXEC  PGM=&P1,PARM='&S',COND=EVEN
//STEPLIB  DD  DSN=&STEPLB,DISP=SHR
//SYSPRINT DD  SYSOUT=&CLASS     <<====  DUMMY OUT TO CUT PRINTOUT
//*                            IF PDSLOAD,  USE SYSUT1 DD
//*                            IF IEBUPDTE, USE SYSIN  DD
//*YSIN    DD  DSN=&&TEMP,DISP=(OLD,DELETE)
//SYSUPLOG DD  DISP=SHR,DSN=CBT.V508.SYSUPLOG(FILE&LAB)
//SYSUT1   DD  DSN=&&TEMP,DISP=(OLD,DELETE)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE),VOL=SER=&VO
//       PEND
//GENER  PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             LAB=,               INPUT TAPE LABEL NUMBER
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=DATA,          THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32716,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//GENER    EXEC  PGM=&P,REGION=512K,COND=EVEN
//STEPLIB  DD  DSN=SYS1.CBT.LINKLIB,DISP=SHR
//INPUT    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=VB,LRECL=94,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//OUTPUT   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE),VOL=SER=&VO
//       PEND
//STEP301     EXEC UPDATEO,LAB=301
//STEP302     EXEC UPDATEO,LAB=302
//STEP303     EXEC UPDATEO,LAB=303
//STEP304     EXEC UPDATEO,LAB=304
//STEP305     EXEC COPY,LAB=305
//STEP306     EXEC UPDATEO,LAB=306
//STEP307     EXEC UPDATEO,LAB=307
//STEP308     EXEC UPDATEO,LAB=308
//STEP309     EXEC UPDATEO,LAB=309
//STEP310     EXEC UPDATEO,LAB=310
//STEP311     EXEC UPDATEO,LAB=311
//STEP312     EXEC UPDATEO,LAB=312
//STEP313     EXEC UPDATEO,LAB=313
//STEP314     EXEC UPDATEO,LAB=314
//STEP315     EXEC UPDATEO,LAB=315
//STEP316     EXEC UPDATEO,LAB=316
//STEP317     EXEC UPDATEO,LAB=317
//STEP318     EXEC UPDATEO,LAB=318
//STEP319     EXEC UPDATEO,LAB=319
//STEP320     EXEC UPDATEO,LAB=320
//STEP321     EXEC UPDATEO,LAB=321
//STEP322     EXEC UPDATEO,LAB=322
//STEP323     EXEC UPDATEO,LAB=323
//STEP324     EXEC UPDATEO,LAB=324
//STEP325     EXEC UPDATEO,LAB=325
//STEP326     EXEC UPDATEO,LAB=326
//STEP327     EXEC UPDATEO,LAB=327
//STEP328     EXEC UPDATEO,LAB=328
//STEP329     EXEC UPDATEO,LAB=329
//STEP330     EXEC UPDATEO,LAB=330
//STEP331     EXEC UPDATEO,LAB=331
//STEP332     EXEC UPDATEO,LAB=332
//STEP333     EXEC UPDATEO,LAB=333
//STEP334     EXEC UPDATEO,LAB=334
//STEP335     EXEC UPDATEO,LAB=335
//STEP336     EXEC UPDATEO,LAB=336
//STEP337     EXEC UPDATEO,LAB=337
//STEP338     EXEC UPDATEO,LAB=338
//STEP339     EXEC UPDATEO,LAB=339
//STEP340     EXEC UPDATEO,LAB=340
//STEP341     EXEC UPDATEO,LAB=341
//STEP342     EXEC UPDATEO,LAB=342
//STEP343     EXEC UPDATEO,LAB=343
//STEP344     EXEC UPDATEO,LAB=344
//STEP345     EXEC UPDATEO,LAB=345
//STEP346     EXEC UPDATEO,LAB=346
//STEP347     EXEC UPDATEO,LAB=347
//STEP348     EXEC UPDATEO,LAB=348
//STEP349     EXEC UPDATEO,LAB=349
//STEP350     EXEC UPDATEO,LAB=350
//STEP351     EXEC UPDATEO,LAB=351
//STEP352     EXEC UPDATEO,LAB=352
//STEP353     EXEC UPDATEO,LAB=353
//STEP354     EXEC UPDATEO,LAB=354
//STEP355     EXEC UPDATEO,LAB=355
//STEP356     EXEC UPDATEO,LAB=356
//STEP357     EXEC UPDATEO,LAB=357
//STEP358     EXEC UPDATEO,LAB=358
//STEP359     EXEC UPDATEO,LAB=359
//STEP360     EXEC UPDATEO,LAB=360
//STEP361     EXEC UPDATEO,LAB=361
//STEP362     EXEC COPY,LAB=362
//STEP363     EXEC UPDATEO,LAB=363
//STEP364     EXEC UPDATEO,LAB=364
//STEP365     EXEC UPDATEO,LAB=365
//STEP366     EXEC UPDATEO,LAB=366
//STEP367     EXEC UPDATEO,LAB=367
//STEP368     EXEC UPDATEO,LAB=368
//STEP369     EXEC UPDATEO,LAB=369
//STEP370     EXEC UPDATEO,LAB=370
//STEP371     EXEC COPY,LAB=371   DCB=RECFM=U,BLKSIZE=19070
//STEP372     EXEC UPDATEO,LAB=372
//STEP373     EXEC UPDATEO,LAB=373
//STEP374     EXEC UPDATEO,LAB=374
//STEP375     EXEC UPDATEO,LAB=375
//STEP376     EXEC UPDATEO,LAB=376
//STEP377     EXEC UPDATEO,LAB=377
//STEP378     EXEC UPDATEO,LAB=378
//STEP379     EXEC UPDATEO,LAB=379
//STEP380     EXEC UPDATEO,LAB=380
//STEP381     EXEC UPDATEO,LAB=381
//STEP382     EXEC UPDATEO,LAB=382
//STEP383     EXEC COPY,LAB=383   DCB=RECFM=VB,LRECL=84,BLKSIZE=15456
//STEP384     EXEC UPDATEO,LAB=384
//STEP385     EXEC UPDATEO,LAB=385
//STEP386     EXEC UPDATEO,LAB=386
//STEP387     EXEC UPDATEO,LAB=387
//STEP388     EXEC UPDATEO,LAB=388
//STEP389     EXEC UPDATEO,LAB=389
//STEP390     EXEC UPDATEO,LAB=390
//STEP391     EXEC UPDATEO,LAB=391
//STEP392     EXEC UPDATEO,LAB=392   >>> GETS RC=4 WITH IEBUPDTE
//STEP393     EXEC UPDATEO,LAB=393
//STEP394     EXEC UPDATEO,LAB=394
//STEP395     EXEC UPDATEO,LAB=395
//STEP396     EXEC UPDATEO,LAB=396
//STEP397     EXEC UPDATEO,LAB=397
//STEP398     EXEC UPDATEO,LAB=398
//STEP399     EXEC UPDATEO,LAB=399
//STEP400     EXEC UPDATEO,LAB=400
//SBGOLOBE JOB ,'SAM GOLOB',CLASS=A,
//    MSGCLASS=X,NOTIFY=&SYSUID
//*
//* THIS JOB IS NOW SPLIT INTO SEVEN SEPARATE JOBS BECAUSE OF
//* IBM'S RESTRICTION THAT A JOB MAY NOT HAVE MORE THAN
//* 255 STEPS. THE FIRST JOB HAS 200 STEPS THE SECOND THE REST.
//* THE SEVENTH JOB WILL LOAD FILE 001 OF THE TAPE INTO A PRE-
//* DEFINED VSAM CLUSTER FOR INFO/MVS DATABASE PROCESSING (YOU
//* HAVE TO HAVE INFOMVS).
//*
//*
//*  YOU MAY HAVE A PROBLEM WITH SOME OF THESE FILES THAT ARE
//*  IEBCOPIED DOWN IF YOU TRY TO DROP TO A NON-3350 TYPE
//*  DEVICE SINCE MOST INPUT WAS FULL TRACK BLOCKED ON A 3350.
//*  THE ORIGINAL DCB'S ARE MARKED BELOW. YOU CAN DROP DOWN LOAD
//*  MODULES INTO A SMALLER BLOCKSIZE PDS, HOWEVER YOU WILL GET A
//*  WARNING MESSAGE AND YOU WILL NOT BE ABLE TO DO A COMPRESS
//*  IN PLACE ON THAT LIBRARY UNTIL YOU GET RID OF THE OFFENDING
//*  MEMBERS OR RELINK THEM BACK IN
//*
//*  YOU WILL GET THE FOLLOWING MESSAGE:
//*  IEB175I - WARNING INPUT RECORD IS GREATER THAN OUTPUT BLKSIZE
//*            DDNAME=XXXXXXXX,OUTPUT TTRN=00000000
//*
//*
//ASMFCL PROC  V1=CBT508,      -   INPUT TAPE VOLUME
//*            VO=CBTA01,      -   OUTPUT DASD VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             LAB=002,            INPUT TAPE LABEL NUMBER FOR PROGRAM
//             CLASS=A,        -   SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             WORK2=SYSDA,        DASD WORK TYPE
//             INDEX='CBT.V508', - FIRST LEVEL INDEX FOR DSNAME
//             DSP=PASS,           OUTPUT DATASET DISPOSITION
//             UNT=562,        -   TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=1,              PRIMARY ALLOCATION
//             SEC=1,              SECONDARY ALLOCATION
//             DIR=1,              NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             FM=FB               RECFM
//ASM     EXEC  PGM=ASMA90,REGION=1024K,COND=EVEN,PARM='OBJECT,NODECK'
//*SM     EXEC  PGM=IEV90,REGION=1024K,COND=EVEN,PARM='OBJECT,NODECK'
//SYSPRINT DD  SYSOUT=&CLASS
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.MODGEN,DISP=SHR
//SYSUT1   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT2   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT3   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSPUNCH DD  DUMMY
//SYSLIN   DD  DSN=&INDEX..FILE&LAB..OBJ,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE) VOL=SER=&VO
//SYSIN    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//LKED     EXEC  PGM=IEWL,REGION=600K,COND=(4,LT,ASM),PARM=LIST
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT1   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSLMOD  DD  DSN=&INDEX..FILE&LAB..LOAD(&P),DISP=(NEW,&DSP),
//             UNIT=&WORK1,
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE) VOL=SER=&VO
//SYSLIN   DD  DSN=&INDEX..FILE&LAB..OBJ,DISP=(OLD,&DSP),
//             LABEL=(&LAB,&TY)
//       PEND
//COPY   PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             WORK2=SYSDA,        DASD WORK TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=PDS,           THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             DIR=92,             NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK           ALLOC INCREMENT
//COPY     EXEC  PGM=IEBCOPY,REGION=600K,COND=EVEN
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT3   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT4   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT1   DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE),VOL=SER=&VO
//SYSIN    DD  DUMMY
//       PEND
//GENERO PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=DATA,          THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//GENER    EXEC  PGM=IEBGENER,REGION=600K,COND=EVEN
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT1   DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE),VOL=SER=&VO
//SYSIN    DD  DUMMY
//       PEND
//UPDATEO PROC V1=CBT508,          INPUT TAPE VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             P1=PDSLOAD,    (ISPF STATS AND MUCH QUICKER - USE THIS
//*                             PROGRAM INSTEAD OF IEBUPDTE. FILE 093)
//*            P1=IEBUPDTE,   PROGRAM TO PROCESS IEBUPDTE SYSIN
//*                           STREAM. YOU MAY USE THE NORMAL IBM PGM
//*                           OR YOU MAY HAVE INSTALLED THE PDSLOAD
//*                           PROGRAM FROM FILE 316 OF THE CBT TAPE
//*                           WHICH IS USEFUL FOR FILES UNLOADED BY
//*                           THE FAMOUS YALE OFFLOAD PROGRAM. CAN
//*                           CHANGE THE IMBEDDED '><' TO './' AT
//*                           RELOAD.
//*   ---->                    IF PDSLOAD,  USE SYSUT1 DD
//*   ---->                    IF IEBUPDTE, USE SYSIN  DD
//             STEPLB='SYS1.CBT.LINKLIB', LIBRARY CONTAINS PGM=P1
//             S='UPDTE(><)',      'NEW'           IF IEBUPDTE
//*   ---->                        'UPDTE(><)'     IF PDSLOAD
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=PDS,           THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             DIR=92,             NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//UPDATE1  EXEC  PGM=&P,REGION=512K,COND=EVEN
//STEPLIB  DD  DSN=SYS1.CBT.LINKLIB,DISP=SHR
//INPUT    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=VB,LRECL=94,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//OUTPUT   DD  DSN=&&TEMP,DISP=(NEW,PASS),
//             UNIT=&WORK1,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE) VOL=SER=&VO
//UPDATE2  EXEC  PGM=&P1,PARM='&S',COND=EVEN
//STEPLIB  DD  DSN=&STEPLB,DISP=SHR
//SYSPRINT DD  SYSOUT=&CLASS     <<====  DUMMY OUT TO CUT PRINTOUT
//*                            IF PDSLOAD,  USE SYSUT1 DD
//*                            IF IEBUPDTE, USE SYSIN  DD
//*YSIN    DD  DSN=&&TEMP,DISP=(OLD,DELETE)
//SYSUPLOG DD  DISP=SHR,DSN=CBT.V508.SYSUPLOG(FILE&LAB)
//SYSUT1   DD  DSN=&&TEMP,DISP=(OLD,DELETE)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE),VOL=SER=&VO
//       PEND
//GENER  PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             LAB=,               INPUT TAPE LABEL NUMBER
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=DATA,          THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32716,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//GENER    EXEC  PGM=&P,REGION=512K,COND=EVEN
//STEPLIB  DD  DSN=SYS1.CBT.LINKLIB,DISP=SHR
//INPUT    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=VB,LRECL=94,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//OUTPUT   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE),VOL=SER=&VO
//       PEND
//*--------------------------------------------------------------*//
//*----  THE STEPS BELOW ARE REPEATED IN FILE 004, IF YOU   -----*//
//*----    ARE A NON-CARTRIDGE INSTALLATION LOADING THIS    -----*//
//*----    TAPE FROM TWO REELS.                             -----*//
//*----  IF YOU ARE LOADING FROM A CARTRIDGE, THERE IS NO   -----*//
//*----    ADDITIONAL JCL NECESSARY.                        -----*//
//*--------------------------------------------------------------*//
//STEP401     EXEC UPDATEO,LAB=401
//STEP402     EXEC UPDATEO,LAB=402
//STEP403     EXEC UPDATEO,LAB=403
//STEP404     EXEC UPDATEO,LAB=404
//STEP405     EXEC UPDATEO,LAB=405
//STEP406     EXEC UPDATEO,LAB=406
//STEP407     EXEC UPDATEO,LAB=407
//STEP408     EXEC UPDATEO,LAB=408
//STEP409     EXEC UPDATEO,LAB=409
//STEP410     EXEC COPY,LAB=410
//STEP411     EXEC UPDATEO,LAB=411
//STEP412     EXEC COPY,LAB=412
//STEP413     EXEC UPDATEO,LAB=413
//STEP414     EXEC UPDATEO,LAB=414
//STEP415     EXEC UPDATEO,LAB=415
//STEP416     EXEC UPDATEO,LAB=416
//STEP417     EXEC UPDATEO,LAB=417
//STEP418     EXEC UPDATEO,LAB=418
//STEP419     EXEC UPDATEO,LAB=419
//STEP420     EXEC COPY,LAB=420
//STEP421     EXEC UPDATEO,LAB=421
//STEP422     EXEC UPDATEO,LAB=422
//STEP423     EXEC UPDATEO,LAB=423
//STEP424     EXEC UPDATEO,LAB=424
//STEP425     EXEC UPDATEO,LAB=425
//STEP426     EXEC UPDATEO,LAB=426
//STEP427     EXEC UPDATEO,LAB=427
//STEP428     EXEC UPDATEO,LAB=428
//STEP429     EXEC UPDATEO,LAB=429
//STEP430     EXEC UPDATEO,LAB=430
//STEP431     EXEC UPDATEO,LAB=431
//STEP432     EXEC UPDATEO,LAB=432
//STEP433     EXEC UPDATEO,LAB=433
//STEP434     EXEC UPDATEO,LAB=434
//STEP435     EXEC UPDATEO,LAB=435
//STEP436     EXEC UPDATEO,LAB=436
//STEP437     EXEC UPDATEO,LAB=437
//STEP438     EXEC UPDATEO,LAB=438
//STEP439     EXEC UPDATEO,LAB=439
//STEP440     EXEC COPY,LAB=440
//STEP441     EXEC UPDATEO,LAB=441
//STEP442     EXEC UPDATEO,LAB=442
//STEP443     EXEC UPDATEO,LAB=443
//STEP444     EXEC UPDATEO,LAB=444
//STEP445     EXEC UPDATEO,LAB=445
//STEP446     EXEC UPDATEO,LAB=446
//STEP447     EXEC UPDATEO,LAB=447
//STEP448     EXEC UPDATEO,LAB=448
//STEP449     EXEC UPDATEO,LAB=449
//STEP450     EXEC UPDATEO,LAB=450
//STEP451     EXEC UPDATEO,LAB=451
//STEP452     EXEC UPDATEO,LAB=452
//STEP453     EXEC UPDATEO,LAB=453
//STEP454     EXEC UPDATEO,LAB=454,DIR=140
//STEP455     EXEC UPDATEO,LAB=455
//STEP456     EXEC UPDATEO,LAB=456
//STEP457     EXEC UPDATEO,LAB=457
//STEP458     EXEC UPDATEO,LAB=458
//STEP459     EXEC UPDATEO,LAB=459
//STEP460     EXEC UPDATEO,LAB=460
//STEP461     EXEC UPDATEO,LAB=461
//STEP462     EXEC UPDATEO,LAB=462
//STEP463     EXEC UPDATEO,LAB=463
//STEP464     EXEC UPDATEO,LAB=464
//STEP465     EXEC UPDATEO,LAB=465
//STEP466     EXEC UPDATEO,LAB=466
//STEP467     EXEC UPDATEO,LAB=467
//STEP468     EXEC UPDATEO,LAB=468
//STEP469     EXEC UPDATEO,LAB=469
//STEP470     EXEC UPDATEO,LAB=470
//STEP471     EXEC UPDATEO,LAB=471
//STEP472     EXEC UPDATEO,LAB=472
//STEP473     EXEC UPDATEO,LAB=473
//STEP474     EXEC UPDATEO,LAB=474
//STEP475     EXEC UPDATEO,LAB=475
//STEP476     EXEC UPDATEO,LAB=476
//STEP477     EXEC UPDATEO,LAB=477
//STEP478     EXEC UPDATEO,LAB=478
//STEP479     EXEC UPDATEO,LAB=479
//STEP480     EXEC UPDATEO,LAB=480
//STEP481     EXEC COPY,LAB=481
//STEP482     EXEC UPDATEO,LAB=482
//STEP483     EXEC UPDATEO,LAB=483
//STEP484     EXEC UPDATEO,LAB=484
//STEP485     EXEC UPDATEO,LAB=485
//STEP486     EXEC UPDATEO,LAB=486
//STEP487     EXEC UPDATEO,LAB=487
//STEP488     EXEC UPDATEO,LAB=488
//STEP489     EXEC UPDATEO,LAB=489
//STEP490     EXEC UPDATEO,LAB=490
//STEP491     EXEC UPDATEO,LAB=491
//STEP492     EXEC UPDATEO,LAB=492
//STEP493     EXEC UPDATEO,LAB=493
//STEP494     EXEC UPDATEO,LAB=494
//STEP495     EXEC UPDATEO,LAB=495
//STEP496     EXEC UPDATEO,LAB=496
//STEP497     EXEC UPDATEO,LAB=497
//STEP498     EXEC UPDATEO,LAB=498
//STEP499     EXEC UPDATEO,LAB=499
//STEP500     EXEC UPDATEO,LAB=500
//SBGOLOBE JOB ,'SAM GOLOB',CLASS=A,
//    MSGCLASS=X,NOTIFY=&SYSUID
//*
//* THIS JOB IS NOW SPLIT INTO SEVEN SEPARATE JOBS BECAUSE OF
//* IBM'S RESTRICTION THAT A JOB MAY NOT HAVE MORE THAN
//* 255 STEPS. THE FIRST JOB HAS 200 STEPS THE SECOND THE REST.
//* THE SEVENTH JOB WILL LOAD FILE 001 OF THE TAPE INTO A PRE-
//* DEFINED VSAM CLUSTER FOR INFO/MVS DATABASE PROCESSING (YOU
//* HAVE TO HAVE INFOMVS).
//*
//*
//*  YOU MAY HAVE A PROBLEM WITH SOME OF THESE FILES THAT ARE
//*  IEBCOPIED DOWN IF YOU TRY TO DROP TO A NON-3350 TYPE
//*  DEVICE SINCE MOST INPUT WAS FULL TRACK BLOCKED ON A 3350.
//*  THE ORIGINAL DCB'S ARE MARKED BELOW. YOU CAN DROP DOWN LOAD
//*  MODULES INTO A SMALLER BLOCKSIZE PDS, HOWEVER YOU WILL GET A
//*  WARNING MESSAGE AND YOU WILL NOT BE ABLE TO DO A COMPRESS
//*  IN PLACE ON THAT LIBRARY UNTIL YOU GET RID OF THE OFFENDING
//*  MEMBERS OR RELINK THEM BACK IN
//*
//*  YOU WILL GET THE FOLLOWING MESSAGE:
//*  IEB175I - WARNING INPUT RECORD IS GREATER THAN OUTPUT BLKSIZE
//*            DDNAME=XXXXXXXX,OUTPUT TTRN=00000000
//*
//*
//ASMFCL PROC  V1=CBT508,      -   INPUT TAPE VOLUME
//*            VO=CBTA01,      -   OUTPUT DASD VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             LAB=002,            INPUT TAPE LABEL NUMBER FOR PROGRAM
//             CLASS=A,        -   SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             WORK2=SYSDA,        DASD WORK TYPE
//             INDEX='CBT.V508', - FIRST LEVEL INDEX FOR DSNAME
//             DSP=PASS,           OUTPUT DATASET DISPOSITION
//             UNT=562,        -   TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=1,              PRIMARY ALLOCATION
//             SEC=1,              SECONDARY ALLOCATION
//             DIR=1,              NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             FM=FB               RECFM
//ASM     EXEC  PGM=ASMA90,REGION=1024K,COND=EVEN,PARM='OBJECT,NODECK'
//*SM     EXEC  PGM=IEV90,REGION=1024K,COND=EVEN,PARM='OBJECT,NODECK'
//SYSPRINT DD  SYSOUT=&CLASS
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.MODGEN,DISP=SHR
//SYSUT1   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT2   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT3   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSPUNCH DD  DUMMY
//SYSLIN   DD  DSN=&INDEX..FILE&LAB..OBJ,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE) VOL=SER=&VO
//SYSIN    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//LKED     EXEC  PGM=IEWL,REGION=600K,COND=(4,LT,ASM),PARM=LIST
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT1   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSLMOD  DD  DSN=&INDEX..FILE&LAB..LOAD(&P),DISP=(NEW,&DSP),
//             UNIT=&WORK1,
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE) VOL=SER=&VO
//SYSLIN   DD  DSN=&INDEX..FILE&LAB..OBJ,DISP=(OLD,&DSP),
//             LABEL=(&LAB,&TY)
//       PEND
//COPY   PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             WORK2=SYSDA,        DASD WORK TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=PDS,           THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             DIR=92,             NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK           ALLOC INCREMENT
//COPY     EXEC  PGM=IEBCOPY,REGION=600K,COND=EVEN
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT3   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT4   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT1   DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE),VOL=SER=&VO
//SYSIN    DD  DUMMY
//       PEND
//GENERO PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=DATA,          THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//GENER    EXEC  PGM=IEBGENER,REGION=600K,COND=EVEN
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT1   DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE),VOL=SER=&VO
//SYSIN    DD  DUMMY
//       PEND
//UPDATEO PROC V1=CBT508,          INPUT TAPE VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             P1=PDSLOAD,    (ISPF STATS AND MUCH QUICKER - USE THIS
//*                             PROGRAM INSTEAD OF IEBUPDTE. FILE 093)
//*            P1=IEBUPDTE,   PROGRAM TO PROCESS IEBUPDTE SYSIN
//*                           STREAM. YOU MAY USE THE NORMAL IBM PGM
//*                           OR YOU MAY HAVE INSTALLED THE PDSLOAD
//*                           PROGRAM FROM FILE 316 OF THE CBT TAPE
//*                           WHICH IS USEFUL FOR FILES UNLOADED BY
//*                           THE FAMOUS YALE OFFLOAD PROGRAM. CAN
//*                           CHANGE THE IMBEDDED '><' TO './' AT
//*                           RELOAD.
//*   ---->                    IF PDSLOAD,  USE SYSUT1 DD
//*   ---->                    IF IEBUPDTE, USE SYSIN  DD
//             STEPLB='SYS1.CBT.LINKLIB', LIBRARY CONTAINS PGM=P1
//             S='UPDTE(><)',      'NEW'           IF IEBUPDTE
//*   ---->                        'UPDTE(><)'     IF PDSLOAD
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=PDS,           THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             DIR=92,             NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//UPDATE1  EXEC  PGM=&P,REGION=512K,COND=EVEN
//STEPLIB  DD  DSN=SYS1.CBT.LINKLIB,DISP=SHR
//INPUT    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=VB,LRECL=94,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//OUTPUT   DD  DSN=&&TEMP,DISP=(NEW,PASS),
//             UNIT=&WORK1,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE) VOL=SER=&VO
//UPDATE2  EXEC  PGM=&P1,PARM='&S',COND=EVEN
//STEPLIB  DD  DSN=&STEPLB,DISP=SHR
//SYSPRINT DD  SYSOUT=&CLASS     <<====  DUMMY OUT TO CUT PRINTOUT
//*                            IF PDSLOAD,  USE SYSUT1 DD
//*                            IF IEBUPDTE, USE SYSIN  DD
//*YSIN    DD  DSN=&&TEMP,DISP=(OLD,DELETE)
//SYSUPLOG DD  DISP=SHR,DSN=CBT.V508.SYSUPLOG(FILE&LAB)
//SYSUT1   DD  DSN=&&TEMP,DISP=(OLD,DELETE)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE),VOL=SER=&VO
//       PEND
//GENER  PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             LAB=,               INPUT TAPE LABEL NUMBER
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=DATA,          THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32716,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//GENER    EXEC  PGM=&P,REGION=512K,COND=EVEN
//STEPLIB  DD  DSN=SYS1.CBT.LINKLIB,DISP=SHR
//INPUT    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=VB,LRECL=94,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//OUTPUT   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE),VOL=SER=&VO
//       PEND
//*--------------------------------------------------------------*//
//*----  THE STEPS BELOW ARE REPEATED IN FILE 004, IF YOU   -----*//
//*----    ARE A NON-CARTRIDGE INSTALLATION LOADING THIS    -----*//
//*----    TAPE FROM TWO REELS.                             -----*//
//*----  IF YOU ARE LOADING FROM A CARTRIDGE, THERE IS NO   -----*//
//*----    ADDITIONAL JCL NECESSARY.                        -----*//
//*--------------------------------------------------------------*//
//STEP501     EXEC UPDATEO,LAB=501
//STEP502     EXEC UPDATEO,LAB=502
//STEP503     EXEC UPDATEO,LAB=503
//STEP504     EXEC UPDATEO,LAB=504
//STEP505     EXEC UPDATEO,LAB=505
//STEP506     EXEC UPDATEO,LAB=506
//STEP507     EXEC UPDATEO,LAB=507
//STEP508     EXEC UPDATEO,LAB=508
//STEP509     EXEC UPDATEO,LAB=509
//STEP510     EXEC UPDATEO,LAB=510
//STEP511     EXEC UPDATEO,LAB=511
//STEP512     EXEC UPDATEO,LAB=512
//STEP513     EXEC UPDATEO,LAB=513
//STEP514     EXEC UPDATEO,LAB=514
//STEP515     EXEC UPDATEO,LAB=515
//STEP516     EXEC UPDATEO,LAB=516
//STEP517     EXEC UPDATEO,LAB=517
//STEP518     EXEC UPDATEO,LAB=518
//STEP519     EXEC UPDATEO,LAB=519
//STEP520     EXEC UPDATEO,LAB=520
//STEP521     EXEC UPDATEO,LAB=521
//STEP522     EXEC UPDATEO,LAB=522
//STEP523     EXEC UPDATEO,LAB=523
//STEP524     EXEC UPDATEO,LAB=524
//STEP525     EXEC UPDATEO,LAB=525
//STEP526     EXEC UPDATEO,LAB=526
//STEP527     EXEC UPDATEO,LAB=527
//STEP528     EXEC UPDATEO,LAB=528
//STEP529     EXEC UPDATEO,LAB=529
//STEP530     EXEC UPDATEO,LAB=530
//STEP531     EXEC UPDATEO,LAB=531
//STEP532     EXEC UPDATEO,LAB=532
//STEP533     EXEC UPDATEO,LAB=533
//STEP534     EXEC UPDATEO,LAB=534
//STEP535     EXEC UPDATEO,LAB=535
//STEP536     EXEC UPDATEO,LAB=536
//STEP537     EXEC UPDATEO,LAB=537
//STEP538     EXEC UPDATEO,LAB=538
//STEP539     EXEC UPDATEO,LAB=539
//STEP540     EXEC UPDATEO,LAB=540
//STEP541     EXEC UPDATEO,LAB=541
//STEP542     EXEC UPDATEO,LAB=542
//STEP543     EXEC UPDATEO,LAB=543
//STEP544     EXEC UPDATEO,LAB=544
//STEP545     EXEC UPDATEO,LAB=545
//STEP546     EXEC UPDATEO,LAB=546
//STEP547     EXEC UPDATEO,LAB=547
//STEP548     EXEC UPDATEO,LAB=548
//STEP549     EXEC UPDATEO,LAB=549
//STEP550     EXEC UPDATEO,LAB=550
//STEP551     EXEC UPDATEO,LAB=551
//STEP552     EXEC UPDATEO,LAB=552
//STEP553     EXEC UPDATEO,LAB=553
//STEP554     EXEC UPDATEO,LAB=554
//STEP555     EXEC UPDATEO,LAB=555
//STEP556     EXEC UPDATEO,LAB=556
//STEP557     EXEC UPDATEO,LAB=557
//STEP558     EXEC UPDATEO,LAB=558
//STEP559     EXEC UPDATEO,LAB=559
//STEP560     EXEC UPDATEO,LAB=560,DIR=134
//STEP561     EXEC UPDATEO,LAB=561
//STEP562     EXEC UPDATEO,LAB=562
//STEP563     EXEC UPDATEO,LAB=563
//STEP564     EXEC UPDATEO,LAB=564
//STEP565     EXEC UPDATEO,LAB=565
//STEP566     EXEC UPDATEO,LAB=566
//STEP567     EXEC UPDATEO,LAB=567
//STEP568     EXEC COPY,LAB=568
//STEP569     EXEC UPDATEO,LAB=569
//STEP570     EXEC UPDATEO,LAB=570
//STEP571     EXEC UPDATEO,LAB=571
//STEP572     EXEC UPDATEO,LAB=572
//STEP573     EXEC UPDATEO,LAB=573
//STEP574     EXEC UPDATEO,LAB=574
//STEP575     EXEC UPDATEO,LAB=575
//STEP576     EXEC UPDATEO,LAB=576
//STEP577     EXEC UPDATEO,LAB=577
//STEP578     EXEC UPDATEO,LAB=578
//STEP579     EXEC UPDATEO,LAB=579
//STEP580     EXEC UPDATEO,LAB=580
//STEP581     EXEC UPDATEO,LAB=581
//STEP582     EXEC UPDATEO,LAB=582
//STEP583     EXEC UPDATEO,LAB=583
//STEP584     EXEC UPDATEO,LAB=584
//STEP585     EXEC UPDATEO,LAB=585
//STEP586     EXEC UPDATEO,LAB=586
//STEP587     EXEC UPDATEO,LAB=587
//STEP588     EXEC UPDATEO,LAB=588
//STEP589     EXEC UPDATEO,LAB=589
//STEP590     EXEC UPDATEO,LAB=590
//STEP591     EXEC UPDATEO,LAB=591
//STEP592     EXEC UPDATEO,LAB=592
//STEP593     EXEC UPDATEO,LAB=593
//STEP594     EXEC UPDATEO,LAB=594
//STEP595     EXEC UPDATEO,LAB=595
//STEP596     EXEC UPDATEO,LAB=596
//STEP597     EXEC UPDATEO,LAB=597
//STEP598     EXEC UPDATEO,LAB=598
//STEP599     EXEC UPDATEO,LAB=599
//STEP600     EXEC UPDATEO,LAB=600
//SBGOLOBE JOB ,'SAM GOLOB',CLASS=A,
//    MSGCLASS=X,NOTIFY=&SYSUID
//*
//* THIS JOB IS NOW SPLIT INTO SEVEN SEPARATE JOBS BECAUSE OF
//* IBM'S RESTRICTION THAT A JOB MAY NOT HAVE MORE THAN
//* 255 STEPS. THE FIRST JOB HAS 200 STEPS THE SECOND THE REST.
//* THE SEVENTH JOB WILL LOAD FILE 001 OF THE TAPE INTO A PRE-
//* DEFINED VSAM CLUSTER FOR INFO/MVS DATABASE PROCESSING (YOU
//* HAVE TO HAVE INFOMVS).
//*
//*
//*  YOU MAY HAVE A PROBLEM WITH SOME OF THESE FILES THAT ARE
//*  IEBCOPIED DOWN IF YOU TRY TO DROP TO A NON-3350 TYPE
//*  DEVICE SINCE MOST INPUT WAS FULL TRACK BLOCKED ON A 3350.
//*  THE ORIGINAL DCB'S ARE MARKED BELOW. YOU CAN DROP DOWN LOAD
//*  MODULES INTO A SMALLER BLOCKSIZE PDS, HOWEVER YOU WILL GET A
//*  WARNING MESSAGE AND YOU WILL NOT BE ABLE TO DO A COMPRESS
//*  IN PLACE ON THAT LIBRARY UNTIL YOU GET RID OF THE OFFENDING
//*  MEMBERS OR RELINK THEM BACK IN
//*
//*  YOU WILL GET THE FOLLOWING MESSAGE:
//*  IEB175I - WARNING INPUT RECORD IS GREATER THAN OUTPUT BLKSIZE
//*            DDNAME=XXXXXXXX,OUTPUT TTRN=00000000
//*
//*
//ASMFCL PROC  V1=CBT508,      -   INPUT TAPE VOLUME
//*            VO=CBTA01,      -   OUTPUT DASD VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             LAB=002,            INPUT TAPE LABEL NUMBER FOR PROGRAM
//             CLASS=A,        -   SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             WORK2=SYSDA,        DASD WORK TYPE
//             INDEX='CBT.V508', - FIRST LEVEL INDEX FOR DSNAME
//             DSP=PASS,           OUTPUT DATASET DISPOSITION
//             UNT=562,        -   TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=1,              PRIMARY ALLOCATION
//             SEC=1,              SECONDARY ALLOCATION
//             DIR=1,              NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             FM=FB               RECFM
//ASM     EXEC  PGM=ASMA90,REGION=1024K,COND=EVEN,PARM='OBJECT,NODECK'
//*SM     EXEC  PGM=IEV90,REGION=1024K,COND=EVEN,PARM='OBJECT,NODECK'
//SYSPRINT DD  SYSOUT=&CLASS
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.MODGEN,DISP=SHR
//SYSUT1   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT2   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT3   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSPUNCH DD  DUMMY
//SYSLIN   DD  DSN=&INDEX..FILE&LAB..OBJ,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE) VOL=SER=&VO
//SYSIN    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//LKED     EXEC  PGM=IEWL,REGION=600K,COND=(4,LT,ASM),PARM=LIST
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT1   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSLMOD  DD  DSN=&INDEX..FILE&LAB..LOAD(&P),DISP=(NEW,&DSP),
//             UNIT=&WORK1,
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE) VOL=SER=&VO
//SYSLIN   DD  DSN=&INDEX..FILE&LAB..OBJ,DISP=(OLD,&DSP),
//             LABEL=(&LAB,&TY)
//       PEND
//COPY   PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             WORK2=SYSDA,        DASD WORK TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=PDS,           THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             DIR=92,             NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK           ALLOC INCREMENT
//COPY     EXEC  PGM=IEBCOPY,REGION=600K,COND=EVEN
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT3   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT4   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT1   DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE),VOL=SER=&VO
//SYSIN    DD  DUMMY
//       PEND
//GENERO PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=DATA,          THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//GENER    EXEC  PGM=IEBGENER,REGION=600K,COND=EVEN
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT1   DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE),VOL=SER=&VO
//SYSIN    DD  DUMMY
//       PEND
//UPDATEO PROC V1=CBT508,          INPUT TAPE VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             P1=PDSLOAD,    (ISPF STATS AND MUCH QUICKER - USE THIS
//*                             PROGRAM INSTEAD OF IEBUPDTE. FILE 093)
//*            P1=IEBUPDTE,   PROGRAM TO PROCESS IEBUPDTE SYSIN
//*                           STREAM. YOU MAY USE THE NORMAL IBM PGM
//*                           OR YOU MAY HAVE INSTALLED THE PDSLOAD
//*                           PROGRAM FROM FILE 316 OF THE CBT TAPE
//*                           WHICH IS USEFUL FOR FILES UNLOADED BY
//*                           THE FAMOUS YALE OFFLOAD PROGRAM. CAN
//*                           CHANGE THE IMBEDDED '><' TO './' AT
//*                           RELOAD.
//*   ---->                    IF PDSLOAD,  USE SYSUT1 DD
//*   ---->                    IF IEBUPDTE, USE SYSIN  DD
//             STEPLB='SYS1.CBT.LINKLIB', LIBRARY CONTAINS PGM=P1
//             S='UPDTE(><)',      'NEW'           IF IEBUPDTE
//*   ---->                        'UPDTE(><)'     IF PDSLOAD
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=PDS,           THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             DIR=92,             NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//UPDATE1  EXEC  PGM=&P,REGION=512K,COND=EVEN
//STEPLIB  DD  DSN=SYS1.CBT.LINKLIB,DISP=SHR
//INPUT    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=VB,LRECL=94,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//OUTPUT   DD  DSN=&&TEMP,DISP=(NEW,PASS),
//             UNIT=&WORK1,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE) VOL=SER=&VO
//UPDATE2  EXEC  PGM=&P1,PARM='&S',COND=EVEN
//STEPLIB  DD  DSN=&STEPLB,DISP=SHR
//SYSPRINT DD  SYSOUT=&CLASS     <<====  DUMMY OUT TO CUT PRINTOUT
//*                            IF PDSLOAD,  USE SYSUT1 DD
//*                            IF IEBUPDTE, USE SYSIN  DD
//*YSIN    DD  DSN=&&TEMP,DISP=(OLD,DELETE)
//SYSUPLOG DD  DISP=SHR,DSN=CBT.V508.SYSUPLOG(FILE&LAB)
//SYSUT1   DD  DSN=&&TEMP,DISP=(OLD,DELETE)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE),VOL=SER=&VO
//       PEND
//GENER  PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             LAB=,               INPUT TAPE LABEL NUMBER
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=DATA,          THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32716,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//GENER    EXEC  PGM=&P,REGION=512K,COND=EVEN
//STEPLIB  DD  DSN=SYS1.CBT.LINKLIB,DISP=SHR
//INPUT    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=VB,LRECL=94,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//OUTPUT   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE),VOL=SER=&VO
//       PEND
//*--------------------------------------------------------------*//
//*----  THE STEPS BELOW ARE REPEATED IN FILE 004, IF YOU   -----*//
//*----    ARE A NON-CARTRIDGE INSTALLATION LOADING THIS    -----*//
//*----    TAPE FROM TWO REELS.                             -----*//
//*----  IF YOU ARE LOADING FROM A CARTRIDGE, THERE IS NO   -----*//
//*----    ADDITIONAL JCL NECESSARY.                        -----*//
//*--------------------------------------------------------------*//
//STEP601     EXEC UPDATEO,LAB=601
//STEP602     EXEC UPDATEO,LAB=602
//STEP603     EXEC UPDATEO,LAB=603
//STEP604     EXEC UPDATEO,LAB=604
//STEP605     EXEC UPDATEO,LAB=605
//STEP606     EXEC UPDATEO,LAB=606
//STEP607     EXEC UPDATEO,LAB=607
//STEP608     EXEC UPDATEO,LAB=608
//STEP609     EXEC UPDATEO,LAB=609
//STEP610     EXEC UPDATEO,LAB=610
//STEP611     EXEC UPDATEO,LAB=611
//STEP612     EXEC UPDATEO,LAB=612
//STEP613     EXEC UPDATEO,LAB=613
//STEP614     EXEC UPDATEO,LAB=614
//STEP615     EXEC UPDATEO,LAB=615
//STEP616     EXEC UPDATEO,LAB=616
//STEP617     EXEC COPY,LAB=617
//STEP618     EXEC UPDATEO,LAB=618
//STEP619     EXEC UPDATEO,LAB=619
//STEP620     EXEC UPDATEO,LAB=620
//STEP621     EXEC UPDATEO,LAB=621
//STEP622     EXEC UPDATEO,LAB=622
//STEP623     EXEC UPDATEO,LAB=623
//STEP624     EXEC UPDATEO,LAB=624
//STEP625     EXEC UPDATEO,LAB=625
//STEP626     EXEC UPDATEO,LAB=626
//STEP627     EXEC UPDATEO,LAB=627
//STEP628     EXEC UPDATEO,LAB=628
//STEP629     EXEC UPDATEO,LAB=629
//STEP630     EXEC UPDATEO,LAB=630
//STEP631     EXEC UPDATEO,LAB=631
//STEP632     EXEC UPDATEO,LAB=632
//STEP633     EXEC UPDATEO,LAB=633
//STEP634     EXEC UPDATEO,LAB=634
//STEP635     EXEC UPDATEO,LAB=635
//STEP636     EXEC UPDATEO,LAB=636
//STEP637     EXEC UPDATEO,LAB=637
//STEP638     EXEC UPDATEO,LAB=638
//STEP639     EXEC UPDATEO,LAB=639
//STEP640     EXEC UPDATEO,LAB=640
//STEP641     EXEC UPDATEO,LAB=641
//STEP642     EXEC UPDATEO,LAB=642
//STEP643     EXEC UPDATEO,LAB=643
//STEP644     EXEC UPDATEO,LAB=644
//STEP645     EXEC UPDATEO,LAB=645
//STEP646     EXEC UPDATEO,LAB=646
//STEP647     EXEC UPDATEO,LAB=647
//STEP648     EXEC UPDATEO,LAB=648
//STEP649     EXEC UPDATEO,LAB=649
//STEP650     EXEC UPDATEO,LAB=650
//STEP651     EXEC UPDATEO,LAB=651
//STEP652     EXEC UPDATEO,LAB=652
//STEP653     EXEC UPDATEO,LAB=653
//STEP654     EXEC UPDATEO,LAB=654
//STEP655     EXEC UPDATEO,LAB=655
//STEP656     EXEC UPDATEO,LAB=656
//STEP657     EXEC UPDATEO,LAB=657
//STEP658     EXEC UPDATEO,LAB=658
//STEP659     EXEC UPDATEO,LAB=659
//STEP660     EXEC UPDATEO,LAB=660
//STEP661     EXEC UPDATEO,LAB=661
//STEP662     EXEC UPDATEO,LAB=662
//STEP663     EXEC UPDATEO,LAB=663
//STEP664     EXEC UPDATEO,LAB=664
//STEP665     EXEC UPDATEO,LAB=665
//STEP666     EXEC UPDATEO,LAB=666
//STEP667     EXEC UPDATEO,LAB=667
//STEP668     EXEC UPDATEO,LAB=668
//STEP669     EXEC UPDATEO,LAB=669
//STEP670     EXEC UPDATEO,LAB=670
//STEP671     EXEC UPDATEO,LAB=671
//STEP672     EXEC UPDATEO,LAB=672
//STEP673     EXEC UPDATEO,LAB=673
//STEP674     EXEC UPDATEO,LAB=674
//STEP675     EXEC UPDATEO,LAB=675
//STEP676     EXEC UPDATEO,LAB=676
//STEP677     EXEC UPDATEO,LAB=677
//STEP678     EXEC UPDATEO,LAB=678
//STEP679     EXEC UPDATEO,LAB=679
//STEP680     EXEC UPDATEO,LAB=680
//STEP681     EXEC UPDATEO,LAB=681
//STEP682     EXEC UPDATEO,LAB=682
//STEP683     EXEC UPDATEO,LAB=683
//STEP684     EXEC UPDATEO,LAB=684
//STEP685     EXEC UPDATEO,LAB=685
//STEP686     EXEC UPDATEO,LAB=686
//STEP687     EXEC UPDATEO,LAB=687
//STEP688     EXEC UPDATEO,LAB=688
//STEP689     EXEC UPDATEO,LAB=689
//STEP690     EXEC UPDATEO,LAB=690
//STEP691     EXEC UPDATEO,LAB=691
//STEP692     EXEC UPDATEO,LAB=692
//STEP693     EXEC UPDATEO,LAB=693
//STEP694     EXEC UPDATEO,LAB=694
//STEP695     EXEC UPDATEO,LAB=695
//STEP696     EXEC UPDATEO,LAB=696
//STEP697     EXEC UPDATEO,LAB=697
//STEP698     EXEC UPDATEO,LAB=698
//STEP699     EXEC UPDATEO,LAB=699
//STEP700     EXEC UPDATEO,LAB=700
//SBGOLOBE JOB ,'SAM GOLOB',CLASS=A,
//    MSGCLASS=X,NOTIFY=&SYSUID
//*
//* THIS JOB IS NOW SPLIT INTO SEVEN SEPARATE JOBS BECAUSE OF
//* IBM'S RESTRICTION THAT A JOB MAY NOT HAVE MORE THAN
//* 255 STEPS. THE FIRST JOB HAS 200 STEPS THE SECOND THE REST.
//* THE SEVENTH JOB WILL LOAD FILE 001 OF THE TAPE INTO A PRE-
//* DEFINED VSAM CLUSTER FOR INFO/MVS DATABASE PROCESSING (YOU
//* HAVE TO HAVE INFOMVS).
//*
//*
//*  YOU MAY HAVE A PROBLEM WITH SOME OF THESE FILES THAT ARE
//*  IEBCOPIED DOWN IF YOU TRY TO DROP TO A NON-3350 TYPE
//*  DEVICE SINCE MOST INPUT WAS FULL TRACK BLOCKED ON A 3350.
//*  THE ORIGINAL DCB'S ARE MARKED BELOW. YOU CAN DROP DOWN LOAD
//*  MODULES INTO A SMALLER BLOCKSIZE PDS, HOWEVER YOU WILL GET A
//*  WARNING MESSAGE AND YOU WILL NOT BE ABLE TO DO A COMPRESS
//*  IN PLACE ON THAT LIBRARY UNTIL YOU GET RID OF THE OFFENDING
//*  MEMBERS OR RELINK THEM BACK IN
//*
//*  YOU WILL GET THE FOLLOWING MESSAGE:
//*  IEB175I - WARNING INPUT RECORD IS GREATER THAN OUTPUT BLKSIZE
//*            DDNAME=XXXXXXXX,OUTPUT TTRN=00000000
//*
//*
//ASMFCL PROC  V1=CBT508,      -   INPUT TAPE VOLUME
//*            VO=CBTA01,      -   OUTPUT DASD VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             LAB=002,            INPUT TAPE LABEL NUMBER FOR PROGRAM
//             CLASS=A,        -   SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             WORK2=SYSDA,        DASD WORK TYPE
//             INDEX='CBT.V508', - FIRST LEVEL INDEX FOR DSNAME
//             DSP=PASS,           OUTPUT DATASET DISPOSITION
//             UNT=562,        -   TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=1,              PRIMARY ALLOCATION
//             SEC=1,              SECONDARY ALLOCATION
//             DIR=1,              NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             FM=FB               RECFM
//ASM     EXEC  PGM=ASMA90,REGION=1024K,COND=EVEN,PARM='OBJECT,NODECK'
//*SM     EXEC  PGM=IEV90,REGION=1024K,COND=EVEN,PARM='OBJECT,NODECK'
//SYSPRINT DD  SYSOUT=&CLASS
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.MODGEN,DISP=SHR
//SYSUT1   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT2   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT3   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSPUNCH DD  DUMMY
//SYSLIN   DD  DSN=&INDEX..FILE&LAB..OBJ,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE) VOL=SER=&VO
//SYSIN    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//LKED     EXEC  PGM=IEWL,REGION=600K,COND=(4,LT,ASM),PARM=LIST
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT1   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSLMOD  DD  DSN=&INDEX..FILE&LAB..LOAD(&P),DISP=(NEW,&DSP),
//             UNIT=&WORK1,
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE) VOL=SER=&VO
//SYSLIN   DD  DSN=&INDEX..FILE&LAB..OBJ,DISP=(OLD,&DSP),
//             LABEL=(&LAB,&TY)
//       PEND
//COPY   PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             WORK2=SYSDA,        DASD WORK TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=PDS,           THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             DIR=92,             NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK           ALLOC INCREMENT
//COPY     EXEC  PGM=IEBCOPY,REGION=600K,COND=EVEN
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT3   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT4   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT1   DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE),VOL=SER=&VO
//SYSIN    DD  DUMMY
//       PEND
//GENERO PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=DATA,          THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//GENER    EXEC  PGM=IEBGENER,REGION=600K,COND=EVEN
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT1   DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE),VOL=SER=&VO
//SYSIN    DD  DUMMY
//       PEND
//UPDATEO PROC V1=CBT508,          INPUT TAPE VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             P1=PDSLOAD,    (ISPF STATS AND MUCH QUICKER - USE THIS
//*                             PROGRAM INSTEAD OF IEBUPDTE. FILE 093)
//*            P1=IEBUPDTE,   PROGRAM TO PROCESS IEBUPDTE SYSIN
//*                           STREAM. YOU MAY USE THE NORMAL IBM PGM
//*                           OR YOU MAY HAVE INSTALLED THE PDSLOAD
//*                           PROGRAM FROM FILE 316 OF THE CBT TAPE
//*                           WHICH IS USEFUL FOR FILES UNLOADED BY
//*                           THE FAMOUS YALE OFFLOAD PROGRAM. CAN
//*                           CHANGE THE IMBEDDED '><' TO './' AT
//*                           RELOAD.
//*   ---->                    IF PDSLOAD,  USE SYSUT1 DD
//*   ---->                    IF IEBUPDTE, USE SYSIN  DD
//             STEPLB='SYS1.CBT.LINKLIB', LIBRARY CONTAINS PGM=P1
//             S='UPDTE(><)',      'NEW'           IF IEBUPDTE
//*   ---->                        'UPDTE(><)'     IF PDSLOAD
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=PDS,           THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             DIR=92,             NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//UPDATE1  EXEC  PGM=&P,REGION=512K,COND=EVEN
//STEPLIB  DD  DSN=SYS1.CBT.LINKLIB,DISP=SHR
//INPUT    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=VB,LRECL=94,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//OUTPUT   DD  DSN=&&TEMP,DISP=(NEW,PASS),
//             UNIT=&WORK1,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE) VOL=SER=&VO
//UPDATE2  EXEC  PGM=&P1,PARM='&S',COND=EVEN
//STEPLIB  DD  DSN=&STEPLB,DISP=SHR
//SYSPRINT DD  SYSOUT=&CLASS     <<====  DUMMY OUT TO CUT PRINTOUT
//*                            IF PDSLOAD,  USE SYSUT1 DD
//*                            IF IEBUPDTE, USE SYSIN  DD
//*YSIN    DD  DSN=&&TEMP,DISP=(OLD,DELETE)
//SYSUPLOG DD  DISP=SHR,DSN=CBT.V508.SYSUPLOG(FILE&LAB)
//SYSUT1   DD  DSN=&&TEMP,DISP=(OLD,DELETE)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE),VOL=SER=&VO
//       PEND
//GENER  PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             LAB=,               INPUT TAPE LABEL NUMBER
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=DATA,          THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32716,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//GENER    EXEC  PGM=&P,REGION=512K,COND=EVEN
//STEPLIB  DD  DSN=SYS1.CBT.LINKLIB,DISP=SHR
//INPUT    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=VB,LRECL=94,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//OUTPUT   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE),VOL=SER=&VO
//       PEND
//STEP701     EXEC UPDATEO,LAB=701
//STEP702     EXEC UPDATEO,LAB=702
//STEP703     EXEC UPDATEO,LAB=703
//STEP704     EXEC UPDATEO,LAB=704
//STEP705     EXEC UPDATEO,LAB=705
//STEP706     EXEC COPY,LAB=706
//STEP707     EXEC UPDATEO,LAB=707
//STEP708     EXEC UPDATEO,LAB=708
//STEP709     EXEC UPDATEO,LAB=709
//STEP710     EXEC UPDATEO,LAB=710
//STEP711     EXEC UPDATEO,LAB=711
//STEP712     EXEC UPDATEO,LAB=712
//STEP713     EXEC UPDATEO,LAB=713
//STEP714     EXEC UPDATEO,LAB=714
//STEP715     EXEC UPDATEO,LAB=715
//STEP716     EXEC UPDATEO,LAB=716
//STEP717     EXEC UPDATEO,LAB=717
//STEP718     EXEC UPDATEO,LAB=718
//STEP719     EXEC UPDATEO,LAB=719
//STEP720     EXEC UPDATEO,LAB=720
//STEP721     EXEC UPDATEO,LAB=721
//STEP722     EXEC UPDATEO,LAB=722
//STEP723     EXEC UPDATEO,LAB=723
//STEP724     EXEC UPDATEO,LAB=724
//STEP725     EXEC UPDATEO,LAB=725
//STEP726     EXEC UPDATEO,LAB=726
//STEP727     EXEC UPDATEO,LAB=727
//STEP728     EXEC UPDATEO,LAB=728
//STEP729     EXEC UPDATEO,LAB=729
//STEP730     EXEC UPDATEO,LAB=730
//STEP731     EXEC UPDATEO,LAB=731
//STEP732     EXEC UPDATEO,LAB=732
//STEP733     EXEC UPDATEO,LAB=733
//STEP734     EXEC UPDATEO,LAB=734
//STEP735     EXEC UPDATEO,LAB=735
//STEP736     EXEC UPDATEO,LAB=736
//STEP737     EXEC UPDATEO,LAB=737
//STEP738     EXEC UPDATEO,LAB=738
//STEP739     EXEC UPDATEO,LAB=739
//STEP740     EXEC UPDATEO,LAB=740
//STEP741     EXEC UPDATEO,LAB=741
//STEP742     EXEC UPDATEO,LAB=742
//STEP743     EXEC UPDATEO,LAB=743
//STEP744     EXEC UPDATEO,LAB=744
//STEP745     EXEC UPDATEO,LAB=745
//STEP746     EXEC UPDATEO,LAB=746
//STEP747     EXEC UPDATEO,LAB=747
//STEP748     EXEC UPDATEO,LAB=748
//STEP749     EXEC UPDATEO,LAB=749
//STEP750     EXEC UPDATEO,LAB=750
//STEP751     EXEC UPDATEO,LAB=751
//STEP752     EXEC UPDATEO,LAB=752
//STEP753     EXEC UPDATEO,LAB=753
//STEP754     EXEC UPDATEO,LAB=754
//STEP755     EXEC UPDATEO,LAB=755
//STEP756     EXEC UPDATEO,LAB=756
//STEP757     EXEC UPDATEO,LAB=757
//STEP758     EXEC UPDATEO,LAB=758
//STEP759     EXEC UPDATEO,LAB=759
//STEP760     EXEC UPDATEO,LAB=760
//STEP761     EXEC UPDATEO,LAB=761
//STEP762     EXEC UPDATEO,LAB=762
//STEP763     EXEC UPDATEO,LAB=763
//STEP764     EXEC UPDATEO,LAB=764
//STEP765     EXEC UPDATEO,LAB=765
//STEP766     EXEC UPDATEO,LAB=766
//STEP767     EXEC UPDATEO,LAB=767
//STEP768     EXEC UPDATEO,LAB=768
//STEP769     EXEC UPDATEO,LAB=769
//STEP770     EXEC UPDATEO,LAB=770
//STEP771     EXEC UPDATEO,LAB=771
//STEP772     EXEC UPDATEO,LAB=772
//STEP773     EXEC UPDATEO,LAB=773
//STEP774     EXEC UPDATEO,LAB=774
//STEP775     EXEC UPDATEO,LAB=775
//STEP776     EXEC UPDATEO,LAB=776
//STEP777     EXEC UPDATEO,LAB=777
//STEP778     EXEC UPDATEO,LAB=778
//STEP779     EXEC UPDATEO,LAB=779
//STEP780     EXEC UPDATEO,LAB=780
//STEP781     EXEC UPDATEO,LAB=781
//STEP782     EXEC UPDATEO,LAB=782
//STEP783     EXEC UPDATEO,LAB=783
//STEP784     EXEC UPDATEO,LAB=784
//STEP785     EXEC UPDATEO,LAB=785
//STEP786     EXEC UPDATEO,LAB=786
//STEP787     EXEC UPDATEO,LAB=787
//STEP788     EXEC UPDATEO,LAB=788
//STEP789     EXEC UPDATEO,LAB=789
//STEP790     EXEC UPDATEO,LAB=790
//STEP791     EXEC UPDATEO,LAB=791
//STEP792     EXEC UPDATEO,LAB=792
//STEP793     EXEC UPDATEO,LAB=793
//STEP794     EXEC UPDATEO,LAB=794
//STEP795     EXEC UPDATEO,LAB=795
//STEP796     EXEC UPDATEO,LAB=796
//STEP797     EXEC UPDATEO,LAB=797
//STEP798     EXEC UPDATEO,LAB=798
//STEP799     EXEC UPDATEO,LAB=799
//STEP800     EXEC UPDATEO,LAB=800
//SBGOLOBE JOB ,'SAM GOLOB',CLASS=A,
//    MSGCLASS=X,NOTIFY=&SYSUID
//*
//* THIS JOB IS NOW SPLIT INTO SEVEN SEPARATE JOBS BECAUSE OF
//* IBM'S RESTRICTION THAT A JOB MAY NOT HAVE MORE THAN
//* 255 STEPS. THE FIRST JOB HAS 200 STEPS THE SECOND THE REST.
//* THE SEVENTH JOB WILL LOAD FILE 001 OF THE TAPE INTO A PRE-
//* DEFINED VSAM CLUSTER FOR INFO/MVS DATABASE PROCESSING (YOU
//* HAVE TO HAVE INFOMVS).
//*
//*
//*  YOU MAY HAVE A PROBLEM WITH SOME OF THESE FILES THAT ARE
//*  IEBCOPIED DOWN IF YOU TRY TO DROP TO A NON-3350 TYPE
//*  DEVICE SINCE MOST INPUT WAS FULL TRACK BLOCKED ON A 3350.
//*  THE ORIGINAL DCB'S ARE MARKED BELOW. YOU CAN DROP DOWN LOAD
//*  MODULES INTO A SMALLER BLOCKSIZE PDS, HOWEVER YOU WILL GET A
//*  WARNING MESSAGE AND YOU WILL NOT BE ABLE TO DO A COMPRESS
//*  IN PLACE ON THAT LIBRARY UNTIL YOU GET RID OF THE OFFENDING
//*  MEMBERS OR RELINK THEM BACK IN
//*
//*  YOU WILL GET THE FOLLOWING MESSAGE:
//*  IEB175I - WARNING INPUT RECORD IS GREATER THAN OUTPUT BLKSIZE
//*            DDNAME=XXXXXXXX,OUTPUT TTRN=00000000
//*
//*
//ASMFCL PROC  V1=CBT508,      -   INPUT TAPE VOLUME
//*            VO=CBTA01,      -   OUTPUT DASD VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             LAB=002,            INPUT TAPE LABEL NUMBER FOR PROGRAM
//             CLASS=A,        -   SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             WORK2=SYSDA,        DASD WORK TYPE
//             INDEX='CBT.V508', - FIRST LEVEL INDEX FOR DSNAME
//             DSP=PASS,           OUTPUT DATASET DISPOSITION
//             UNT=562,        -   TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=1,              PRIMARY ALLOCATION
//             SEC=1,              SECONDARY ALLOCATION
//             DIR=1,              NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             FM=FB               RECFM
//ASM     EXEC  PGM=ASMA90,REGION=1024K,COND=EVEN,PARM='OBJECT,NODECK'
//*SM     EXEC  PGM=IEV90,REGION=1024K,COND=EVEN,PARM='OBJECT,NODECK'
//SYSPRINT DD  SYSOUT=&CLASS
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.MODGEN,DISP=SHR
//SYSUT1   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT2   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT3   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSPUNCH DD  DUMMY
//SYSLIN   DD  DSN=&INDEX..FILE&LAB..OBJ,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE) VOL=SER=&VO
//SYSIN    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//LKED     EXEC  PGM=IEWL,REGION=600K,COND=(4,LT,ASM),PARM=LIST
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT1   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSLMOD  DD  DSN=&INDEX..FILE&LAB..LOAD(&P),DISP=(NEW,&DSP),
//             UNIT=&WORK1,
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE) VOL=SER=&VO
//SYSLIN   DD  DSN=&INDEX..FILE&LAB..OBJ,DISP=(OLD,&DSP),
//             LABEL=(&LAB,&TY)
//       PEND
//COPY   PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             WORK2=SYSDA,        DASD WORK TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=PDS,           THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             DIR=92,             NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK           ALLOC INCREMENT
//COPY     EXEC  PGM=IEBCOPY,REGION=600K,COND=EVEN
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT3   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT4   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT1   DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE),VOL=SER=&VO
//SYSIN    DD  DUMMY
//       PEND
//GENERO PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=DATA,          THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//GENER    EXEC  PGM=IEBGENER,REGION=600K,COND=EVEN
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT1   DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE),VOL=SER=&VO
//SYSIN    DD  DUMMY
//       PEND
//UPDATEO PROC V1=CBT508,          INPUT TAPE VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             P1=PDSLOAD,    (ISPF STATS AND MUCH QUICKER - USE THIS
//*                             PROGRAM INSTEAD OF IEBUPDTE. FILE 093)
//*            P1=IEBUPDTE,   PROGRAM TO PROCESS IEBUPDTE SYSIN
//*                           STREAM. YOU MAY USE THE NORMAL IBM PGM
//*                           OR YOU MAY HAVE INSTALLED THE PDSLOAD
//*                           PROGRAM FROM FILE 316 OF THE CBT TAPE
//*                           WHICH IS USEFUL FOR FILES UNLOADED BY
//*                           THE FAMOUS YALE OFFLOAD PROGRAM. CAN
//*                           CHANGE THE IMBEDDED '><' TO './' AT
//*                           RELOAD.
//*   ---->                    IF PDSLOAD,  USE SYSUT1 DD
//*   ---->                    IF IEBUPDTE, USE SYSIN  DD
//             STEPLB='SYS1.CBT.LINKLIB', LIBRARY CONTAINS PGM=P1
//             S='UPDTE(><)',      'NEW'           IF IEBUPDTE
//*   ---->                        'UPDTE(><)'     IF PDSLOAD
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=PDS,           THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             DIR=92,             NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//UPDATE1  EXEC  PGM=&P,REGION=2048K,COND=EVEN
//STEPLIB  DD  DSN=SYS1.CBT.LINKLIB,DISP=SHR
//INPUT    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=VB,LRECL=94,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//OUTPUT   DD  DSN=&&TEMP,DISP=(NEW,PASS),
//             UNIT=&WORK1,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE) VOL=SER=&VO
//UPDATE2  EXEC  PGM=&P1,PARM='&S',COND=EVEN
//STEPLIB  DD  DSN=&STEPLB,DISP=SHR
//SYSPRINT DD  SYSOUT=&CLASS     <<====  DUMMY OUT TO CUT PRINTOUT
//*                            IF PDSLOAD,  USE SYSUT1 DD
//*                            IF IEBUPDTE, USE SYSIN  DD
//*YSIN    DD  DSN=&&TEMP,DISP=(OLD,DELETE)
//SYSUPLOG DD  DISP=SHR,DSN=CBT.V508.SYSUPLOG(FILE&LAB)
//SYSUT1   DD  DSN=&&TEMP,DISP=(OLD,DELETE)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE),VOL=SER=&VO
//       PEND
//GENER  PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             LAB=,               INPUT TAPE LABEL NUMBER
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=DATA,          THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32716,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//GENER    EXEC  PGM=&P,REGION=512K,COND=EVEN
//STEPLIB  DD  DSN=SYS1.CBT.LINKLIB,DISP=SHR
//INPUT    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=VB,LRECL=94,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//OUTPUT   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE),VOL=SER=&VO
//       PEND
//STEP801     EXEC UPDATEO,LAB=801
//STEP802     EXEC UPDATEO,LAB=802
//STEP803     EXEC UPDATEO,LAB=803
//STEP804     EXEC UPDATEO,LAB=804
//STEP805     EXEC UPDATEO,LAB=805
//STEP806     EXEC UPDATEO,LAB=806
//STEP807     EXEC UPDATEO,LAB=807
//STEP808     EXEC GENERO,LAB=808,LR=80,BKI=5600,FM=FB,BKO=5600
//STEP809     EXEC UPDATEO,LAB=809
//STEP810     EXEC UPDATEO,LAB=810
//STEP811     EXEC UPDATEO,LAB=811
//STEP812     EXEC UPDATEO,LAB=812
//STEP813     EXEC UPDATEO,LAB=813
//STEP814     EXEC UPDATEO,LAB=814
//STEP815     EXEC UPDATEO,LAB=815
//STEP816     EXEC UPDATEO,LAB=816
//STEP817     EXEC UPDATEO,LAB=817
//STEP818     EXEC UPDATEO,LAB=818
//STEP819     EXEC UPDATEO,LAB=819
//STEP820     EXEC UPDATEO,LAB=820
//STEP821     EXEC UPDATEO,LAB=821
//STEP822     EXEC UPDATEO,LAB=822
//STEP823     EXEC UPDATEO,LAB=823
//STEP824     EXEC UPDATEO,LAB=824
//STEP825     EXEC UPDATEO,LAB=825
//STEP826     EXEC UPDATEO,LAB=826
//STEP827     EXEC UPDATEO,LAB=827
//STEP828     EXEC UPDATEO,LAB=828
//STEP829     EXEC UPDATEO,LAB=829
//STEP830     EXEC UPDATEO,LAB=830,DIR=224
//STEP831     EXEC UPDATEO,LAB=831
//STEP832     EXEC UPDATEO,LAB=832
//STEP833     EXEC UPDATEO,LAB=833
//STEP834     EXEC UPDATEO,LAB=834
//STEP835     EXEC UPDATEO,LAB=835
//STEP836     EXEC UPDATEO,LAB=836
//STEP837     EXEC UPDATEO,LAB=837
//STEP838     EXEC UPDATEO,LAB=838
//STEP839     EXEC UPDATEO,LAB=839
//STEP840     EXEC UPDATEO,LAB=840
//STEP841     EXEC UPDATEO,LAB=841
//STEP842     EXEC UPDATEO,LAB=842
//STEP843     EXEC UPDATEO,LAB=843
//STEP844     EXEC UPDATEO,LAB=844
//STEP845     EXEC UPDATEO,LAB=845
//STEP846     EXEC UPDATEO,LAB=846
//STEP847     EXEC UPDATEO,LAB=847,PRI=600
//STEP848     EXEC UPDATEO,LAB=848
//STEP849     EXEC UPDATEO,LAB=849
//STEP850     EXEC UPDATEO,LAB=850
//STEP851     EXEC UPDATEO,LAB=851
//STEP852     EXEC UPDATEO,LAB=852,PRI=1635
//STEP853     EXEC UPDATEO,LAB=853,PRI=1950
//STEP854     EXEC UPDATEO,LAB=854,PRI=210
//STEP855     EXEC UPDATEO,LAB=855
//STEP856     EXEC UPDATEO,LAB=856
//STEP857     EXEC UPDATEO,LAB=857
//STEP858     EXEC UPDATEO,LAB=858
//STEP859     EXEC UPDATEO,LAB=859,PRI=255
//STEP860     EXEC UPDATEO,LAB=860,PRI=810
//STEP861     EXEC UPDATEO,LAB=861
//STEP862     EXEC UPDATEO,LAB=862,PRI=270
//STEP863     EXEC UPDATEO,LAB=863
//STEP864     EXEC UPDATEO,LAB=864
//STEP865     EXEC UPDATEO,LAB=865
//STEP866     EXEC UPDATEO,LAB=866
//STEP867     EXEC UPDATEO,LAB=867
//STEP868     EXEC UPDATEO,LAB=868
//STEP869     EXEC UPDATEO,LAB=869,PRI=275
//STEP870     EXEC UPDATEO,LAB=870
//STEP871     EXEC UPDATEO,LAB=871
//STEP872     EXEC UPDATEO,LAB=872
//STEP873     EXEC UPDATEO,LAB=873
//STEP874     EXEC UPDATEO,LAB=874
//STEP875     EXEC UPDATEO,LAB=875,PRI=255
//STEP876     EXEC UPDATEO,LAB=876,PRI=270
//STEP877     EXEC UPDATEO,LAB=877
//STEP878     EXEC UPDATEO,LAB=878
//STEP879     EXEC UPDATEO,LAB=879
//STEP880     EXEC UPDATEO,LAB=880,PRI=300
//STEP881     EXEC UPDATEO,LAB=881
//STEP882     EXEC UPDATEO,LAB=882
//STEP883     EXEC UPDATEO,LAB=883,PRI=600
//STEP884     EXEC UPDATEO,LAB=884,PRI=300
//STEP885     EXEC UPDATEO,LAB=885
//STEP886     EXEC UPDATEO,LAB=886
//STEP887     EXEC UPDATEO,LAB=887,PRI=240
//STEP888     EXEC UPDATEO,LAB=888,PRI=1290
//STEP889     EXEC UPDATEO,LAB=889,PRI=525
//STEP890     EXEC UPDATEO,LAB=890,PRI=675
//STEP891     EXEC UPDATEO,LAB=891
//STEP892     EXEC UPDATEO,LAB=892
//STEP893     EXEC UPDATEO,LAB=893
//STEP894     EXEC UPDATEO,LAB=894
//STEP895     EXEC UPDATEO,LAB=895
//STEP896     EXEC UPDATEO,LAB=896
//STEP897     EXEC UPDATEO,LAB=897,PRI=300
//STEP898     EXEC UPDATEO,LAB=898,PRI=900
//STEP899     EXEC UPDATEO,LAB=899
//STEP900     EXEC UPDATEO,LAB=900
//SBGOLOBE JOB ,'SAM GOLOB',CLASS=A,
//    MSGCLASS=X,NOTIFY=&SYSUID
//*
//* THIS JOB IS NOW SPLIT INTO SEVEN SEPARATE JOBS BECAUSE OF
//* IBM'S RESTRICTION THAT A JOB MAY NOT HAVE MORE THAN
//* 255 STEPS. THE FIRST JOB HAS 200 STEPS THE SECOND THE REST.
//* THE SEVENTH JOB WILL LOAD FILE 001 OF THE TAPE INTO A PRE-
//* DEFINED VSAM CLUSTER FOR INFO/MVS DATABASE PROCESSING (YOU
//* HAVE TO HAVE INFOMVS).
//*
//*
//*  YOU MAY HAVE A PROBLEM WITH SOME OF THESE FILES THAT ARE
//*  IEBCOPIED DOWN IF YOU TRY TO DROP TO A NON-3350 TYPE
//*  DEVICE SINCE MOST INPUT WAS FULL TRACK BLOCKED ON A 3350.
//*  THE ORIGINAL DCB'S ARE MARKED BELOW. YOU CAN DROP DOWN LOAD
//*  MODULES INTO A SMALLER BLOCKSIZE PDS, HOWEVER YOU WILL GET A
//*  WARNING MESSAGE AND YOU WILL NOT BE ABLE TO DO A COMPRESS
//*  IN PLACE ON THAT LIBRARY UNTIL YOU GET RID OF THE OFFENDING
//*  MEMBERS OR RELINK THEM BACK IN
//*
//*  YOU WILL GET THE FOLLOWING MESSAGE:
//*  IEB175I - WARNING INPUT RECORD IS GREATER THAN OUTPUT BLKSIZE
//*            DDNAME=XXXXXXXX,OUTPUT TTRN=00000000
//*
//*
//ASMFCL PROC  V1=CBT508,      -   INPUT TAPE VOLUME
//*            VO=CBTA01,      -   OUTPUT DASD VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             LAB=002,            INPUT TAPE LABEL NUMBER FOR PROGRAM
//             CLASS=A,        -   SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             WORK2=SYSDA,        DASD WORK TYPE
//             INDEX='CBT.V508', - FIRST LEVEL INDEX FOR DSNAME
//             DSP=PASS,           OUTPUT DATASET DISPOSITION
//             UNT=562,        -   TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=1,              PRIMARY ALLOCATION
//             SEC=1,              SECONDARY ALLOCATION
//             DIR=1,              NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             FM=FB               RECFM
//ASM     EXEC  PGM=ASMA90,REGION=1024K,COND=EVEN,PARM='OBJECT,NODECK'
//*SM     EXEC  PGM=IEV90,REGION=1024K,COND=EVEN,PARM='OBJECT,NODECK'
//SYSPRINT DD  SYSOUT=&CLASS
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.MODGEN,DISP=SHR
//SYSUT1   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT2   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT3   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSPUNCH DD  DUMMY
//SYSLIN   DD  DSN=&INDEX..FILE&LAB..OBJ,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE) VOL=SER=&VO
//SYSIN    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//LKED     EXEC  PGM=IEWL,REGION=600K,COND=(4,LT,ASM),PARM=LIST
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT1   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSLMOD  DD  DSN=&INDEX..FILE&LAB..LOAD(&P),DISP=(NEW,&DSP),
//             UNIT=&WORK1,
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE) VOL=SER=&VO
//SYSLIN   DD  DSN=&INDEX..FILE&LAB..OBJ,DISP=(OLD,&DSP),
//             LABEL=(&LAB,&TY)
//       PEND
//COPY   PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             WORK2=SYSDA,        DASD WORK TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=PDS,           THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             DIR=92,             NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK           ALLOC INCREMENT
//COPY     EXEC  PGM=IEBCOPY,REGION=600K,COND=EVEN
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT3   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT4   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT1   DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE),VOL=SER=&VO
//SYSIN    DD  DUMMY
//       PEND
//GENERO PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=DATA,          THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//GENER    EXEC  PGM=IEBGENER,REGION=600K,COND=EVEN
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT1   DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE),VOL=SER=&VO
//SYSIN    DD  DUMMY
//       PEND
//UPDATEO PROC V1=CBT508,          INPUT TAPE VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             P1=PDSLOAD,    (ISPF STATS AND MUCH QUICKER - USE THIS
//*                             PROGRAM INSTEAD OF IEBUPDTE. FILE 093)
//*            P1=IEBUPDTE,   PROGRAM TO PROCESS IEBUPDTE SYSIN
//*                           STREAM. YOU MAY USE THE NORMAL IBM PGM
//*                           OR YOU MAY HAVE INSTALLED THE PDSLOAD
//*                           PROGRAM FROM FILE 316 OF THE CBT TAPE
//*                           WHICH IS USEFUL FOR FILES UNLOADED BY
//*                           THE FAMOUS YALE OFFLOAD PROGRAM. CAN
//*                           CHANGE THE IMBEDDED '><' TO './' AT
//*                           RELOAD.
//*   ---->                    IF PDSLOAD,  USE SYSUT1 DD
//*   ---->                    IF IEBUPDTE, USE SYSIN  DD
//             STEPLB='SYS1.CBT.LINKLIB', LIBRARY CONTAINS PGM=P1
//             S='UPDTE(><)',      'NEW'           IF IEBUPDTE
//*   ---->                        'UPDTE(><)'     IF PDSLOAD
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=PDS,           THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             DIR=92,             NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//UPDATE1  EXEC  PGM=&P,REGION=2048K,COND=EVEN
//STEPLIB  DD  DSN=SYS1.CBT.LINKLIB,DISP=SHR
//INPUT    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=VB,LRECL=94,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//OUTPUT   DD  DSN=&&TEMP,DISP=(NEW,PASS),
//             UNIT=&WORK1,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE) VOL=SER=&VO
//UPDATE2  EXEC  PGM=&P1,PARM='&S',COND=EVEN
//STEPLIB  DD  DSN=&STEPLB,DISP=SHR
//SYSPRINT DD  SYSOUT=&CLASS     <<====  DUMMY OUT TO CUT PRINTOUT
//*                            IF PDSLOAD,  USE SYSUT1 DD
//*                            IF IEBUPDTE, USE SYSIN  DD
//*YSIN    DD  DSN=&&TEMP,DISP=(OLD,DELETE)
//SYSUPLOG DD  DISP=SHR,DSN=CBT.V508.SYSUPLOG(FILE&LAB)
//SYSUT1   DD  DSN=&&TEMP,DISP=(OLD,DELETE)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE),VOL=SER=&VO
//       PEND
//GENER  PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             LAB=,               INPUT TAPE LABEL NUMBER
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=DATA,          THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32716,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//GENER    EXEC  PGM=&P,REGION=512K,COND=EVEN
//STEPLIB  DD  DSN=SYS1.CBT.LINKLIB,DISP=SHR
//INPUT    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=VB,LRECL=94,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//OUTPUT   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE),VOL=SER=&VO
//       PEND
//STEP901     EXEC UPDATEO,LAB=901,PRI=150
//STEP902     EXEC UPDATEO,LAB=902
//STEP903     EXEC UPDATEO,LAB=903
//STEP904     EXEC UPDATEO,LAB=904
//STEP905     EXEC UPDATEO,LAB=905
//STEP906     EXEC UPDATEO,LAB=906
//STEP907     EXEC UPDATEO,LAB=907
//STEP908     EXEC UPDATEO,LAB=908
//STEP909     EXEC UPDATEO,LAB=909
//STEP910     EXEC UPDATEO,LAB=910,PRI=420
//STEP911     EXEC UPDATEO,LAB=911
//STEP912     EXEC UPDATEO,LAB=912
//STEP913     EXEC UPDATEO,LAB=913
//STEP914     EXEC UPDATEO,LAB=914
//STEP915     EXEC UPDATEO,LAB=915
//STEP916     EXEC UPDATEO,LAB=916
//STEP917     EXEC UPDATEO,LAB=917
//STEP918     EXEC COPY,LAB=918
//STEP919     EXEC COPY,LAB=919,PRI=700
//STEP920     EXEC UPDATEO,LAB=920
//STEP921     EXEC UPDATEO,LAB=921
//STEP922     EXEC UPDATEO,LAB=922
//STEP923     EXEC UPDATEO,LAB=923
//STEP924     EXEC UPDATEO,LAB=924
//STEP925     EXEC UPDATEO,LAB=925
//STEP926     EXEC UPDATEO,LAB=926
//STEP927     EXEC UPDATEO,LAB=927
//STEP928     EXEC UPDATEO,LAB=928
//STEP929     EXEC UPDATEO,LAB=929
//STEP930     EXEC UPDATEO,LAB=930
//STEP931     EXEC UPDATEO,LAB=931
//STEP932     EXEC GENERO,LAB=932,LR=35,BKI=27965,FM=FB,BKO=27965
//STEP933     EXEC GENERO,LAB=933,LR=80,BKI=5600,FM=FB,BKO=5600
//STEP934     EXEC UPDATEO,LAB=934
//STEP935     EXEC UPDATEO,LAB=935,PRI=495
//STEP936     EXEC UPDATEO,LAB=936
//STEP937     EXEC UPDATEO,LAB=937
//STEP938     EXEC UPDATEO,LAB=938
//STEP939     EXEC UPDATEO,LAB=939,PRI=220
//STEP940     EXEC UPDATEO,LAB=940
//STEP941     EXEC UPDATEO,LAB=941
//STEP942     EXEC UPDATEO,LAB=942
//STEP943     EXEC UPDATEO,LAB=943,PRI=255,DIR=179
//STEP944     EXEC UPDATEO,LAB=944
//STEP945     EXEC UPDATEO,LAB=945
//STEP946     EXEC UPDATEO,LAB=946,PRI=315,DIR=179
//STEP947     EXEC UPDATEO,LAB=947
//STEP948     EXEC UPDATEO,LAB=948
//STEP949     EXEC UPDATEO,LAB=949
//STEP950     EXEC UPDATEO,LAB=950
//STEP951     EXEC UPDATEO,LAB=951
//STEP952     EXEC UPDATEO,LAB=952
//STEP953     EXEC UPDATEO,LAB=953
//STEP954     EXEC UPDATEO,LAB=954
//STEP955     EXEC UPDATEO,LAB=955
//STEP956     EXEC UPDATEO,LAB=956
//STEP957     EXEC UPDATEO,LAB=957
//STEP958     EXEC UPDATEO,LAB=958
//STEP959     EXEC UPDATEO,LAB=959
//STEP960     EXEC UPDATEO,LAB=960
//STEP961     EXEC UPDATEO,LAB=961
//STEP962     EXEC UPDATEO,LAB=962
//STEP963     EXEC UPDATEO,LAB=963
//STEP964     EXEC UPDATEO,LAB=964
//STEP965     EXEC UPDATEO,LAB=965,PRI=270
//STEP966     EXEC UPDATEO,LAB=966
//STEP967     EXEC UPDATEO,LAB=967
//STEP968     EXEC UPDATEO,LAB=968
//STEP969     EXEC UPDATEO,LAB=969
//STEP970     EXEC UPDATEO,LAB=970
//STEP971     EXEC UPDATEO,LAB=971
//STEP972     EXEC UPDATEO,LAB=972
//STEP973     EXEC UPDATEO,LAB=973
//STEP974     EXEC UPDATEO,LAB=974
//STEP975     EXEC UPDATEO,LAB=975
//STEP976     EXEC UPDATEO,LAB=976
//STEP977     EXEC UPDATEO,LAB=977
//STEP978     EXEC UPDATEO,LAB=978
//STEP979     EXEC UPDATEO,LAB=979
//STEP980     EXEC UPDATEO,LAB=980
//STEP981     EXEC UPDATEO,LAB=981
//STEP982     EXEC UPDATEO,LAB=982,PRI=585
//STEP983     EXEC UPDATEO,LAB=983
//STEP984     EXEC UPDATEO,LAB=984,PRI=210
//STEP985     EXEC UPDATEO,LAB=985
//STEP986     EXEC UPDATEO,LAB=986
//STEP987     EXEC UPDATEO,LAB=987
//STEP988     EXEC UPDATEO,LAB=988
//STEP989     EXEC UPDATEO,LAB=989
//STEP990     EXEC UPDATEO,LAB=990
//STEP991     EXEC UPDATEO,LAB=991
//STEP992     EXEC UPDATEO,LAB=992
//STEP993     EXEC UPDATEO,LAB=993,PRI=340
//STEP994     EXEC UPDATEO,LAB=994
//STEP995     EXEC UPDATEO,LAB=995,PRI=360
//STEP996     EXEC UPDATEO,LAB=996
//STEP997     EXEC UPDATEO,LAB=997
//STEP998     EXEC UPDATEO,LAB=998
//STEP999     EXEC UPDATEO,LAB=999
//STEP1000    EXEC UPDATEO,LAB=1000
//SBGOLOBE JOB ,'SAM GOLOB',CLASS=A,
//    MSGCLASS=X,NOTIFY=&SYSUID
//*
//* THIS JOB IS NOW SPLIT INTO SEVEN SEPARATE JOBS BECAUSE OF
//* IBM'S RESTRICTION THAT A JOB MAY NOT HAVE MORE THAN
//* 255 STEPS. THE FIRST JOB HAS 200 STEPS THE SECOND THE REST.
//* THE SEVENTH JOB WILL LOAD FILE 001 OF THE TAPE INTO A PRE-
//* DEFINED VSAM CLUSTER FOR INFO/MVS DATABASE PROCESSING (YOU
//* HAVE TO HAVE INFOMVS).
//*
//*
//*  YOU MAY HAVE A PROBLEM WITH SOME OF THESE FILES THAT ARE
//*  IEBCOPIED DOWN IF YOU TRY TO DROP TO A NON-3350 TYPE
//*  DEVICE SINCE MOST INPUT WAS FULL TRACK BLOCKED ON A 3350.
//*  THE ORIGINAL DCB'S ARE MARKED BELOW. YOU CAN DROP DOWN LOAD
//*  MODULES INTO A SMALLER BLOCKSIZE PDS, HOWEVER YOU WILL GET A
//*  WARNING MESSAGE AND YOU WILL NOT BE ABLE TO DO A COMPRESS
//*  IN PLACE ON THAT LIBRARY UNTIL YOU GET RID OF THE OFFENDING
//*  MEMBERS OR RELINK THEM BACK IN
//*
//*  YOU WILL GET THE FOLLOWING MESSAGE:
//*  IEB175I - WARNING INPUT RECORD IS GREATER THAN OUTPUT BLKSIZE
//*            DDNAME=XXXXXXXX,OUTPUT TTRN=00000000
//*
//*
//ASMFCL PROC  V1=CBT508,      -   INPUT TAPE VOLUME
//*            VO=CBTA01,      -   OUTPUT DASD VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             LAB=002,            INPUT TAPE LABEL NUMBER FOR PROGRAM
//             CLASS=A,        -   SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             WORK2=SYSDA,        DASD WORK TYPE
//             INDEX='CBT.V508', - FIRST LEVEL INDEX FOR DSNAME
//             DSP=PASS,           OUTPUT DATASET DISPOSITION
//             UNT=562,        -   TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=1,              PRIMARY ALLOCATION
//             SEC=1,              SECONDARY ALLOCATION
//             DIR=1,              NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             FM=FB               RECFM
//ASM     EXEC  PGM=ASMA90,REGION=1024K,COND=EVEN,PARM='OBJECT,NODECK'
//*SM     EXEC  PGM=IEV90,REGION=1024K,COND=EVEN,PARM='OBJECT,NODECK'
//SYSPRINT DD  SYSOUT=&CLASS
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.MODGEN,DISP=SHR
//SYSUT1   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT2   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT3   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSPUNCH DD  DUMMY
//SYSLIN   DD  DSN=&INDEX..FILE&LAB..OBJ,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE) VOL=SER=&VO
//SYSIN    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//LKED     EXEC  PGM=IEWL,REGION=600K,COND=(4,LT,ASM),PARM=LIST
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT1   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSLMOD  DD  DSN=&INDEX..FILE&LAB..LOAD(&P),DISP=(NEW,&DSP),
//             UNIT=&WORK1,
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE) VOL=SER=&VO
//SYSLIN   DD  DSN=&INDEX..FILE&LAB..OBJ,DISP=(OLD,&DSP),
//             LABEL=(&LAB,&TY)
//       PEND
//COPY   PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             WORK2=SYSDA,        DASD WORK TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=PDS,           THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             DIR=92,             NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK           ALLOC INCREMENT
//COPY     EXEC  PGM=IEBCOPY,REGION=600K,COND=EVEN
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT3   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT4   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT1   DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE),VOL=SER=&VO
//SYSIN    DD  DUMMY
//       PEND
//GENERO PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=DATA,          THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//GENER    EXEC  PGM=IEBGENER,REGION=600K,COND=EVEN
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT1   DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE),VOL=SER=&VO
//SYSIN    DD  DUMMY
//       PEND
//UPDATEO PROC V1=CBT508,          INPUT TAPE VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             P1=PDSLOAD,    (ISPF STATS AND MUCH QUICKER - USE THIS
//*                             PROGRAM INSTEAD OF IEBUPDTE. FILE 093)
//*            P1=IEBUPDTE,   PROGRAM TO PROCESS IEBUPDTE SYSIN
//*                           STREAM. YOU MAY USE THE NORMAL IBM PGM
//*                           OR YOU MAY HAVE INSTALLED THE PDSLOAD
//*                           PROGRAM FROM FILE 316 OF THE CBT TAPE
//*                           WHICH IS USEFUL FOR FILES UNLOADED BY
//*                           THE FAMOUS YALE OFFLOAD PROGRAM. CAN
//*                           CHANGE THE IMBEDDED '><' TO './' AT
//*                           RELOAD.
//*   ---->                    IF PDSLOAD,  USE SYSUT1 DD
//*   ---->                    IF IEBUPDTE, USE SYSIN  DD
//             STEPLB='SYS1.CBT.LINKLIB', LIBRARY CONTAINS PGM=P1
//             S='UPDTE(><)',      'NEW'           IF IEBUPDTE
//*   ---->                        'UPDTE(><)'     IF PDSLOAD
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=PDS,           THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             DIR=92,             NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//UPDATE1  EXEC  PGM=&P,REGION=2048K,COND=EVEN
//STEPLIB  DD  DSN=SYS1.CBT.LINKLIB,DISP=SHR
//INPUT    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=VB,LRECL=94,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//OUTPUT   DD  DSN=&&TEMP,DISP=(NEW,PASS),
//             UNIT=&WORK1,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE) VOL=SER=&VO
//UPDATE2  EXEC  PGM=&P1,PARM='&S',COND=EVEN
//STEPLIB  DD  DSN=&STEPLB,DISP=SHR
//SYSPRINT DD  SYSOUT=&CLASS     <<====  DUMMY OUT TO CUT PRINTOUT
//*                            IF PDSLOAD,  USE SYSUT1 DD
//*                            IF IEBUPDTE, USE SYSIN  DD
//*YSIN    DD  DSN=&&TEMP,DISP=(OLD,DELETE)
//SYSUPLOG DD  DISP=SHR,DSN=CBT.V508.SYSUPLOG(FILE&LAB)
//SYSUT1   DD  DSN=&&TEMP,DISP=(OLD,DELETE)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE),VOL=SER=&VO
//       PEND
//GENER  PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             LAB=,               INPUT TAPE LABEL NUMBER
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=DATA,          THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32716,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//GENER    EXEC  PGM=&P,REGION=512K,COND=EVEN
//STEPLIB  DD  DSN=SYS1.CBT.LINKLIB,DISP=SHR
//INPUT    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=VB,LRECL=94,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//OUTPUT   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE),VOL=SER=&VO
//       PEND
//STEP1001    EXEC UPDATEO,LAB=1001
//STEP1002    EXEC UPDATEO,LAB=1002
//STEP1003    EXEC UPDATEO,LAB=1003
//STEP1004    EXEC UPDATEO,LAB=1004
//STEP1005    EXEC UPDATEO,LAB=1005
//STEP1006    EXEC UPDATEO,LAB=1006
//STEP1007    EXEC UPDATEO,LAB=1007
//STEP1008    EXEC UPDATEO,LAB=1008
//STEP1009    EXEC UPDATEO,LAB=1009
//STEP1010    EXEC UPDATEO,LAB=1010
//STEP1011    EXEC UPDATEO,LAB=1011
//STEP1012    EXEC UPDATEO,LAB=1012
//STEP1013    EXEC UPDATEO,LAB=1013
//STEP1014    EXEC UPDATEO,LAB=1014
//STEP1015    EXEC UPDATEO,LAB=1015,PRI=560
//STEP1016    EXEC UPDATEO,LAB=1016
//STEP1017    EXEC UPDATEO,LAB=1017
//STEP1018    EXEC UPDATEO,LAB=1018
//STEP1019    EXEC UPDATEO,LAB=1019
//STEP1020    EXEC UPDATEO,LAB=1020
//STEP1021    EXEC UPDATEO,LAB=1021
//STEP1022    EXEC UPDATEO,LAB=1022
//STEP1023    EXEC UPDATEO,LAB=1023
//STEP1024    EXEC UPDATEO,LAB=1024
//STEP1025    EXEC UPDATEO,LAB=1025
//STEP1026    EXEC UPDATEO,LAB=1026
//STEP1027    EXEC UPDATEO,LAB=1027
//STEP1028    EXEC UPDATEO,LAB=1028
//STEP1029    EXEC UPDATEO,LAB=1029
//STEP1030    EXEC UPDATEO,LAB=1030,PRI=360
//STEP1031    EXEC UPDATEO,LAB=1031
//STEP1032    EXEC UPDATEO,LAB=1032
//STEP1033    EXEC UPDATEO,LAB=1033
//STEP1034    EXEC UPDATEO,LAB=1034
//STEP1035    EXEC UPDATEO,LAB=1035
//STEP1036    EXEC UPDATEO,LAB=1036
//STEP1037    EXEC UPDATEO,LAB=1037
//STEP1038    EXEC UPDATEO,LAB=1038
//STEP1039    EXEC UPDATEO,LAB=1039
//STEP1040    EXEC UPDATEO,LAB=1040
//STEP1041    EXEC COPY,LAB=1041
//STEP1042    EXEC UPDATEO,LAB=1042
//STEP1043    EXEC UPDATEO,LAB=1043
//STEP1044    EXEC UPDATEO,LAB=1044
//STEP1045    EXEC UPDATEO,LAB=1045
//STEP1046    EXEC UPDATEO,LAB=1046
//STEP1047    EXEC UPDATEO,LAB=1047
//STEP1048    EXEC UPDATEO,LAB=1048
//STEP1050    EXEC UPDATEO,LAB=1050,PRI=800
//STEP1051    EXEC UPDATEO,LAB=1051
//STEP1052    EXEC UPDATEO,LAB=1052
//STEP1053    EXEC UPDATEO,LAB=1053
//STEP1054    EXEC UPDATEO,LAB=1054
//STEP1055    EXEC UPDATEO,LAB=1055
//STEP1056    EXEC UPDATEO,LAB=1056
//STEP1057    EXEC UPDATEO,LAB=1057
//STEP1058    EXEC COPY,LAB=1058
