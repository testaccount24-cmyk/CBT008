//SBGOLOBE JOB ,'SAM GOLOB',CLASS=A,
//    MSGCLASS=X,NOTIFY=&SYSUID
//*
//*
//*  IT IS BETTER TO USE PDSLOAD THAN IEBUPDTE FOR THE UPDATEO PROC.
//*  -->>>  UPDATEO IS THE FORMAT OF MOST FILES ON THIS TAPE  <<<--
//*  PDSLOAD LOADS ISPF STATS WHEN THEY ARE AVAILABLE.  ALSO, NULL
//*  MEMBERS OF PDS'ES WILL GET LOST WITH IEBUPDTE (AND WILL GET RC 4),
//*  BUT WHEN USING PDSLOAD, THESE NULL MEMBERS WILL NOT GET LOST.
//*
//*  ALSO, THE OUTPUT FROM PDSLOAD IS MUCH SHORTER THAN FROM IEBUPDTE,
//*  AND RUN TIMES ARE MUCH SHORTER.
//*
//*  FILES WITH NULL MEMBERS ARE MARKED:   >>> GETS RC=4 WITH IEBUPDTE
//*
//* (THE LOAD MODULE FOR PDSLOAD CAN NOW BE FOUND ON FILE 035.)
//*
//* ASSEMBLER:   IFOX00 HAS BEEN CHANGED TO IEV90.  IF YOU ONLY HAVE
//* IFOX00, THEN CHANGE DDNAME "SYSLIN" IN THE //ASM STEP TO SYSGO.
//* MAKE THIS CHANGE IN ALL SEVEN PLACES. NOTE THAT THE //LKED STEP
//* ALSO HAS A SYSLIN DDNAME.  DON'T CHANGE THAT ONE.
//*
//* IEV90 HAS BEEN CHANGED TO ASMA90.  TO USE IEV90, UNCOMMENT AND
//* COMMENT THE APPROPRIATE LINES IN THE //ASM STEPS (6 OF THEM).
//*
//* >>>  NOTE:  DEFAULT REGION SIZES HAVE BEEN CHANGED FROM      <<<
//* >>>  256K TO 600K.  IF NOT BIG ENOUGH, PLEASE REPORT         <<<
//* >>>  THIS SITUATION TO ME.  (SAM GOLOB - SBGOLOB@IBM.NET OR  <<<
//* >>>                                      SBGOLOB@AOL.COM   ) <<<
//*
//* THIS JOB IS NOW SPLIT INTO SEVEN SEPARATE JOBS BECAUSE OF
//* IBM'S RESTRICTION THAT A JOB MAY NOT HAVE MORE THAN
//* 255 STEPS. THE FIRST JOB HAS 100 STEPS THE SECOND THE NEXT 100...
//* THE SEVENTH JOB WILL LOAD FILE 001 OF THE TAPE INTO A PRE-
//* DEFINED VSAM CLUSTER FOR INFO/MVS DATABASE PROCESSING (YOU
//* HAVE TO HAVE INFOMVS).
//*
//*  YOU MAY HAVE A PROBLEM WITH SOME OF THESE FILES THAT ARE
//*  IEBCOPIED DOWN IF YOU TRY TO DROP TO A NON-3350 TYPE
//*  DEVICE SINCE MOST INPUT WAS FULL TRACK BLOCKED ON A 3350.
//*  THE ORIGINAL DCB'S ARE MARKED BELOW. YOU CAN DROP DOWN LOAD
//*  MODULES INTO A SMALLER BLOCKSIZE PDS, HOWEVER YOU WILL GET A
//*  WARNING MESSAGE AND YOU WILL NOT BE ABLE TO DO A COMPRESS
//*  IN PLACE ON THAT LIBRARY UNTIL YOU GET RID OF THE OFFENDING
//*  MEMBERS OR RELINK THEM BACK IN.  (SEE NEXT NOTE)
//*
//*  ON DFP SYSTEMS, IEBCOPY HAS THE COPYMOD OPTION
//*  WHICH WILL REBLOCK THE OUTPUT MODULES, SO THE ENDS OF
//*  ANY LONG BLOCKS WILL NOT GET LOST.  INSTEAD OF THE
//*  CONTROL CARD, COPY, USE COPYMOD ...,MAXBLK=6144 OR SOME
//*  OTHER, SMALL ENOUGH VALUE FOR THE OUTPUT BLOCK SIZE.
//*
//*  IF YOU STAY WITH 'COPY', YOU MAY GET THE FOLLOWING MESSAGE:
//*  IEB175I - WARNING INPUT RECORD IS GREATER THAN OUTPUT BLKSIZE
//*            DDNAME=XXXXXXXX,OUTPUT TTRN=00000000
//*
//*  NEXT NOTE:  HOWEVER, MOST OF US ARE RUNNING ON VERY MODERN
//*              SYSTEMS AND ARE USING 3380 OR 3390 DISK PACKS,
//*              OR OTHER DASD WITH LARGER TRACK SIZES THAN 19069,
//*              WHICH IS THE TRACK SIZE OF A 3350 DISK PACK.
//*              THEREFORE, SINCE WE'RE NOT TRYING TO LOAD TO A
//*              3330 (TRACK SIZE 13030), THERE'S NO PROBLEM.
//*
//*              IF WE WOULD (PERCHANCE) WANT TO CUT THE BLOCKSIZE
//*              OF AN IEBCOPY-UNLOADED LOAD LIBRARY ON THIS TAPE,
//*              DO AS FOLLOWS:
//*
//*              WE CAN OVERRIDE THE SYSIN DDNAME ON THE "COPY"
//*              PROC AS BELOW.  OUR SYSTEM HAS TO BE RUNNING A "DFP"
//*              VERSION OF IEBCOPY, AS OPPOSED TO "PRE-DFP", SO
//*              THAT THE COPYMOD KEYWORD WILL WORK.
//*
//*       //SYSIN  DD  *
//*         COPYMOD I=SYSUT1,O=SYSUT2,MAXBLK=6144
//*       /*
//*
//*         (WHERE 6144 CAN BE ANY SMALL BLOCKSIZE OF YOUR CHOICE)
//*
//*
//ASMFCL PROC  V1=CXY508,      -   INPUT TAPE VOLUME
//*            VO=WORK94,      -   OUTPUT DASD VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             LAB=002,            INPUT TAPE LABEL NUMBER FOR PROGRAM
//             CLASS=A,        -   SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             WORK2=SYSDA,        DASD WORK TYPE
//             INDEX='CBT.Y508', - FIRST LEVEL INDEX FOR DSNAME
//             DSP=PASS,           OUTPUT DATASET DISPOSITION
//             UNT=562,        -   TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=1,              PRIMARY ALLOCATION
//             SEC=1,              SECONDARY ALLOCATION
//             DIR=1,              NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             FM=FB               RECFM
//ASM     EXEC  PGM=ASMA90,REGION=1024K,COND=EVEN,PARM='OBJECT,NODECK'
//*SM     EXEC  PGM=IEV90,REGION=1024K,COND=EVEN,PARM='OBJECT,NODECK'
//SYSPRINT DD  SYSOUT=&CLASS
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.MODGEN,DISP=SHR
//SYSUT1   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT2   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT3   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSPUNCH DD  DUMMY
//SYSLIN   DD  DSN=&INDEX..FILE&LAB..OBJ,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE) VOL=SER=&VO
//SYSIN    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//LKED     EXEC  PGM=IEWL,REGION=600K,COND=(4,LT,ASM),PARM=LIST
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT1   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSLMOD  DD  DSN=&INDEX..FILE&LAB..LOAD(&P),DISP=(NEW,&DSP),
//             UNIT=&WORK1,
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR)) VOL=SER=&VO
//SYSLIN   DD  DSN=&INDEX..FILE&LAB..OBJ,DISP=(OLD,&DSP),
//             LABEL=(&LAB,&TY)
//       PEND
//COPY   PROC  V1=CXY508,          INPUT TAPE VOLUME
//             VO=WORK94,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             WORK2=SYSDA,        DASD WORK TYPE
//             INDEX='CBT.Y508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=PDS,           THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             DIR=92,             NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK           ALLOC INCREMENT
//COPY     EXEC  PGM=IEBCOPY,REGION=600K,COND=EVEN
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT3   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT4   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT1   DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE),VOL=SER=&VO
//SYSIN    DD  DUMMY
//       PEND
//GENERO PROC  V1=CXY508,          INPUT TAPE VOLUME
//             VO=WORK94,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.Y508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=DATA,          THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//GENER    EXEC  PGM=IEBGENER,REGION=600K,COND=EVEN
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT1   DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE),VOL=SER=&VO
//SYSIN    DD  DUMMY
//       PEND
//UPDATEO PROC V1=CXY508,          INPUT TAPE VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             P1=PDSLOAD,    (ISPF STATS AND MUCH QUICKER - USE THIS
//*                             PROGRAM INSTEAD OF IEBUPDTE. FILE 093)
//*            P1=IEBUPDTE,   PROGRAM TO PROCESS IEBUPDTE SYSIN
//*                           STREAM. YOU MAY USE THE NORMAL IBM PGM
//*                           OR YOU MAY HAVE INSTALLED THE PDSLOAD
//*                           PROGRAM FROM FILE 316 OF THE CBT TAPE
//*                           WHICH IS USEFUL FOR FILES UNLOADED BY
//*                           THE FAMOUS YALE OFFLOAD PROGRAM. CAN
//*                           CHANGE THE IMBEDDED '><' TO './' AT
//*                           RELOAD.
//*   ---->                    IF PDSLOAD,  USE SYSUT1 DD
//*   ---->                    IF IEBUPDTE, USE SYSIN  DD
//             STEPLB='SYS1.CBT.LINKLIB', LIBRARY CONTAINS PGM=P1
//             S='UPDTE(><)',      'NEW'           IF IEBUPDTE
//*   ---->                        'UPDTE(><)'     IF PDSLOAD
//             VO=WORK94,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.Y508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=PDS,           THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             DIR=92,             NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//UPDATE1  EXEC  PGM=&P,REGION=512K,COND=EVEN
//STEPLIB  DD  DSN=SYS1.CBT.LINKLIB,DISP=SHR
//INPUT    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=VB,LRECL=94,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//OUTPUT   DD  DSN=&&TEMP,DISP=(NEW,PASS),
//             UNIT=&WORK1,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE) VOL=SER=&VO
//UPDATE2  EXEC  PGM=&P1,PARM='&S',COND=EVEN
//STEPLIB  DD  DSN=&STEPLB,DISP=SHR
//SYSPRINT DD  SYSOUT=&CLASS     <<====  DUMMY OUT TO CUT PRINTOUT
//*                            IF PDSLOAD,  USE SYSUT1 DD
//*                            IF IEBUPDTE, USE SYSIN  DD
//*YSIN    DD  DSN=&&TEMP,DISP=(OLD,DELETE)
//SYSUPLOG DD  DISP=SHR,DSN=CBT.Y508.SYSUPLOG(FILE&LAB)
//SYSUT1   DD  DSN=&&TEMP,DISP=(OLD,DELETE)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE),VOL=SER=&VO
//       PEND
//GENER  PROC  V1=CXY508,          INPUT TAPE VOLUME
//             VO=WORK94,          OUTPUT DASD VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             LAB=,               INPUT TAPE LABEL NUMBER
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.Y508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=DATA,          THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32716,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//GENER    EXEC  PGM=&P,REGION=512K,COND=EVEN
//STEPLIB  DD  DSN=SYS1.CBT.LINKLIB,DISP=SHR
//INPUT    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=VB,LRECL=94,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//OUTPUT   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE),VOL=SER=&VO
//       PEND
//STEP001     EXEC GENERO,LAB=001
//STEP002     EXEC GENERO,LAB=002
//STEP003     EXEC GENERO,LAB=003
//STEP004     EXEC GENERO,LAB=004
//STEP005     EXEC GENERO,LAB=005
//STEP006     EXEC UPDATEO,LAB=006
//STEP007     EXEC GENERO,LAB=007
//STEP008     EXEC UPDATEO,LAB=008
//STEP009     EXEC UPDATEO,LAB=009
//STEP010     EXEC UPDATEO,LAB=010
//STEP011     EXEC UPDATEO,LAB=011
//STEP012     EXEC UPDATEO,LAB=012
//STEP013     EXEC UPDATEO,LAB=013
//STEP014     EXEC UPDATEO,LAB=014
//STEP015     EXEC UPDATEO,LAB=015
//STEP016     EXEC UPDATEO,LAB=016
//STEP017     EXEC UPDATEO,LAB=017
//STEP018     EXEC GENERO,LAB=018,FM=FBA,LR=133,BKI=32718,BKO=6118
//STEP019     EXEC UPDATEO,LAB=019
//STEP020     EXEC UPDATEO,LAB=020
//STEP021     EXEC UPDATEO,LAB=021
//STEP022     EXEC UPDATEO,LAB=022
//STEP023     EXEC UPDATEO,LAB=023
//STEP024     EXEC UPDATEO,LAB=024
//STEP025     EXEC UPDATEO,LAB=025
//STEP026     EXEC UPDATEO,LAB=026
//STEP027     EXEC UPDATEO,LAB=027
//STEP028     EXEC UPDATEO,LAB=028
//STEP029     EXEC UPDATEO,LAB=029
//STEP030     EXEC UPDATEO,LAB=030
//STEP031     EXEC UPDATEO,LAB=031
//STEP032     EXEC UPDATEO,LAB=032
//STEP033     EXEC UPDATEO,LAB=033
//STEP034     EXEC UPDATEO,LAB=034
//STEP035     EXEC COPY,LAB=035   DCB=RECFM=U,BLKSIZE=19069
//STEP036     EXEC UPDATEO,LAB=036
//STEP037     EXEC UPDATEO,LAB=037
//STEP038     EXEC UPDATEO,LAB=038
//STEP039     EXEC UPDATEO,LAB=039
//STEP040     EXEC UPDATEO,LAB=040
//STEP041     EXEC UPDATEO,LAB=041
//STEP042     EXEC UPDATEO,LAB=042              (WAS //STEP004.)
//*TEP043     EXEC GENERO,LAB=043,FM=VB,LR=255,BKI=3120,BKO=3120
//STEP044     EXEC UPDATEO,LAB=044
//STEP045     EXEC UPDATEO,LAB=045
//STEP046     EXEC UPDATEO,LAB=046
//STEP047     EXEC UPDATEO,LAB=047
//STEP048     EXEC UPDATEO,LAB=048
//STEP049     EXEC UPDATEO,LAB=049
//STEP050     EXEC UPDATEO,LAB=050
//STEP051     EXEC UPDATEO,LAB=051
//STEP052     EXEC UPDATEO,LAB=052
//STEP053     EXEC UPDATEO,LAB=053
//STEP054     EXEC UPDATEO,LAB=054
//STEP055     EXEC UPDATEO,LAB=055
//STEP056     EXEC UPDATEO,LAB=056
//STEP057     EXEC COPY,LAB=057   DCB=RECFM=VB,LRECL=255,BLKSIZE=6233
//STEP058     EXEC UPDATEO,LAB=058
//STEP059     EXEC UPDATEO,LAB=059
//STEP060     EXEC UPDATEO,LAB=060
//STEP061     EXEC COPY,LAB=061   DCB=RECFM=U,BLKSIZE=19069
//STEP062     EXEC GENERO,LAB=062,FM=FB,LR=2040,BKI=2040,BKO=2040
//STEP063     EXEC GENERO,LAB=063,FM=FB,LR=8180,BKI=8180,BKO=8180
//STEP064     EXEC GENERO,LAB=064,FM=FB,LR=53,BKI=5300,BKO=5300
//STEP065     EXEC UPDATEO,LAB=065
//STEP066     EXEC UPDATEO,LAB=066
//STEP067     EXEC UPDATEO,LAB=067
//STEP068     EXEC UPDATEO,LAB=068
//STEP069     EXEC UPDATEO,LAB=069
//STEP070     EXEC UPDATEO,LAB=070
//STEP071     EXEC UPDATEO,LAB=071
//STEP072     EXEC UPDATEO,LAB=072
//STEP073     EXEC COPY,LAB=073
//STEP074     EXEC UPDATEO,LAB=074
//STEP075     EXEC UPDATEO,LAB=075
//STEP076     EXEC UPDATEO,LAB=076
//STEP077     EXEC UPDATEO,LAB=077
//STEP078     EXEC UPDATEO,LAB=078
//STEP079     EXEC UPDATEO,LAB=079
//STEP080     EXEC UPDATEO,LAB=080
//STEP081     EXEC UPDATEO,LAB=081
//STEP082     EXEC UPDATEO,LAB=082
//STEP083     EXEC UPDATEO,LAB=083
//STEP084     EXEC UPDATEO,LAB=084
//STEP085     EXEC UPDATEO,LAB=085
//STEP086     EXEC UPDATEO,LAB=086
//STEP087     EXEC UPDATEO,LAB=087
//STEP088     EXEC UPDATEO,LAB=088
//STEP089     EXEC UPDATEO,LAB=089
//STEP090     EXEC UPDATEO,LAB=090
//STEP091     EXEC UPDATEO,LAB=091
//STEP092     EXEC UPDATEO,LAB=092
//STEP093     EXEC UPDATEO,LAB=093
//STEP094     EXEC UPDATEO,LAB=094
//STEP095     EXEC UPDATEO,LAB=095
//STEP096     EXEC UPDATEO,LAB=096
//STEP097     EXEC UPDATEO,LAB=097
//STEP098     EXEC UPDATEO,LAB=098
//STEP099     EXEC GENERO,LAB=099,FM=FB,LR=251,BKI=32630,BKO=4267
//STEP100     EXEC UPDATEO,LAB=100
