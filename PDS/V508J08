//SBGOLOBE JOB ,'SAM GOLOB',CLASS=A,
//    MSGCLASS=X,NOTIFY=&SYSUID
//*
//* THIS JOB IS NOW SPLIT INTO SEVEN SEPARATE JOBS BECAUSE OF
//* IBM'S RESTRICTION THAT A JOB MAY NOT HAVE MORE THAN
//* 255 STEPS. THE FIRST JOB HAS 200 STEPS THE SECOND THE REST.
//* THE SEVENTH JOB WILL LOAD FILE 001 OF THE TAPE INTO A PRE-
//* DEFINED VSAM CLUSTER FOR INFO/MVS DATABASE PROCESSING (YOU
//* HAVE TO HAVE INFOMVS).
//*
//*
//*  YOU MAY HAVE A PROBLEM WITH SOME OF THESE FILES THAT ARE
//*  IEBCOPIED DOWN IF YOU TRY TO DROP TO A NON-3350 TYPE
//*  DEVICE SINCE MOST INPUT WAS FULL TRACK BLOCKED ON A 3350.
//*  THE ORIGINAL DCB'S ARE MARKED BELOW. YOU CAN DROP DOWN LOAD
//*  MODULES INTO A SMALLER BLOCKSIZE PDS, HOWEVER YOU WILL GET A
//*  WARNING MESSAGE AND YOU WILL NOT BE ABLE TO DO A COMPRESS
//*  IN PLACE ON THAT LIBRARY UNTIL YOU GET RID OF THE OFFENDING
//*  MEMBERS OR RELINK THEM BACK IN
//*
//*  YOU WILL GET THE FOLLOWING MESSAGE:
//*  IEB175I - WARNING INPUT RECORD IS GREATER THAN OUTPUT BLKSIZE
//*            DDNAME=XXXXXXXX,OUTPUT TTRN=00000000
//*
//*
//ASMFCL PROC  V1=CBT508,      -   INPUT TAPE VOLUME
//*            VO=CBTA01,      -   OUTPUT DASD VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             LAB=002,            INPUT TAPE LABEL NUMBER FOR PROGRAM
//             CLASS=A,        -   SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             WORK2=SYSDA,        DASD WORK TYPE
//             INDEX='CBT.V508', - FIRST LEVEL INDEX FOR DSNAME
//             DSP=PASS,           OUTPUT DATASET DISPOSITION
//             UNT=562,        -   TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=1,              PRIMARY ALLOCATION
//             SEC=1,              SECONDARY ALLOCATION
//             DIR=1,              NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             FM=FB               RECFM
//ASM     EXEC  PGM=ASMA90,REGION=1024K,COND=EVEN,PARM='OBJECT,NODECK'
//*SM     EXEC  PGM=IEV90,REGION=1024K,COND=EVEN,PARM='OBJECT,NODECK'
//SYSPRINT DD  SYSOUT=&CLASS
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.MODGEN,DISP=SHR
//SYSUT1   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT2   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT3   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSPUNCH DD  DUMMY
//SYSLIN   DD  DSN=&INDEX..FILE&LAB..OBJ,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE) VOL=SER=&VO
//SYSIN    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//LKED     EXEC  PGM=IEWL,REGION=600K,COND=(4,LT,ASM),PARM=LIST
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT1   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSLMOD  DD  DSN=&INDEX..FILE&LAB..LOAD(&P),DISP=(NEW,&DSP),
//             UNIT=&WORK1,
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE) VOL=SER=&VO
//SYSLIN   DD  DSN=&INDEX..FILE&LAB..OBJ,DISP=(OLD,&DSP),
//             LABEL=(&LAB,&TY)
//       PEND
//COPY   PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             WORK2=SYSDA,        DASD WORK TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=PDS,           THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             DIR=92,             NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK           ALLOC INCREMENT
//COPY     EXEC  PGM=IEBCOPY,REGION=600K,COND=EVEN
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT3   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT4   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT1   DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE),VOL=SER=&VO
//SYSIN    DD  DUMMY
//       PEND
//GENERO PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=DATA,          THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//GENER    EXEC  PGM=IEBGENER,REGION=600K,COND=EVEN
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT1   DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE),VOL=SER=&VO
//SYSIN    DD  DUMMY
//       PEND
//UPDATEO PROC V1=CBT508,          INPUT TAPE VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             P1=PDSLOAD,    (ISPF STATS AND MUCH QUICKER - USE THIS
//*                             PROGRAM INSTEAD OF IEBUPDTE. FILE 093)
//*            P1=IEBUPDTE,   PROGRAM TO PROCESS IEBUPDTE SYSIN
//*                           STREAM. YOU MAY USE THE NORMAL IBM PGM
//*                           OR YOU MAY HAVE INSTALLED THE PDSLOAD
//*                           PROGRAM FROM FILE 316 OF THE CBT TAPE
//*                           WHICH IS USEFUL FOR FILES UNLOADED BY
//*                           THE FAMOUS YALE OFFLOAD PROGRAM. CAN
//*                           CHANGE THE IMBEDDED '><' TO './' AT
//*                           RELOAD.
//*   ---->                    IF PDSLOAD,  USE SYSUT1 DD
//*   ---->                    IF IEBUPDTE, USE SYSIN  DD
//             STEPLB='CBT.V508.CBTCREAT.LOAD', LIBRARY CONTAINS PGM=P1
//             S='UPDTE(><)',      'NEW'           IF IEBUPDTE
//*   ---->                        'UPDTE(><)'     IF PDSLOAD
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=A,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=PDS,           THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             DIR=92,             NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//UPDATE1  EXEC  PGM=&P,REGION=512K,COND=EVEN
//STEPLIB  DD  DSN=CBT.V508.CBTCREAT.LOAD,DISP=SHR
//INPUT    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=VB,LRECL=94,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//OUTPUT   DD  DSN=&&TEMP,DISP=(NEW,PASS),
//             UNIT=&WORK1,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE) VOL=SER=&VO
//UPDATE2  EXEC  PGM=&P1,PARM='&S',COND=EVEN
//STEPLIB  DD  DSN=&STEPLB,DISP=SHR
//SYSPRINT DD  SYSOUT=&CLASS     <<====  DUMMY OUT TO CUT PRINTOUT
//*                            IF PDSLOAD,  USE SYSUT1 DD
//*                            IF IEBUPDTE, USE SYSIN  DD
//*YSIN    DD  DSN=&&TEMP,DISP=(OLD,DELETE)
//SYSUPLOG DD  DISP=SHR,DSN=CBT.V508.SYSUPLOG(FILE&LAB)
//SYSUT1   DD  DSN=&&TEMP,DISP=(OLD,DELETE)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE),VOL=SER=&VO
//       PEND
//GENER  PROC  V1=CBT508,          INPUT TAPE VOLUME
//             VO=CBTA01,          OUTPUT DASD VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             LAB=,               INPUT TAPE LABEL NUMBER
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='CBT.V508',   FIRST LEVEL INDEX FOR DSNAME
//             TYPE=DATA,          THIRD LEVEL TYPE FOR DSNAME
//             DSP=CATLG,          OUTPUT DATASET DISPOSITION
//             UNT=562,            TYPE UNIT NAME
//             TY=NL,              TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32716,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//GENER    EXEC  PGM=&P,REGION=512K,COND=EVEN
//STEPLIB  DD  DSN=CBT.V508.CBTCREAT.LOAD,DISP=SHR
//INPUT    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=VB,LRECL=94,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//OUTPUT   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE),VOL=SER=&VO
//       PEND
//STEP701     EXEC UPDATEO,LAB=701
//STEP702     EXEC UPDATEO,LAB=702
//STEP703     EXEC UPDATEO,LAB=703
//STEP704     EXEC UPDATEO,LAB=704
//STEP705     EXEC UPDATEO,LAB=705
//STEP706     EXEC COPY,LAB=706
//STEP707     EXEC UPDATEO,LAB=707
//STEP708     EXEC UPDATEO,LAB=708
//STEP709     EXEC UPDATEO,LAB=709
//STEP710     EXEC UPDATEO,LAB=710
//STEP711     EXEC UPDATEO,LAB=711
//STEP712     EXEC UPDATEO,LAB=712
//STEP713     EXEC UPDATEO,LAB=713
//STEP714     EXEC UPDATEO,LAB=714
//STEP715     EXEC UPDATEO,LAB=715
//STEP716     EXEC UPDATEO,LAB=716
//STEP717     EXEC UPDATEO,LAB=717
//STEP718     EXEC UPDATEO,LAB=718
//STEP719     EXEC UPDATEO,LAB=719
//STEP720     EXEC UPDATEO,LAB=720
//STEP721     EXEC UPDATEO,LAB=721
//STEP722     EXEC UPDATEO,LAB=722
//STEP723     EXEC UPDATEO,LAB=723
//STEP724     EXEC UPDATEO,LAB=724
//STEP725     EXEC UPDATEO,LAB=725
//STEP726     EXEC UPDATEO,LAB=726
//STEP727     EXEC UPDATEO,LAB=727
//STEP728     EXEC UPDATEO,LAB=728
//STEP729     EXEC UPDATEO,LAB=729
//STEP730     EXEC UPDATEO,LAB=730
//STEP731     EXEC UPDATEO,LAB=731
//STEP732     EXEC UPDATEO,LAB=732
//STEP733     EXEC UPDATEO,LAB=733
//STEP734     EXEC UPDATEO,LAB=734
//STEP735     EXEC UPDATEO,LAB=735
//STEP736     EXEC UPDATEO,LAB=736
//STEP737     EXEC UPDATEO,LAB=737
//STEP738     EXEC UPDATEO,LAB=738
//STEP739     EXEC UPDATEO,LAB=739
//STEP740     EXEC UPDATEO,LAB=740
//STEP741     EXEC UPDATEO,LAB=741
//STEP742     EXEC UPDATEO,LAB=742
//STEP743     EXEC UPDATEO,LAB=743
//STEP744     EXEC UPDATEO,LAB=744
//STEP745     EXEC UPDATEO,LAB=745
//STEP746     EXEC UPDATEO,LAB=746
//STEP747     EXEC UPDATEO,LAB=747
//STEP748     EXEC UPDATEO,LAB=748
//STEP749     EXEC UPDATEO,LAB=749
//STEP750     EXEC UPDATEO,LAB=750
//STEP751     EXEC UPDATEO,LAB=751
//STEP752     EXEC UPDATEO,LAB=752
//STEP753     EXEC UPDATEO,LAB=753
//STEP754     EXEC UPDATEO,LAB=754
//STEP755     EXEC UPDATEO,LAB=755
//STEP756     EXEC UPDATEO,LAB=756
//STEP757     EXEC UPDATEO,LAB=757
//STEP758     EXEC UPDATEO,LAB=758
//STEP759     EXEC UPDATEO,LAB=759
//STEP760     EXEC UPDATEO,LAB=760
//STEP761     EXEC UPDATEO,LAB=761
//STEP762     EXEC UPDATEO,LAB=762
//STEP763     EXEC UPDATEO,LAB=763
//STEP764     EXEC UPDATEO,LAB=764
//STEP765     EXEC UPDATEO,LAB=765
//STEP766     EXEC UPDATEO,LAB=766
//STEP767     EXEC UPDATEO,LAB=767
//STEP768     EXEC UPDATEO,LAB=768
//STEP769     EXEC UPDATEO,LAB=769
//STEP770     EXEC UPDATEO,LAB=770
//STEP771     EXEC UPDATEO,LAB=771
//STEP772     EXEC UPDATEO,LAB=772
//STEP773     EXEC UPDATEO,LAB=773
//STEP774     EXEC UPDATEO,LAB=774
//STEP775     EXEC UPDATEO,LAB=775
//STEP776     EXEC UPDATEO,LAB=776
//STEP777     EXEC UPDATEO,LAB=777
//STEP778     EXEC UPDATEO,LAB=778
//STEP779     EXEC UPDATEO,LAB=779
//STEP780     EXEC UPDATEO,LAB=780
//STEP781     EXEC UPDATEO,LAB=781
//STEP782     EXEC UPDATEO,LAB=782
//STEP783     EXEC UPDATEO,LAB=783
//STEP784     EXEC UPDATEO,LAB=784
//STEP785     EXEC UPDATEO,LAB=785
//STEP786     EXEC UPDATEO,LAB=786
//STEP787     EXEC UPDATEO,LAB=787
//STEP788     EXEC UPDATEO,LAB=788
//STEP789     EXEC UPDATEO,LAB=789
//STEP790     EXEC UPDATEO,LAB=790
//STEP791     EXEC UPDATEO,LAB=791
//STEP792     EXEC UPDATEO,LAB=792
//STEP793     EXEC UPDATEO,LAB=793
//STEP794     EXEC UPDATEO,LAB=794
//STEP795     EXEC UPDATEO,LAB=795
//STEP796     EXEC UPDATEO,LAB=796
//STEP797     EXEC UPDATEO,LAB=797
//STEP798     EXEC UPDATEO,LAB=798
//STEP799     EXEC UPDATEO,LAB=799
//STEP800     EXEC UPDATEO,LAB=800
