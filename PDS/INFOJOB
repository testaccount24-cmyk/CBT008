//JOB10 JOB
//*********************************************************
//*                                                       *
//*  THIS IS A JOB THAT USED TO BE USED, IN ORDER TO LOAD *
//*  AN INFO-MVS DATABASE WITH CBT TAPE MATERALS.         *
//*                                                       *
//*********************************************************
//* WHEN YOU LOAD THE DATBASE BY PROCESSING THROUGH       *
//* STEP7  YOU WILL GET A LOT OF LINES THAT ARE           *
//* REJECTED SOME 15,000 + LINES - THAT IS NORMAL         *
//* JUST DON'T PRINT THAT SYSOUT DD STATEMENT             *
//*********************************************************
//*
//* LOAD MVSMODS INFO DATABASE OFF OF FILE 001
//* THIS JOB REQUIRES A PREF-DEFINED VSAM CLUSTER
//* TO HOLD THE DATA.
//* THE DATASET NAME IS REQUIRED IN STEP8 ON DDNAME CARD 'OZVSAM'
//*
//* ASMFCL - ASSEMBLE DECOMPRESSION PROGRAM
//* STEP2  - LOAD FILE 42          (CHANGED -- WAS FILE 004)
//* STEP3  - LOAD FILE 43          (CHANGED -- WAS FILE 005)
//* STEP4  - CONVERT FILE 42 INTO A PDS
//* STEP5  - ASSEMBLE, LINK, AND EXECUTE THE CBTINFO PROGRAM
//* STEP6  - COMBINE OUTPUT FROM CBTINFO PROGRAM WITH FILE 43
//* STEP7  - BLGOZB
//* STEP8  - BLGOZC
//*
//ASMFCL PROC  V1=022156,      -   INPUT TAPE VOLUME
//*            VO=,            -   OUTPUT DASD VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             LAB=002,            INPUT TAPE LABEL NUMBER FOR PROGRAM
//             CLASS=Z,        -   SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             WORK2=SYSDA,        DASD WORK TYPE
//             INDEX='TS.CBT', -   FIRST LEVEL INDEX FOR DSNAME
//             DSP=PASS,           OUTPUT DATASET DISPOSITION
//             UNT=TAPE,       -   TYPE UNIT NAME
//             TY=NL,          -   TAPE FILE LABEL
//             PRI=1,              PRIMARY ALLOCATION
//             SEC=1,              SECONDARY ALLOCATION
//             DIR=1,              NUMBER OF DIRECTORY BLOCKS
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             FM=FB               RECFM
//ASM     EXEC  PGM=ASMA90,REGION=1024K,COND=EVEN,PARM='OBJECT,NODECK'
//*SM     EXEC  PGM=IEV90,REGION=1024K,COND=EVEN,PARM='OBJECT,NODECK'
//SYSPRINT DD  SYSOUT=&CLASS
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.AMODGEN,DISP=SHR
//SYSUT1   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT2   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSUT3   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSPUNCH DD  DUMMY
//SYSLIN   DD  DSN=&INDEX..FILE&LAB..OBJ,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE) VOL=SER=&VO
//SYSIN    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//LKED     EXEC  PGM=IEWL,REGION=600K,COND=(4,LT,ASM),PARM=LIST
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT1   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2
//SYSLMOD  DD  DSN=&INDEX..FILE&LAB..LOAD(&P),DISP=(NEW,&DSP),
//             UNIT=&WORK1,
//             SPACE=(&ALLOC,(&PRI,&SEC,&DIR),RLSE) VOL=SER=&VO
//SYSLIN   DD  DSN=&INDEX..FILE&LAB..OBJ,DISP=(OLD,&DSP),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//       PEND
//GENERO PROC  V1=ANY,             INPUT TAPE VOLUME
//             VO=,                OUTPUT DASD VOLUME
//             LAB=,               INPUT TAPE LABEL NUMBER
//             CLASS=Z,            SYSOUT CLASS
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='TS.CBT',     FIRST LEVEL INDEX FOR DSNAME
//             TYPE=DATA,          THIRD LEVEL TYPE FOR DSNAME
//             DSP=PASS,           OUTPUT DATASET DISPOSITION
//             UNT=TAPE,           TYPE UNIT NAME
//             TY=NL,           -  TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32720,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//GENER    EXEC  PGM=IEBGENER,REGION=600K,COND=EVEN
//SYSPRINT DD  SYSOUT=&CLASS
//SYSUT1   DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE),VOL=SER=&VO
//SYSIN    DD  DUMMY
//       PEND
//GENER  PROC  V1=022156,          INPUT TAPE VOLUME
//             VO=,                OUTPUT DASD VOLUME
//             P=CBT973,           DECOMPRESSION PROGRAM
//             LAB=,               INPUT TAPE LABEL NUMBER
//             WORK1=SYSDA,        DASD OUTPUT TYPE
//             INDEX='TS.CBT',     FIRST LEVEL INDEX FOR DSNAME
//             TYPE=DATA,          THIRD LEVEL TYPE FOR DSNAME
//             DSP=PASS,           OUTPUT DATASET DISPOSITION
//             UNT=TAPE,           TYPE UNIT NAME
//             TY=NL,           -  TAPE FILE LABEL
//             PRI=190,            PRIMARY ALLOCATION
//             SEC=190,            SECONDARY ALLOCATION
//             ALLOC=TRK,          ALLOC INCREMENT
//             LR=80,              LRECL
//             BKI=32716,          INPUT BLOCKSIZE
//             BKO=5600,           OUTPUT BLOCKSIZE
//             FM=FB               RECFM
//GENER    EXEC  PGM=&P,REGION=512K,COND=EVEN
//STEPLIB  DD  DSN=*.ASMFCL.LKED.SYSLMOD,DISP=(SHR,PASS)
//INPUT    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),
//             DCB=(RECFM=VB,LRECL=94,BLKSIZE=&BKI),
//             LABEL=(&LAB,&TY,EXPDT=98000)
//OUTPUT   DD  DSN=&INDEX..FILE&LAB..&TYPE,DISP=(NEW,&DSP),
//             UNIT=&WORK1,FREE=CLOSE,
//             DCB=(RECFM=&FM,LRECL=&LR,BLKSIZE=&BKO),
//             SPACE=(&ALLOC,(&PRI,&SEC),RLSE),VOL=SER=&VO
//       PEND
//ASMFCL  EXEC ASMFCL
//STEP2   EXEC GENER,LAB=042 BAM
//STEP3   EXEC GENERO,LAB=043,FM=VB,LR=255,BKI=32760,BKO=3120 BAM
//STEP4   EXEC PGM=IEBUPDTE,PARM=NEW
//SYSPRINT DD  SYSOUT=A
//SYSUT2   DD  DSN=TS.CBT.FILE042.PDS,UNIT=&WORK1,DISP=(,PASS),
//             SPACE=(TRK,(10,10,10)),
//             DCB=(LRECL=80,BLKSIZE=6160,RECFM=FB)
//SYSIN    DD  DSN=TS.CBT.FILE042.DATA,DISP=(OLD,DELETE)
//STEP5   EXEC ASMFCLG,REGION.GO=4096K
//ASM.SYSIN DD DSN=TS.CBT.FILE042.PDS(PROGRAM),DISP=(SHR,PASS)
//GO.SYSIN DD  DSN=TS.CBT.FILE042.PDS(KEYWORDS),DISP=(SHR,DELETE)
//FILEIN   DD  UNIT=TAPE,VOL=SER=022156,DISP=(OLD,PASS),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=32720),
//             LABEL=(1,NL,EXPDT=98000)
//FILEOUT  DD  DSN=&&CBTINFO,DISP=(,PASS),
//             UNIT=&WORK1,SPACE=(CYL,(20,5)),
//             DCB=(RECFM=VB,LRECL=255,BLKSIZE=3120,DSORG=PS)
//SYSUDUMP DD  SYSOUT=A
//STEP6   EXEC PGM=IEBGENER
//SYSPRINT DD  SYSOUT=A
//SYSUT1   DD  DSN=TS.CBT.FILE043.DATA,DISP=(SHR,DELETE)
//SYSUT2   DD  DSN=&&CBTINFO,DISP=(MOD,PASS)
//SYSIN    DD  DUMMY
//STEP7   EXEC PGM=BLGOZB
//*
//* EXPECT A LOT OF WARNING MESSAGES - IT IS PERFECTLY NORMAL
//*
//FILE     DD  DSN=&&CBTINFO,DISP=(SHR,DELETE)
//SORTMSG  DD  DUMMY SYSOUT=A
//SYSPRINT DD  DUMMY SYSOUT=A
//SYSOUT   DD  DUMMY SYSOUT=A
//SORTLIB  DD  DSN=SYS1.SORTLIB,DISP=SHR
//SORTIN   DD  UNIT=&WORK1,SPACE=(CYL,(10,10)),
//         DCB=(RECFM=FB,LRECL=22,BLKSIZE=6600)
//SORTOUT  DD  UNIT=&WORK1,SPACE=(CYL,(10,10)),
//         DCB=(RECFM=FB,LRECL=22,BLKSIZE=6600)
//SORTWK01 DD  UNIT=&WORK1,SPACE=(CYL,(10,10))
//SORTWK02 DD  UNIT=&WORK1,SPACE=(CYL,(10,10))
//SORTWK03 DD  UNIT=&WORK1,SPACE=(CYL,(10,10))
//TAPE     DD  DSN=&&CBTOZB,DISP=(,PASS),
//             UNIT=&WORK1,SPACE=(CYL,(20,5)),
//             DCB=(RECFM=VB,LRECL=255,BLKSIZE=3120,DSORG=PS)
//STEP8   EXEC PGM=BLGOZC
//TAPE     DD  DSN=&&CBTOZB,DISP=(SHR,DELETE)
//OZVSAM   DD  DSN=SYS1.CBT.OZ,DISP=OLD           /* YOUR DSN */
//SYSPRINT DD  SYSOUT=A
//SYSIN    DD  *
$SELECT *
